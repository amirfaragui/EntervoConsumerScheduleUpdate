{"version":3,"file":"kendo.pivot.configurator.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendopivot","configurator","js","this","$","undefined$1","kendo","window","ui","encode","htmlEncode","Widget","common","pivotgrid","fetchDiscover","configuratorReducer","ConfiguratorNavigation","PIVOT_CONFIGURATOR_ACTION","ns","HOVER_EVENTS","SETTING_CONTAINER_TEMPLATE","name","addKPI","data","found","idx","length","type","splice","caption","defaultHierarchy","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","target","closest","PivotConfiguratorV2","extend","init","element","options","fn","call","_ariaId","attr","guid","addClass","role","_dataSource","navigatable","_initPivotGridConfiguratorNavigation","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","rows","setDataSource","dataSource","that","configuratorNavigation","tabIndex","start","firstCell","first","setAttribute","_refreshHandler","unbind","_errorHandler","_progressHandler","_error","bind","_requestStart","PivotDataSourceV2","create","horizontal","panel","append","headerTextId","SETTINGS_TEMPLATE","appendTo","formClass","ariaId","CONTENT_TEMPLATE","find","each","index","elm","html","renderChipList","_fields","cancelText","applyText","ACTIONS_TEMPLATE","_targets","on","_actions","e","preventDefault","currentTarget","_applyState","read","_cancelChanges","treeView","last","targetItemTemplate","menuenabled","chip","renderChip","TARGET_ITEM_TEMPLATE","fillMode","themeColor","rounded","removable","removeIcon","actions","icon","_createTarget","template","connectWith","empty","fieldMenu","setting","forEach","x","PivotSettingTargetV2","hint","clone","remove","item","wrapper","id","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","result","hasChildren","aggregator","local","uid","dataTextField","autoBind","check","sender","action","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","cubeSchema","restoreMeasure","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","transport","fields","dsMeasures","catalog","cube","fetchOptions","url","members","concat","isEmptyObject","dimensions","success","connection","restrictions","catalogName","cubeName","command","then","newFields","get","_getKPIOptions","buildKPImeasures","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","hierarchyUniqueName","_progress","toggle","progress","destroy","fetch","plugin","PivotConfigurator","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","kpi","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","measure","drag","status","dropTarget","validate","setStatusClass","drop","push","add","sortIcon","getIcons","PivotSettingTarget","emptyTemplate","columnsContainer","rowsContainer","measuresContainer","_toggleHover","toggleClass","_resize","_cube","_catalog","kpiMeasure","value","goal","trend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","jQuery"],"sources":["kendo.pivot.configurator.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.dom.js'), require('kendo.html.chip.js'), require('kendo.html.chiplist.js'), require('kendo.pivot.common.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.dom', 'kendo.html.chip', 'kendo.html.chiplist', 'kendo.pivot.common', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendopivot = global.kendopivot || {}, global.kendopivot.configurator = global.kendopivot.configurator || {}, global.kendopivot.configurator.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"pivot.configurator\",\n        name: \"PivotConfigurator\",\n        category: \"web\",\n        depends: [ \"dropdownlist\", \"treeview\", \"treeview.draganddrop\", \"pivot.fieldmenu\", \"html.chip\", \"html.chiplist\", \"pivot.common\", \"icons\" ],\n        hidden: true\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Widget = ui.Widget,\n            common = window.kendo.pivotgrid.common,\n            fetchDiscover = common.fetchDiscover,\n            configuratorReducer = common.configuratorReducer,\n            ConfiguratorNavigation = common.ConfiguratorNavigation,\n            PIVOT_CONFIGURATOR_ACTION = common.PIVOT_CONFIGURATOR_ACTION,\n            ns = \".kendoPivotConfigurator\",\n            HOVER_EVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            SETTINGS_TEMPLATE = ({ title, headerTextId }) => '<div class=\"k-pivotgrid-configurator-header\">' +\n                                                `<div class=\"k-pivotgrid-configurator-header-text\" id=\"${headerTextId}\">${encode(title)}</div>` +\n                                              '</div>',\n            CONTENT_TEMPLATE = ({ formClass, horizontal, ariaId }) => '<div class=\"k-pivotgrid-configurator-content\">' +\n                `<form class=\"${encode(formClass)}\">` +\n                    `${horizontal ? '<div class=\"k-form-field-wrapper\">' : ''}` +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-fields\">Fields</label>` +\n                    '</div>' +\n                    '<div class=\"k-form-field\">' +\n                      '<div class=\"k-fields-list-wrapper\"></div>' +\n                    '</div>' +\n                    `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-columns\">Columns</label>` +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-column-fields\"></div>' +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-rows\">Rows</label>` +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-row-fields\"></div>' +\n                    `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-values\">Values</label>` +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-column-fields\"></div>' +\n                    `${horizontal ? '</div>' : ''}` +\n                '</form>' +\n            '</div>',\n            TARGET_ITEM_TEMPLATE = ({ name }) => '<span>' +\n                    `<span class=\"k-chip-label\">${encode(name)}</span>` +\n                '</span>',\n            ACTIONS_TEMPLATE = ({ cancelText, applyText }) =>\n                    '<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' +\n                      '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" aria-disabled=\"false\">' +\n                        `<span class=\"k-button-text\">${encode(cancelText)}</span>` +\n                      '</button>' +\n                      '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\" aria-disabled=\"false\">' +\n                        `<span class=\"k-button-text\">${encode(applyText)}</span>` +\n                      '</button>' +\n                    '</div>',\n            SETTING_CONTAINER_TEMPLATE = ({ name }) => `<div class=\"k-pivotgrid-target k-pivotgrid-configurator-section\"><strong>${encode(name)}</strong><div class=\"k-pivotgrid-target-wrap\"></div>`;\n\n        function addKPI(data) {\n            var found;\n            var idx = 0;\n            var length = data.length;\n\n            for (; idx < length; idx++) {\n                if (data[idx].type == 2) {\n                    found = true;\n                    break;\n                }\n            }\n\n            if (found) {\n                data.splice(idx + 1, 0, {\n                    caption: \"KPIs\",\n                    defaultHierarchy: \"[KPIs]\",\n                    name: \"KPIs\",\n                    uniqueName: \"[KPIs]\"\n                });\n            }\n        }\n\n        function kpiNode(node) {\n            return {\n                name: node.uniqueName,\n                type: node.type\n            };\n        }\n\n        function normalizeKPIs(data) {\n            for (var idx = 0, length = data.length; idx < length; idx++) {\n                data[idx].uniqueName = data[idx].name;\n                data[idx].type = \"kpi\";\n            }\n\n            return data;\n        }\n\n        function settingTargetFromNode(node) {\n            var target = $(node).closest(\".k-pivot-setting\");\n\n            if (target.length) {\n                return target.data(\"kendoPivotSettingTarget\");\n            }\n            return null;\n        }\n\n        function getIcons(sortIcon, options) {\n            var sortable = options.sortable;\n            var result = '';\n\n            if (sortable) {\n                result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n            }\n\n            if (options.filterable || sortable) {\n                result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n            }\n\n            result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n\n            return result;\n        }\n\n        var PivotConfiguratorV2 = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this._ariaId = this.element.attr(\"id\") || kendo.guid();\n                this.element.addClass(\"k-widget k-pivotgrid-configurator k-pos-relative\");\n                this.element.attr({\n                    \"role\": \"dialog\",\n                    \"aria-hidden\": true,\n                    \"aria-labelledby\": `${this._ariaId}-configurator-header`\n                });\n\n                this._dataSource();\n\n                if (this.options.navigatable) {\n                    this._initPivotGridConfiguratorNavigation();\n                }\n\n                this._layout();\n\n                this.refresh();\n\n                if (options.height) {\n                    this.element.height(options.height);\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [],\n\n            options: {\n                name: \"PivotConfiguratorV2\",\n                orientation: \"vertical\",\n                filterable: false,\n                sortable: false,\n                messages: {\n                    title: \"Settings\",\n                    cancelButtonText: \"Cancel\",\n                    applyButtonText: \"Apply\",\n                    measures: \"Select some fields to begin setup\",\n                    columns: \"Select some fields to begin setup\",\n                    rows: \"Select some fields to begin setup\"\n                }\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n\n                this.refresh();\n            },\n\n            _initPivotGridConfiguratorNavigation: function() {\n                var that = this;\n                that.configuratorNavigation = new ConfiguratorNavigation({ tabIndex: 0 });\n                that.configuratorNavigation.start(that.element[0]);\n\n                const firstCell = that.configuratorNavigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler)\n                                   .unbind(\"error\", that._errorHandler)\n                                   .unbind(\"progress\", that._progressHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n                that.dataSource.bind(\"change\", that._refreshHandler)\n                               .bind(\"error\", that._errorHandler)\n                               .bind(\"progress\", that._progressHandler);\n            },\n\n            _layout: function() {\n\n                var that = this;\n                var options = that.options;\n                var messages = options.messages;\n                var horizontal = options.orientation == \"horizontal\";\n\n                var panel = $(\"<div class='k-pivotgrid-configurator-panel k-pivotgrid-configurator-push'></div>\");\n\n                panel.addClass(horizontal ? \"k-pivotgrid-configurator-horizontal\" : \"k-pivotgrid-configurator-vertical\");\n\n                that.element.append(panel);\n\n                that.panel = panel;\n\n                $(SETTINGS_TEMPLATE({ title: this.options.messages.title, headerTextId: `${that._ariaId}-configurator-header` })).appendTo(that.panel);\n\n                $(CONTENT_TEMPLATE({ formClass: horizontal ? \"k-form k-form-horizontal\" : \"k-form\", filterable: options.filterable, horizontal: horizontal, ariaId: that._ariaId }))\n                    .appendTo(that.panel).find(\".k-chip-list\")\n                    .each(function(index, elm) {\n                        kendo.html.renderChipList(elm, $.extend({}, options));\n                        $(elm).attr({\n                            \"role\": \"listbox\",\n                            \"aria-orientation\": \"horizontal\",\n                        });\n                    });\n\n                that._fields();\n                $(ACTIONS_TEMPLATE({ cancelText: messages.cancelButtonText, applyText: messages.applyButtonText })).appendTo(that.panel);\n                that._targets();\n\n                that.element.on(\"click\" + ns, \".k-pivotgrid-configurator-actions > button\", that._actions.bind(that));\n            },\n\n            _actions: function(e) {\n                e.preventDefault();\n\n                var target = $(e.currentTarget).closest(\":not(path,svg)\");\n                if (target.index()) {\n                    this.columns._applyState();\n                    this.rows._applyState();\n                    this.measures._applyState();\n                    this.dataSource.read();\n                } else {\n                    this.columns._cancelChanges();\n                    this.rows._cancelChanges();\n                    this.measures._cancelChanges();\n                    this.treeView.dataSource.read();\n                }\n            },\n\n            _targets: function() {\n                var that = this;\n                var columns = that.panel.find(\".k-column-fields\").first();\n                var rows = that.panel.find(\".k-row-fields\");\n                var measures = that.panel.find(\".k-chip-list\").last();\n                var options = this.options;\n\n                var targetItemTemplate = ({ name, menuenabled }) => {\n                        var chip = kendo.html.renderChip(TARGET_ITEM_TEMPLATE({ name, menuenabled }), $.extend({}, options, {\n                            fillMode: \"solid\",\n                            themeColor: \"base\",\n                            rounded: \"full\",\n                            removable: true,\n                            removeIcon: \"x-circle\",\n                            actions: menuenabled ? [\n                                { icon: \"more-vertical\" }\n                            ] : null\n                        }));\n\n                        return chip;\n                    };\n\n                this.columns = this._createTarget(columns, {\n                    navigatable: options.navigatable,\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    connectWith: rows,\n                    messages: {\n                        empty: options.messages.columns,\n                        fieldMenu: this.options.messages.fieldMenu\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n                this.columns.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-columns`);\n\n                this.rows = this._createTarget(rows, {\n                    navigatable: options.navigatable,\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    setting: \"rows\",\n                    connectWith: columns,\n                    messages: {\n                        empty: this.options.messages.rows,\n                        fieldMenu: this.options.messages.fieldMenu\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n                this.rows.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-rows`);\n\n                this.measures = this._createTarget(measures, {\n                    navigatable: options.navigatable,\n                    filterable: false,\n                    sortable: false,\n                    setting: \"measures\",\n                    template: targetItemTemplate,\n                    messages: {\n                        empty: options.messages.measures,\n                        fieldMenu: this.options.messages.fieldMenu\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n\n                this.measures.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-values`);\n\n                [this.columns, this.rows, this.measures].forEach(x=> x.element.find(\".k-chip\").attr(\"role\", \"option\"));\n            },\n\n            _createTarget: function(element, options) {\n                var that = this;\n                return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                    dataSource: this.dataSource,\n                    hint: function(element) {\n                        return element.clone();\n                    },\n                    remove: function(e) {\n                        var item = that.treeView.wrapper\n                            .find(\"[data-name='\" + e.name + \"']\")\n                            .closest(\"li\");\n                        var id = item.attr(kendo.attr(\"uid\"));\n                        var dataItem = that.treeView.dataSource.getByUid(id);\n\n                        if (dataItem) {\n                            dataItem.checked = false;\n                            item.find(\"input\").attr(\"checked\", false);\n                        }\n                    },\n                    template: options.template\n                }, options));\n            },\n\n            _fields: function() {\n                var that = this;\n                var container = that.element.find(\".k-fields-list-wrapper\");\n\n                this.treeView = $(`<div aria-labelledby=\"${this._ariaId}-configurator-header ${this._ariaId}-configurator-fields\" />`).appendTo(container)\n                    .kendoTreeView({\n                        checkboxes: {\n                            checkChildren: true,\n                            template: ({ item }) => {\n                                var result = '';\n\n                                if ((item.hasChildren || item.aggregator || item.local) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\" && item.uniqueName !== \"Measures\") {\n                                    result += `<input type=\"checkbox\" data-name=\"${encode(item.uniqueName)}\" ${item.checked ? \"checked\" : \"\"} class=\"k-checkbox k-checkbox-md k-rounded-md\" id=\"${encode(item.uid)}\" tabindex=\"-1\">`;\n                                }\n\n                                return result;\n                            }\n                        },\n                        dataTextField: \"caption\",\n                        autoBind: false,\n                        check: function(e) {\n                          var dataItem = e.sender.dataItem(e.node);\n                          var action = {\n                            type: PIVOT_CONFIGURATOR_ACTION.toggleSelection,\n                            payload: dataItem\n                          };\n                          var state = {\n                            columnAxes: that.columns._state(),\n                            rowAxes: that.rows._state(),\n                            measureAxes: that.measures._state()\n                          };\n                          var result = configuratorReducer(state, action);\n\n                          if (that.dataSource.cubeSchema && result.measureAxes && result.measureAxes.length &&\n                            result.measureAxes.length > state.measureAxes.length) {\n                              that.dataSource.cubeSchema.restoreMeasure(result.measureAxes, dataItem);\n                          }\n\n                          if (dataItem.defaultHierarchy && dataItem.items && dataItem.items.length) {\n                              that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                              dataItem.items.trigger(\"change\");\n                          }\n\n                          if (result.columnAxes) {\n                              that.columns._state(result.columnAxes);\n                              that.columns._redraw();\n                          }\n                          if (result.rowAxes) {\n                              that.rows._state(result.rowAxes);\n                              that.rows._redraw();\n                          }\n                          if (result.measureAxes) {\n                              that.measures._state(result.measureAxes);\n                              that.measures._redraw();\n                          }\n                        },\n                        dataSource: this._treeViewDataSource()\n                     })\n                    .data(\"kendoTreeView\");\n\n                this.treeView.wrapper.off(\"click\", this.treeView._clickHandler);\n            },\n\n            _treeViewDataSource: function() {\n                var that = this;\n\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: \"uniqueName\",\n                            hasChildren: function(item) {\n                                if (that.dataSource.cubeSchema && item.uniqueName !== \"Measures\") {\n                                    item.local = true;\n                                    return false;\n                                }\n                                return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function(options) {\n                            var node;\n                            var transport = that.dataSource.transport;\n                            var catalog = transport.catalog();\n                            var cube = transport.cube();\n                            var fetchOptions = {\n                                url: transport.options.read\n                            };\n                            var columns = that.columns._state();\n                            var rows = that.rows._state();\n                            var measures = that.measures._state();\n                            var members = columns.concat(rows).concat(measures);\n                            var fields;\n                            var dsMeasures;\n                            var fetchOpts;\n\n                            if ($.isEmptyObject(options.data)) {\n                                if (that.dataSource.cubeSchema) {\n                                    fields = that.dataSource.cubeSchema.dimensions();\n                                    that._checkMembers(members, fields);\n                                    options.success(fields);\n                                } else {\n                                    fetchOpts = {\n                                        connection: {\n                                            catalog: catalog,\n                                            cube: cube\n                                        },\n                                        restrictions: {\n                                            catalogName: catalog,\n                                            cubeName: cube\n                                        },\n                                        command: 'schemaDimensions'\n                                    };\n\n                                    fetchDiscover(fetchOptions, fetchOpts)\n                                        .then(function(newFields) {\n                                            that._checkMembers(members, newFields);\n                                            addKPI(newFields);\n                                            options.success(newFields);\n                                         });\n                                }\n                            } else {\n                                //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                                if (that.dataSource.cubeSchema) {\n                                    dsMeasures = that.dataSource.measures();\n                                    that._checkMembers(members, dsMeasures);\n                                    options.success(dsMeasures);\n                                } else {\n                                    if (node.uniqueName === \"[KPIs]\") {\n                                        fetchDiscover(fetchOptions, that._getKPIOptions(catalog, cube))\n                                        .then(function(newFields) {\n                                            options.success(normalizeKPIs(newFields));\n                                        });\n                                    } else if (node.type == \"kpi\") {\n                                        options.success(buildKPImeasures(node));\n                                    } else {\n                                        fetchDiscover(fetchOptions ,that._loadFieldsCommand(node, catalog, cube))\n                                        .then(function(newFields) {\n                                            that._checkMembers(members, newFields);\n                                            options.success(newFields);\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n\n            _checkMembers: function(members, newData) {\n                var hash = {};\n                var index = 0;\n\n                for (index = 0; index < members.length; index++) {\n                    hash[members[index].name] = true;\n                }\n\n                for (index = 0; index < newData.length; index++) {\n                    if (hash[newData[index].uniqueName]) {\n                        newData[index].checked = true;\n                    }\n                }\n            },\n\n            _getKPIOptions: function(catalog, cube) {\n                return {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube\n                    },\n                    command: 'schemaKPIs'\n                };\n            },\n\n            _loadFieldsCommand: function(field, catalog, cube) {\n                var command;\n                var dimensionUniqueName;\n                var hierarchyUniqueName;\n\n                if (field.type === 2) {\n                    command = 'schemaMeasures';\n                } else if (field.dimensionUniqueName) {\n                    command = 'schemaLevels';\n                    hierarchyUniqueName = field.uniqueName;\n                } else {\n                    command = 'schemaHierarchies';\n                    dimensionUniqueName = field.uniqueName;\n                }\n\n                var options = {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube,\n                        hierarchyUniqueName: hierarchyUniqueName,\n                        dimensionUniqueName: dimensionUniqueName\n                    },\n                    command: command\n                };\n\n                return options;\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(\"change\", this._refreshHandler);\n\n                this.element.off(ns);\n\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n\n                this.element = null;\n                this._refreshHandler = null;\n            },\n\n            refresh: function() {\n                if (this.treeView) {\n                    this.treeView.dataSource.fetch();\n                }\n\n                this._progress(false);\n            }\n\n        });\n\n        ui.plugin(PivotConfiguratorV2);\n\n        var PivotConfigurator = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this.element.addClass(\"k-pivotgrid-configurator-panel kendo-jquery\");\n\n                if (this.options.height) {\n                    this.element.outerHeight(this.options.height);\n                }\n\n                this._dataSource();\n\n                this._layout();\n\n                this.refresh();\n\n                kendo.notify(this);\n            },\n\n            events: [],\n\n            options: {\n                name: \"PivotConfigurator\",\n                filterable: false,\n                sortable: false,\n                messages: {\n                    measures: \"Drop Data Fields Here\",\n                    columns: \"Drop Column Fields Here\",\n                    rows: \"Drop Rows Fields Here\",\n                    measuresLabel: \"Measures\",\n                    columnsLabel: \"Columns\",\n                    rowsLabel: \"Rows\",\n                    fieldsLabel: \"Fields\"\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler)\n                                   .unbind(\"error\", that._errorHandler)\n                                   .unbind(\"progress\", that._progressHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n                that.dataSource.bind(\"change\", that._refreshHandler)\n                               .bind(\"error\", that._errorHandler)\n                               .bind(\"progress\", that._progressHandler);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n\n                this.refresh();\n            },\n\n            _treeViewDataSource: function() {\n                var that = this;\n\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: \"uniqueName\",\n                            hasChildren: function(item) {\n                                return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function(options) {\n                            var promise;\n                            var node;\n                            var kpi;\n\n                            if ($.isEmptyObject(options.data)) {\n                                promise = that.dataSource.schemaDimensions();\n\n                                promise.done(function(data) {\n                                            if (!that.dataSource.cubeBuilder) {\n                                                addKPI(data);\n                                            }\n                                            options.success(data);\n                                        })\n                                        .fail(options.error);\n                            } else {\n                                //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                                if (node.uniqueName === \"[KPIs]\") {\n                                    kpi = true;\n                                    promise = that.dataSource.schemaKPIs();\n                                    promise.done(function(data) {\n                                                options.success(normalizeKPIs(data));\n                                           })\n                                           .fail(options.error);\n                                } else if (node.type == \"kpi\") {\n                                    kpi = true;\n                                    options.success(buildKPImeasures(node));\n                                }\n\n                                if (!kpi) {\n                                    if (node.type == 2) { //measure\n                                        promise = that.dataSource.schemaMeasures();\n                                    } else if (node.dimensionUniqueName) { // hierarchy\n                                        promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                    } else { // dimension\n                                        promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                    }\n\n                                    promise.done(options.success)\n                                            .fail(options.error);\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _layout: function() {\n                $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n                this.form = this.element.find('.k-pivotgrid-configurator-content');\n\n                this._fields();\n                this._targets();\n            },\n\n            _fields: function() {\n                var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + encode(this.options.messages.fieldsLabel) + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n\n                var template = ({ item }) => {\n                    var result = '';\n\n                    if (item.type == 2 || item.uniqueName == \"[KPIs]\") {\n                        result += kendo.ui.icon(item.type == 2 ? \"sum\" : \"caret-alt-expand\"/* \"kpi\" */);\n                    } else if (item.type && item.type !== \"kpi\") {\n                        result += kendo.ui.icon(\"arrows-axes\");\n                    }\n\n                    result += `${encode(item.caption || item.name)}`;\n\n                    return result;\n                };\n\n                this.treeView = $(\"<div/>\").appendTo(container.find('.k-fields-list-wrapper'))\n                    .kendoTreeView({\n                        template: template,\n                        dataTextField: \"caption\",\n                        dragAndDrop: true,\n                        autoBind: false,\n                        dataSource: this._treeViewDataSource(),\n                        dragstart: function(e) {\n                            var dataItem = this.dataItem(e.sourceNode);\n\n                            if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === \"[KPIs]\") {\n                                e.preventDefault();\n                            }\n                        },\n                        drag: function(e) {\n                            var status = \"cancel\";\n                            var setting = settingTargetFromNode(e.dropTarget);\n\n                            if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                                status = \"plus\";\n                            }\n\n                            e.setStatusClass(status);\n                        },\n                        drop: function(e) {\n                            e.preventDefault();\n\n                            var setting = settingTargetFromNode(e.dropTarget);\n                            var node = this.dataItem(e.sourceNode);\n                            var idx, length, measures;\n                            var name;\n\n                            if (setting && setting.validate(node)) {\n                                name = node.defaultHierarchy || node.uniqueName;\n\n                                if (node.type === \"kpi\") {\n                                    measures = buildKPImeasures(node);\n                                    length = measures.length;\n                                    name = [];\n\n                                    for (idx = 0; idx < length; idx++) {\n                                        name.push(kpiNode(measures[idx]));\n                                    }\n                                } else if (node.kpi) {\n                                    name = [kpiNode(node)];\n                                }\n\n                                setting.add(name);\n                            }\n                        }\n                     })\n                    .data(\"kendoTreeView\");\n            },\n\n            _createTarget: function(element, options) {\n                var template;\n\n                template = ({ name, sortIcon }) => ''\n                    + `<div class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${name}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-label\">${name}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options)\n                        + '</span>'\n                    + '</div>';\n\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`\n                }, options));\n            },\n\n            _targets: function() {\n                var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n\n                var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: \"columns\" })).appendTo(container);\n                var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n\n                var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: \"rows\" })).appendTo(container);\n                var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n\n                var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: \"sum\" })).appendTo(container);\n                var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n\n                var options = this.options;\n\n                this.columns = this._createTarget(columns, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    connectWith: rows,\n                    messages: {\n                        empty: options.messages.columns,\n                        fieldMenu: options.messages.fieldMenu\n                    }\n                });\n\n                this.rows = this._createTarget(rows, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    setting: \"rows\",\n                    connectWith: columns,\n                    messages: {\n                        empty: this.options.messages.rows,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n\n                this.measures = this._createTarget(measures, {\n                    setting: \"measures\",\n                    messages: {\n                        empty: options.messages.measures\n                    }\n                });\n\n                columns\n                    .add(rows)\n                    .add(measures)\n                    .on(HOVER_EVENTS, \".k-item:not(.k-empty)\", this._toggleHover);\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).closest(\":not(path,svg)\").toggleClass(\"k-hover\", e.type === \"mouseenter\");\n            },\n\n            _resize: function() {\n                var element = this.element;\n                var height = this.options.height;\n\n                if (!height) {\n                    return;\n                }\n\n                element.outerHeight(height);\n            },\n\n            refresh: function() {\n                var dataSource = this.dataSource;\n\n                if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                    this.treeView.dataSource.fetch();\n                }\n\n                this._catalog = this.dataSource.catalog();\n                this._cube = this.dataSource.cube();\n\n                this._resize();\n\n                this._progress(false);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(\"change\", this._refreshHandler);\n\n                this.form.find(\".k-pivot-setting\").off(ns);\n\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n\n        function kpiMeasure(name, measure, type) {\n            return {\n                hierarchyUniqueName: name,\n                uniqueName: measure,\n                caption: measure,\n                measure: measure,\n                name: measure,\n                type: type,\n                kpi: true\n            };\n        }\n\n        function buildKPImeasures(node) {\n            var name = node.name;\n            return [\n                kpiMeasure(name, node.value, \"value\"),\n                kpiMeasure(name, node.goal, \"goal\"),\n                kpiMeasure(name, node.status, \"status\"),\n                kpiMeasure(name, node.trend, \"trend\")\n            ];\n        }\n\n        kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n        kendo.cssProperties.registerValues(\"HTMLChip\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(PivotConfigurator);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}