{"version":3,"file":"kendo.pivotgrid.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendopivotgrid","js","this","$","kendo","jQuery","useLoaderContainer","toggle","options","that","wrapper","loader","find","length","defaultOptions","message","overlayColor","themeColor","extend","loaderOverlay","html","renderLoaderContainer","wrapperWidth","width","mask","wrapperClone","clone","removeAttr","addClass","append","element","insertBefore","destroy","remove","undefined$1","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","o","map","keys","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","countAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","PivotGridNavigation","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","id","key","headerClass","colspan","rowspan","expandable","iconClass","role","expanded","icon","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_EXPANDED_SELECTOR","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","name","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","call","d","type","normalizeMembers","expand","slice","normalizeName","indexOf","accumulateMembers","accumulator","rootTuple","tuple","level","idx","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","push","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","val","isNaN","isDate","getTime","loadLocalData","params","deferred","originalData","reader","_pristineData","columnSettings","_createSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","filter","item","fields","sort","flattenSortDescriptors","_saveState","trigger","resolve","i","dir","split","pop","createLocalMeasure","format","measureMap","sum","average","min","max","count","bind","uniqueName","functions","PivotCubeBuilder","init","dimensions","_normalizeDescriptors","keyField","_rootTuples","rootNames","measureAggregators","root","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","index","_expandedTuples","current","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","join","_asTuples","rootInfo","expandedInfo","concat","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","row","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rows","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","axes","PivotTransport","transport","discover","read","update","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","values","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","_data","_query","done","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","distinct","levelUniqueName","childrenCardinality","isPrevented","_params","Deferred","newDataState","response","_preventRefresh","error","err","promise","measureAxes","isOdata","converters","schemaMeasures","schemaKPIs","kpis","schemaDimensions","schemaHierarchies","schemaLevels","schemaCubes","schemaCatalogs","schemaMembers","_handleCustomErrors","command","status","reject","restrictions","catalogName","cubeName","dimensionName","dimensionUniqueName","hierarchyName","hierarchyUniqueName","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","target","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","last","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","first","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","r","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","requestOptions","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","description","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","cells","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","closest","action","attr","hasClass","sortable","sortDirection","currentTarget","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","start","change","add","move","newIndex","_isKPI","validate","isMeasure","Array","isArray","sortExpressions","_sort","skipExpr","allowUnsort","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","navigatable","ev","chip","keyCode","DELETE","BACKSPACE","configuratorNavigation","elements","focusElement","DOWN","altKey","ctrlKey","shiftKey","LEFT","ind","el","RIGHT","UP","otherTarget","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","focus","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","pivot","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_ariaId","guid","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","ariaId","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","kpiStatusTemplate","kpiTrendTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","_exportData","autoBind","_aria","_initPivotGridNavigation","_initLoader","notify","height","columnWidth","emptyCellLabel","_windowResizeHandler","size","exporting","kendoLoader","_loaderContainer","navigation","tabIndex","keyboardEvents","keydown","_target","nav","_ev","next","nextElementSibling","HTMLElement","matches","parentNode","querySelector","click","setTimeout","confHeader","setAttribute","String","firstCell","_matchAriaAttributes","rowHeaderRows","querySelectorAll","rowHeaderCols","from","reduce","acc","curr","getAttribute","colHeaderRows","colHeaderCells","valueTableCells","emptyCell","firstColHeadersRow","firstColHeaderRowCellsIds","forEach","valueCellsIds","filterAndMap","c","idParts","cell","cellColIndex","colHeaderCellsIds","headerCellColIndex","headerCellColspan","arr","predicate","mapper","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","offsetWidth","scrollWidth","removeChild","columnsHeader","rowsHeader","scroll","scrollLeft","scrollTop","_wheelScroll","delta","wheelDeltaY","preventDefault","one","css","_progress","_isExport","progress","offsetHeight","contentTable","columnTable","rowTable","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","lastFocusedCellID","_activeElement","lastCellIdWithTabIndex","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","support","isRtl","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","request","childrenLoaded","maxChildren","reorderable","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","x","y","htmlNode","createMetadata","maxMembers","addColElements","table","addRowElements","addColumCell","_getTemplate","measureType","cellMembers","cellMeasure","cellValue","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","_getExportData","rowElement","match","rowSpan","colSpan","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","_columnsV2","_cellsV2","Object","_rowsV2","contentCells","endIndex","_freezePaneV2","_filterV2","excel","to","workbook","sheets","freezePane","PivotExcelMixin","proto","saveAsExcel","proxyURL","fileName","exporter","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","always","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","_saveAsPDF","saveAsPDF"],"sources":["kendo.pivotgrid.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.pivot.common.js'), require('kendo.dom.js'), require('kendo.data.js'), require('kendo.icons.js'), require('kendo.loader.js'), require('kendo.html.loadercontainer.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.pivot.common', 'kendo.dom', 'kendo.data', 'kendo.icons', 'kendo.loader', 'kendo.html.loadercontainer'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendopivotgrid = global.kendopivotgrid || {}, global.kendopivotgrid.js = factory()));\n})(this, (function () {\n    let $ = kendo.jQuery;\n\n    function useLoaderContainer(toggle, options) {\n        var that = this,\n            wrapper = that.wrapper;\n\n        if (toggle && that.loader) {\n            if (!that.wrapper.find(\".k-loader-container\").length) {\n\n                var defaultOptions = {\n                    message: \"Loading...\",\n                    overlayColor: \"dark\",\n                    themeColor: \"primary\",\n                };\n                defaultOptions = $.extend({}, defaultOptions, options);\n\n                const loaderOverlay = kendo.html.renderLoaderContainer($(\"<div></div>\"), defaultOptions);\n                const wrapperWidth = that.wrapper.width();\n\n                const mask = $(\"<div class='k-loading-pdf-mask'></div>\");\n                const wrapperClone = that.wrapper.clone().removeAttr(\"id\").addClass('k-loading-pdf-progress').width(wrapperWidth);\n                mask.append(wrapperClone);\n                mask.append(loaderOverlay);\n                that.mask = mask;\n\n                wrapper.append(mask);\n\n                that.wrapperClone = mask.find(\".k-pivotgrid\");\n                that.loaderOverlay = mask.find(\".k-loader-container\");\n\n                that.loader.element.insertBefore(mask.find(\".k-loader-container-label\"));\n            }\n        } else {\n            if (that.loaderOverlay.length) {\n                kendo.destroy(that.loaderOverlay);\n                that.mask.remove();\n            }\n        }\n    }\n\n    var __meta__ = {\n        id: \"pivotgrid\",\n        name: \"PivotGrid\",\n        category: \"web\",\n        description: \"The PivotGrid widget is a data summarization tool.\",\n        depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\", \"icons\", \"loader\", \"html.loadercontainer\" ],\n        features: [{\n            id: \"pivotgrid-configurator\",\n            name: \"Configurator\",\n            description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n            depends: [ \"pivot.configurator\" ]\n        }, {\n            id: \"pivotgrid-filtering\",\n            name: \"Filtering\",\n            description: \"Support for filtering\",\n            depends: [ \"pivot.fieldmenu\" ]\n        }, {\n            id: \"pivotgrid-excel-export\",\n            name: \"Excel export\",\n            description: \"Export pivot grid data as Excel spreadsheet\",\n            depends: [ \"ooxml\" ]\n        }, {\n            id: \"pivotgrid-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export pivot grid data as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }, {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Class = kendo.Class,\n            Comparer = kendo.data.Comparer,\n            Widget = ui.Widget,\n            DataSource = kendo.data.DataSource,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            common = window.kendo.pivotgrid.common,\n            fetchDiscover = common.fetchDiscover,\n            normalizeFilter = kendo.data.Query.normalizeFilter,\n            normalizeSort = kendo.data.Query.normalizeSort,\n            toString = {}.toString,\n            identity = function(o) { return o; },\n            map = $.map,\n            extend = $.extend,\n            keys = kendo.keys,\n            isFunction = kendo.isFunction,\n            fetchData = common.fetchData,\n            createLocalDataState = common.createLocalDataState,\n            createDataTree = common.createDataTree,\n            sumAggregate = common.sumAggregate,\n            averageAggregate = common.averageAggregate,\n            minAggregate = common.minAggregate,\n            maxAggregate = common.maxAggregate,\n            countAggregate = common.countAggregate,\n            createDataState = common.createDataState,\n            toColumns = common.toColumns,\n            toRows = common.toRows,\n            toTree = common.toTree,\n            toData = common.toData,\n            headersReducer = common.headersReducer,\n            PivotGridNavigation = common.PivotGridNavigation,\n            RESIZE = \"resize\",\n            READ = \"read\",\n            CHANGE = \"change\",\n            ERROR = \"error\",\n            REQUESTSTART = \"requestStart\",\n            PROGRESS = \"progress\",\n            REQUESTEND = \"requestEnd\",\n            MEASURES = \"Measures\",\n            STATERESET = \"stateReset\",\n            AUTO = \"auto\",\n            DIV = \"<div></div>\",\n            NS = \".kendoPivotGrid\",\n            ROW_TOTAL_KEY = \"__row_total__\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EXPANDMEMBER = \"expandMember\",\n            HEADERTEMPLATE = ({ id, key, headerClass, colspan, rowspan, expandable, iconClass, role, expanded }) => `<th id=\"${id}\" role=\"${role}\" ${expandable ? `aria-expanded=\"${expanded}\"` : ''}  data-key=\"${encode(key)}\" class=\"k-table-th ${encode(headerClass)}\" ${colspan ? 'colspan=\"' + encode(colspan) + '\"' : ''} ${rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : ''}>` +\n                                        `${expandable ? kendo.ui.icon($('<span role=\"presentation\" class=\"k-pivotgrid-toggle\"></span>'), { icon: `chevron-${encode(iconClass)}` }) : ''}` +\n                                    '</th>',\n            COLLAPSEMEMBER = \"collapseMember\",\n            STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n            STATE_EXPANDED_SELECTOR = `.k-i-${STATE_EXPANDED_ICONNAME},.k-svg-i-${STATE_EXPANDED_ICONNAME}`,\n            STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n            HEADER_TEMPLATE = ({ member }) => `<span>${encode(member.caption || member.name)}</span>`,\n            PIVOTGRID_TREND_ICONS_MAP = {\n                \"kpi-trend-decrease\": \"caret-alt-down\",\n                \"kpi-trend-increase\": \"caret-alt-up\",\n                \"kpi-trend-equal\": \"minus\",\n            },\n            KPISTATUS_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: `kpi-status-${dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\"}` }),\n            KPITREND_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: PIVOTGRID_TREND_ICONS_MAP[`kpi-trend-${dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"}`] }),\n            DATACELL_TEMPLATE = ({ dataItem }) => `${dataItem ? encode(dataItem.fmtValue || dataItem.value) || \"&nbsp;\" : \"&nbsp;\"}`,\n            LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                                '<tr>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-rowheaders\"></div>' +\n                                    '</td>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-table\"></div>' +\n                                    '</td>' +\n                                '</tr>' +\n                            '</table>';\n            var AXIS_ROWS = \"rows\";\n            var AXIS_COLUMNS = \"columns\";\n\n            var tableStyles = {\n                tableRow: \"k-table-row\",\n                header: \"k-header k-table-th\",\n                headerTable: \"k-grid-header-table k-table k-table-md\",\n                table: \"k-table k-table-md\",\n                contentTable: \"k-grid-table k-table k-table-md\",\n                tbody: \"k-table-tbody\",\n                tableCell: \"k-table-td\"\n            };\n\n        function normalizeMeasures(measure) {\n            var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: d };\n                }\n                return $.extend(true, d, { name: d.name, type: d.type });\n            });\n        }\n\n        function normalizeMembers(member) {\n            var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: [d], expand: false };\n                }\n                return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n            });\n        }\n\n        function normalizeName(name) {\n            if (name.indexOf(\" \") !== -1) {\n                name = '[\"' + name + '\"]';\n            }\n\n            return name;\n        }\n\n        function accumulateMembers(accumulator, rootTuple, tuple, level) {\n            var idx, length;\n            var children;\n            var member;\n\n            if (!tuple) {\n                tuple = rootTuple;\n            }\n\n            if (!level) {\n                level = 0;\n            }\n\n            member = tuple.members[level];\n\n            if (!member || member.measure) { //return if no member or measure\n                return;\n            }\n\n            children = member.children;\n            length = children.length;\n\n            if (tuple === rootTuple) {\n                accumulator[kendo.stringify([member.name])] = !!length;\n            } else if (length) {\n                accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n            }\n\n            if (length) {\n                for (idx = 0; idx < length; idx++) {\n                    accumulateMembers(accumulator, rootTuple, children[idx], level);\n                }\n            }\n\n            accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n        }\n\n        function descriptorsForAxes(tuples) {\n            var result = {};\n\n            if (tuples.length) {\n                accumulateMembers(result, tuples[0]);\n            }\n\n            var descriptors = [];\n            for (var k in result) {\n                descriptors.push({ name: JSON.parse(k), expand: result[k] });\n            }\n\n            return descriptors;\n        }\n\n        function addMissingPathMembers(members, axis) {\n            var tuples = axis.tuples || [];\n            var firstTuple = tuples[0];\n\n            if (firstTuple && members.length < firstTuple.members.length) {\n                var tupleMembers = firstTuple.members;\n\n                for (var idx = 0; idx < tupleMembers.length; idx++) {\n                    if (tupleMembers[idx].measure) {\n                        continue;\n                    }\n\n                    var found = false;\n                    for (var j = 0; j < members.length; j++) {\n                        if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                    }\n                }\n            }\n        }\n\n        function tupleToDescriptors(tuple) {\n            var result = [];\n            var members = tuple.members;\n\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].measure) {\n                    continue;\n                }\n\n                //make tuple name an array\n                result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n            }\n\n            return result;\n        }\n\n        function descriptorsForMembers(axis, members, measures) {\n            axis = axis || {};\n\n            addMissingPathMembers(members, axis);\n\n            if (measures.length > 1) {\n                members.push({\n                    name: MEASURES,\n                    measure: true,\n                    children: normalizeMembers(measures)\n                });\n            }\n\n            var tupletoSearch = {\n                members: members\n            };\n\n            if (axis.tuples) {\n                var result = findExistingTuple(axis.tuples, tupletoSearch);\n                if (result.tuple) {\n                    members = tupleToDescriptors(result.tuple);\n                }\n            }\n\n            return members;\n        }\n\n        function createAggregateGetter(m) {\n            var measureGetter = kendo.getter(m.field, true);\n            return function(aggregatorContext, state) {\n                return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n            };\n        }\n\n        function isNumber(val) {\n            return typeof val === \"number\" && !isNaN(val);\n        }\n\n        function isDate(val) {\n            return val && val.getTime;\n        }\n\n        function getScollWidth() {\n            var scrollbar = 0;\n            var div;\n            if (document && document.createElement) {\n                div = document.createElement('div');\n\n                div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n                div.innerHTML = '&nbsp;';\n                document.body.appendChild(div);\n\n                scrollbar = div.offsetWidth - div.scrollWidth;\n\n                document.body.removeChild(div);\n            }\n\n            return scrollbar;\n        }\n\n        function loadLocalData(data, params, deferred) {\n            const that = this;\n            const originalData = (that.reader.data(data) || []).slice(0);\n            if (originalData && !that._pristineData) {\n                that._pristineData = originalData;\n            }\n            const columnSettings = that._createSettings(params.columnAxes);\n            const rowSettings = that._createSettings(params.rowAxes);\n            const measures = that.measures();\n            const dataTree = createDataTree(originalData, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n            const stateArgs = {\n                dataTree: dataTree,\n                columnSettings: columnSettings,\n                rowSettings: rowSettings,\n                columnAxes: params.columnAxes,\n                rowAxes: params.rowAxes,\n                measures: measures.map(function(item) { return item; }),\n                fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                sort: flattenSortDescriptors(params.sort || [])\n            };\n\n            that._saveState(createLocalDataState(stateArgs));\n            that.trigger(CHANGE);\n            deferred.resolve();\n        }\n\n        function flattenSortDescriptors(descriptors) {\n            var result = [];\n            for (var i = 0; i < descriptors.length; i++) {\n                result.push({\n                    dir: descriptors[i].dir,\n                    field: descriptors[i].field.split(\".\").pop()\n                });\n            }\n            return result;\n        }\n\n        function createLocalMeasure(field, key, format, aggregate) {\n            var formatFunc = function(value) { return kendo.format(this.format, value); };\n            var measureMap = {\n                \"sum\": sumAggregate,\n                \"average\": averageAggregate,\n                \"min\": minAggregate,\n                \"max\": maxAggregate,\n                \"count\": countAggregate,\n            };\n            var valueFunc = function(item) { return item[this.field]; };\n            var measure = {\n                    value: valueFunc.bind({ field: field }),\n                    aggregate: measureMap[aggregate],\n                    caption: key,\n                    uniqueName: key,\n                    type: 2,\n                    name: [key]\n                };\n            if (format) {\n                measure.aggregate.format = formatFunc.bind({ format: format });\n            }\n\n            return measure;\n        }\n\n        function getIcons(sortIcon, options, pivotOptions) {\n            var sortable = options.sortable,\n                filterable = options.filterable,\n                reorderable = pivotOptions.reorderable,\n                result = \"\";\n\n            if (sortable) {\n                result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n            }\n\n            if (filterable || sortable) {\n                result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n            }\n            if (reorderable) {\n                result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n            }\n\n            return result;\n        }\n\n        var functions = {\n            sum: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                return accumulator;\n            },\n            count: function(value, state) {\n                return (state.accumulator || 0) + 1;\n            },\n            average: {\n                aggregate: function(value, state) {\n                    var accumulator = state.accumulator;\n\n                    if (state.count === undefined$1) {\n                        state.count = 0;\n                    }\n\n                    if (!isNumber(accumulator)) {\n                        accumulator = value;\n                    } else if (isNumber(value)) {\n                        accumulator += value;\n                    }\n\n                    if (isNumber(value)) {\n                        state.count++;\n                    }\n\n                    return accumulator;\n                },\n                result: function(state) {\n                    var accumulator = state.accumulator;\n\n                    if (isNumber(accumulator)) {\n                        accumulator = accumulator / state.count;\n                    }\n\n                    return accumulator;\n                }\n            },\n            max: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator < value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            },\n            min: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator > value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            }\n        };\n\n        var PivotCubeBuilder = Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n                this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n                this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n            },\n\n            _normalizeDescriptors: function(keyField, descriptors) {\n                descriptors = descriptors || {};\n                var fields = {};\n                var field;\n\n                if (toString.call(descriptors) === \"[object Array]\") {\n                    for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                        field = descriptors[idx];\n                        if (typeof field === \"string\") {\n                            fields[field] = {};\n                        } else if (field[keyField]) {\n                            fields[field[keyField]] = field;\n                        }\n                    }\n                    descriptors = fields;\n                }\n\n                return descriptors;\n            },\n\n            _rootTuples: function(rootNames, measureAggregators) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var root, name, parts;\n                var measureIdx = 0;\n                var idx;\n\n                var rootNamesLength = rootNames.length;\n                var result = [];\n                var keys = [];\n\n                if (rootNamesLength || measureAggregators.length) {\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                        root = { members: [] };\n\n                        for (idx = 0; idx < rootNamesLength; idx++) {\n                            name = rootNames[idx];\n                            parts = name.split(\"&\");\n\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (measureAggregators[measureIdx]).caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: false,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        result[result.length] = root;\n                    }\n\n                    keys.push(ROW_TOTAL_KEY);\n                }\n\n                return {\n                    keys: keys,\n                    tuples: result\n                };\n            },\n\n            _sortMap: function(map, sortDescriptors) {\n                var sortedMaps = [];\n                var sortTree = [];\n                var flattenTree = [];\n                var mapItem;\n                var key;\n\n                for (key in map) {\n                    if (!map[key].directParentName) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                //if there are no root this means that something is expanding\n                //and we should only sort that part of the tree\n                if (!sortTree.length) {\n                    for (key in map) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                fillSortTree(sortTree, map);\n\n                // fill tree recursive\n                for (var i = 0; i < sortDescriptors.length; i++) {\n                    sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n                }\n\n                flattenTree = flatColumns(sortTree);\n\n                //we need to flatten the structure so the tuples can build correctly\n                for (var j = 0; j < flattenTree.length; j++) {\n                    mapItem = map[flattenTree[j].name];\n                    mapItem.index = j;\n                    sortedMaps[j] = mapItem;\n                }\n\n                return sortedMaps;\n            },\n\n            _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var measureIdx;\n                var tuple;\n\n                var key;\n                var mapItem;\n                var current;\n                var currentKeys;\n                var accumulator = [];\n                var accumulatorKeys = [];\n                var memberInfo;\n\n                var expandedNames;\n                var parts;\n                var name;\n                var idx;\n\n                if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                    map = this._sortMap(map, sortDescriptors);\n                }\n\n                for (key in map) {\n                    mapItem = map[key];\n                    memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                    current = accumulator[memberInfo.index] || [];\n                    currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                    expandedNames = memberInfo.member.names;\n\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                        tuple = { members: [] };\n                        for (idx = 0; idx < expandedNames.length; idx++) {\n                            if (idx === memberInfo.member.expandedIdx) {\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: mapItem.value,\n                                    name: mapItem.name,\n                                    hasChildren: false,\n                                    levelNum: 1,\n                                    levelName: mapItem.parentName + mapItem.name,\n                                    parentName: mapItem.parentName,\n                                    hierarchy: mapItem.parentName + mapItem.name\n                                };\n\n                                if (measureIdx === 0) {\n                                    currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                                }\n                            } else {\n                                name = expandedNames[idx];\n                                parts = name.split(\"&\");\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                    name: name,\n                                    levelName: name,\n                                    levelNum: \"0\",\n                                    hasChildren: true,\n                                    parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                    hierarchy: name\n                                };\n                            }\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: measureAggregators[measureIdx].caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        current[current.length] = tuple;\n                    }\n\n                    accumulator[memberInfo.index] = current;\n                    accumulatorKeys[memberInfo.index] = currentKeys;\n                }\n\n                return {\n                    keys: accumulatorKeys,\n                    tuples: accumulator\n                };\n            },\n\n            _findExpandedMember: function(members, parentName) {\n                for (var idx = 0; idx < members.length; idx++) {\n                    if (members[idx].uniquePath === parentName) {\n                        return {\n                            member: members[idx],\n                            index: idx\n                        };\n                    }\n                }\n            },\n\n            _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n                measureAggregators = measureAggregators || [];\n\n                var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n                var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n                return {\n                    keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                    tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n                };\n            },\n\n            _measuresInfo: function(measures, rowAxis) {\n                var idx = 0;\n                var length = measures && measures.length;\n\n                var aggregateNames = [];\n                var resultFuncs = {};\n                var formats = {};\n\n                var descriptors = (this.measures || {});\n                var measure;\n                var name;\n\n                for (; idx < length; idx++) {\n                    name = measures[idx].descriptor.name;\n                    measure = descriptors[name] || {};\n\n                    aggregateNames.push(name);\n\n                    if (measure.result) {\n                        resultFuncs[name] = measure.result;\n                    }\n\n                    if (measure.format) {\n                        formats[name] = measure.format;\n                    }\n                }\n\n                return {\n                    names: aggregateNames,\n                    formats: formats,\n                    resultFuncs: resultFuncs,\n                    rowAxis: rowAxis\n                };\n            },\n\n            _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n                var result = [];\n\n                var aggregates;\n                var name, i, j, k, n;\n                var row, column, columnKey;\n\n                var rowMeasureNamesLength = 1;\n                var rowMeasureNames = [];\n                var columnMeasureNames;\n\n                var rowLength = rowKeys.length || 1;\n                var columnLength = columnKeys.length || 1;\n\n                if (measuresInfo.rowAxis) {\n                    rowMeasureNames = measuresInfo.names;\n                    rowMeasureNamesLength = rowMeasureNames.length;\n                } else {\n                    columnMeasureNames = measuresInfo.names;\n                }\n\n                for (i = 0; i < rowLength; i++) {\n                    row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                    for (n = 0; n < rowMeasureNamesLength; n++) {\n                        if (measuresInfo.rowAxis) {\n                            columnMeasureNames = [rowMeasureNames[n]];\n                        }\n\n                        for (j = 0; j < columnLength; j++) {\n                            columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                            column = row.items[columnKey];\n\n                            if (columnKey === ROW_TOTAL_KEY) {\n                                aggregates = row.aggregates;\n                            } else {\n                                aggregates = column ? column.aggregates : {};\n                            }\n\n                            for (k = 0; k < columnMeasureNames.length; k++) {\n                                name = columnMeasureNames[k];\n                                this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                            }\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            _addData: function(result, value, format, resultFunc) {\n                var fmtValue = \"\";\n                var ordinal;\n\n                if (value) {\n                    value = resultFunc ? resultFunc(value) : value.accumulator;\n                    fmtValue = format ? kendo.format(format, value) : value;\n                }\n\n                ordinal = result.length;\n\n                result[ordinal] = {\n                    ordinal: ordinal,\n                    value: value || \"\",\n                    fmtValue: fmtValue\n                };\n            },\n\n            _matchDescriptors: function(dataItem, descriptor, getters) {\n                var parts;\n                var parentField;\n                var expectedValue;\n\n                var names = descriptor.names;\n                var idx = descriptor.expandedIdx;\n                var value;\n\n                while (idx > 0) {\n                    parts = names[--idx].split(\"&\");\n                    if (parts.length > 1) {\n                        parentField = parts[0];\n                        expectedValue = parts[1];\n\n                        value = getters[parentField](dataItem);\n                        value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                        if (value != expectedValue) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            },\n\n            _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n                var result = {};\n                var state;\n                var name;\n\n                for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                    name = measureAggregators[measureIdx].descriptor.name;\n                    state = totalItem.aggregates[name] || { };\n                    state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                    result[name] = state;\n                }\n\n                return result;\n            },\n\n            _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n                var value;\n                var descriptor;\n                var column;\n                var totalItem;\n                var key, name, parentName, path;\n                var dataItem = aggregatorContext.dataItem;\n                var idx = 0;\n\n                for (; idx < descriptors.length; idx++) {\n                    descriptor = descriptors[idx];\n\n                    //checks whether the dataItem is relevant to the descriptors\n                    if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                        continue;\n                    }\n\n                    path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                    name = descriptor.names[descriptor.expandedIdx];\n\n\n                    value = getters[name](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    parentName = name;\n                    name = name + \"&\" + value;\n                    key = path + name;\n\n                    column = columns[key] || {\n                        index: state.columnIndex,\n                        parentName: parentName,\n                        name: name,\n                        directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                        uniquePath: path + parentName,\n                        childrenMap: {},\n                        value: value\n                    };\n\n                    if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                        columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                    }\n\n                    totalItem = rowTotal.items[key] || {\n                        aggregates: {}\n                    };\n\n                    rowTotal.items[key] = {\n                        index: column.index,\n                        aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                    };\n\n                    if (updateColumn) {\n                        if (!columns[key]) {\n                            state.columnIndex++;\n                        }\n                        columns[key] = column;\n                    }\n                }\n            },\n\n            _measureAggregators: function(options) {\n                var measureDescriptors = options.measures || [];\n                var measures = this.measures || {};\n                var aggregators = [];\n                var descriptor, measure, idx, length;\n                var defaultAggregate, aggregate;\n\n                if (measureDescriptors.length) {\n                    for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                        descriptor = measureDescriptors[idx];\n                        measure = measures[descriptor.name];\n                        defaultAggregate = null;\n\n                        if (measure) {\n                            aggregate = measure.aggregate;\n                            if (typeof aggregate === \"string\") {\n                                defaultAggregate = functions[aggregate.toLowerCase()];\n\n                                if (!defaultAggregate) {\n                                    throw new Error(\"There is no such aggregate function\");\n                                }\n\n                                measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                                measure.result = defaultAggregate.result;\n                            }\n\n\n                            aggregators.push({\n                                descriptor: descriptor,\n                                caption: measure.caption,\n                                result: measure.result,\n                                aggregator: createAggregateGetter(measure)\n                            });\n                        }\n                    }\n                } else {\n                    aggregators.push({\n                        descriptor: { name: \"default\" },\n                        caption: \"default\",\n                        aggregator: function() { return 1; }\n                    });\n                }\n\n                return aggregators;\n            },\n\n            _buildGetters: function(names) {\n                var result = {};\n                var parts;\n                var name;\n\n                for (var idx = 0; idx < names.length; idx++) {\n                    name = names[idx];\n                    parts = name.split(\"&\");\n\n                    if (parts.length > 1) {\n                        result[parts[0]] = kendo.getter(parts[0], true);\n                    } else {\n                        result[name] = kendo.getter(normalizeName(name), true);\n                    }\n                }\n\n                return result;\n            },\n\n            _parseDescriptors: function(descriptors) {\n                var parsedDescriptors = parseDescriptors(descriptors);\n                var rootNames = getRootNames(parsedDescriptors.root);\n                var expanded = parsedDescriptors.expanded;\n                var result = [];\n\n                for (var idx = 0; idx < expanded.length; idx++) {\n                    result.push(mapNames(expanded[idx].name, rootNames));\n                }\n\n                return {\n                    root: rootNames,\n                    expanded: result\n                };\n            },\n\n            _filter: function(data, filter) {\n                if (!filter) {\n                    return data;\n                }\n\n                var expr;\n                var idx = 0;\n                var filters = filter.filters;\n\n                for (; idx < filters.length; idx++) {\n                    expr = filters[idx];\n\n                    if (expr.operator === \"in\") {\n                        filters[idx] = this._normalizeFilter(expr);\n                    }\n                }\n\n                return new kendo.data.Query(data).filter(filter).data;\n            },\n\n            _normalizeFilter: function(filter) {\n                var value = filter.value.split(\",\");\n                var result = [];\n\n                if (!value.length) {\n                    return value;\n                }\n\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push({\n                        field: filter.field,\n                        operator: \"eq\",\n                        value: value[idx]\n                    });\n                }\n\n                return {\n                    logic: \"or\",\n                    filters: result\n                };\n            },\n\n            process: function(data, options) {\n                data = data || [];\n                options = options || {};\n\n                data = this._filter(data, options.filter);\n\n                var measures = options.measures || [];\n\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n\n                var columnDescriptors = options.columns || [];\n                var rowDescriptors = options.rows || [];\n\n                if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columnDescriptors = rowDescriptors;\n                    rowDescriptors = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && measures.length) {\n                    columnDescriptors = normalizeMembers(options.measures);\n                }\n\n                columnDescriptors = this._parseDescriptors(columnDescriptors);\n                rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n                var aggregatedData = {};\n                var columns = {};\n                var rows = {};\n\n                var rowValue;\n                var state = { columnIndex: 0 };\n\n                var measureAggregators = this._measureAggregators(options);\n\n                var columnGetters = this._buildGetters(columnDescriptors.root);\n                var rowGetters = this._buildGetters(rowDescriptors.root);\n\n                var processed = false;\n\n                var expandedColumns = columnDescriptors.expanded;\n                var expandedRows = rowDescriptors.expanded;\n\n                var dataItem;\n                var aggregatorContext;\n                var hasExpandedRows = expandedRows.length !== 0;\n\n                var rowIdx, rowDescriptor, rowName, rowTotal;\n                var key, path, parentName, value;\n                var columnsInfo, rowsInfo;\n                var length = data.length;\n                var idx = 0;\n\n                if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                    processed = true;\n\n                    for (idx = 0; idx < length; idx++) {\n                        dataItem = data[idx];\n\n                        aggregatorContext = {\n                            dataItem: dataItem,\n                            index: idx\n                        };\n\n                        rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                        rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                        aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                        for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                            rowDescriptor = expandedRows[rowIdx];\n\n                            if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                                this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                                continue;\n                            }\n\n                            path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                            rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                            parentName = rowName;\n\n                            rowValue = rowGetters[rowName](dataItem);\n                            rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                            rowName = rowName + \"&\" + rowValue;\n                            key = path + rowName;\n\n                            rows[key] = {\n                                uniquePath: path + parentName,\n                                parentName: parentName,\n                                name: rowName,\n                                value: rowValue\n                            };\n\n                            value = aggregatedData[key] || {\n                                items: {},\n                                aggregates: {}\n                            };\n\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                            value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                            aggregatedData[key] = value;\n                        }\n                    }\n                }\n\n                if (processed && length) {\n                    if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                        columnDescriptors = {\n                            root: [],\n                            expanded: []\n                        };\n                    }\n\n                    columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                    rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                    columns = columnsInfo.tuples;\n                    rows = rowsInfo.tuples;\n\n                    aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n                } else {\n                    aggregatedData = columns = rows = [];\n                }\n\n                return {\n                    axes: {\n                        columns: { tuples: columns },\n                        rows: { tuples: rows }\n                    },\n                    data: aggregatedData\n                };\n            }\n        });\n\n        var PivotTransport = Class.extend({\n            init: function(options, transport) {\n                this.transport = transport;\n                this.options = transport.options || {};\n\n                if (!this.transport.discover) {\n                    if (isFunction(options.discover)) {\n                        this.discover = options.discover;\n                    }\n                }\n            },\n            read: function(options) {\n                return this.transport.read(options);\n            },\n            update: function(options) {\n                return this.transport.update(options);\n            },\n            create: function(options) {\n                return this.transport.create(options);\n            },\n            destroy: function(options) {\n                return this.transport.destroy(options);\n            },\n            discover: function(options) {\n                if (this.transport.discover) {\n                    return this.transport.discover(options);\n                }\n                options.success({});\n            },\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            }\n        });\n\n        var PivotDataSourceV2 = DataSource.extend({\n            init: function(options) {\n\n                var cube = ((options || {}).schema || {}).cube;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: this.cubeSchema\n                }, options));\n\n                var transportOptions = this.options.transport || {};\n\n                if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                    this._online = true;\n                    this.transport = new XmlaTransportV2(transportOptions);\n                } else {\n                    this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n                }\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    this._measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            axes: function() {\n                return {\n                    columns: normalizeAxis(this.columns()),\n                    rows: normalizeAxis(this.rows())\n                };\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            fetch: function(callback) {\n                var that = this;\n                if (this._data === undefined$1 || this._data.length === 0) {\n                    var fn = function() {\n                        if (isFunction(callback)) {\n                            callback.call(that);\n                        }\n                    };\n\n                    return this._query().done(fn);\n                }\n            },\n\n            _createSettings: function(axes) {\n                var settings = [];\n                var key;\n                var dimensions = this.cubeSchema.dimensionsSettings();\n                var displayValueFunc = function(item) { return item[this.key]; };\n                var sortValueFunc = function(value) { return value; };\n                for (var i = 0; i < axes.length; i++) {\n                    key = axes[i].name[0];\n                    settings.push({\n                        key: key,\n                        displayValue: displayValueFunc.bind({ key: key }),\n                        sortValue: sortValueFunc,\n                        caption: (dimensions[key] || {}).caption || key\n                    });\n                }\n                return settings;\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensionsSettings: function() {\n                        return cube.dimensions;\n                    },\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    restoreMeasure: function(measures, measure) {\n                        for (var i = 0; i < measures.length; i++) {\n                            if (!measures[i].aggregate) {\n                                measures[i].aggregate = measure.aggregate;\n                                measures[i].value = measure.value;\n                                measures[i].caption = measure.caption;\n                                measures[i].uniqueName = measure.uniqueName;\n                                measures[i].type = 2;\n                            }\n                        }\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push(createLocalMeasure(measures[key].field, key, measures[key].format, measures[key].aggregate));\n                        }\n\n                        return result;\n                    },\n                    memberType: function(name) {\n                        var getter = kendo.getter(normalizeName(name), true);\n                        var data = this.options.data || this._pristineData || [];\n                        if (!data.length) {\n                            return null;\n                        }\n\n                        return typeof getter(data[0]);\n                    }.bind(this),\n                    members: function(name) {\n                        var data = this.options.data || this._pristineData || [];\n                        var result = [];\n                        var distinct = {};\n                        var getter;\n                        var value;\n                        var idx = 0;\n\n                        if (name.indexOf(\"[(ALL)]\") !== -1) {\n                            return [\n                                {\n                                    caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                    levelUniqueName: name,\n                                    name: name,\n                                    childrenCardinality: 1,\n                                    uniqueName: name\n                                }\n                            ];\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0 || value === false) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value + \"\",\n                                    name: value + \"\",\n                                    childrenCardinality: 0,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            read: function(data) {\n                const that = this;\n                const isPrevented = that.trigger(REQUESTSTART, { type: READ });\n                const params = that._params(data);\n                const deferred = $.Deferred();\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    if (that.options.data) {\n                        loadLocalData.call(that, that.options.data, params, deferred);\n                    } else if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                        that.transport.read({\n                            data: params,\n                            success: function(newDataState) {\n                                that._saveState(newDataState);\n                                that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                                that.trigger(CHANGE);\n                                if (that._preventRefresh) {\n                                    that._preventRefresh = false;\n                                }\n                                deferred.resolve();\n                            },\n                            error: function(err) {\n                                that.trigger(ERROR, { error: err });\n                            }\n                        });\n                    } else {\n                        that.transport.read({\n                            success: function(data) {\n                                loadLocalData.call(that, data, params, deferred);\n                            },\n                            error: function(err) {\n                                that.trigger(ERROR, { error: err });\n                            }\n                        });\n                    }\n                }\n                return deferred.promise();\n            },\n\n            _params: function(data) {\n                var that = this;\n                var options = DataSource.fn._params.call(that, data);\n\n                options = extend({\n                    columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                    rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                    measuresAxis: that.measuresAxis(),\n                    measureAxes: that._measures\n                }, options);\n\n                if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                    options.connection = that.options.transport.connection;\n                }\n\n                if (options.filter) {\n                    options.filter = normalizeFilter(options.filter);\n                    options.filter = (options.filter || {}).filters;\n                }\n\n                if (options.sort) {\n                    options.sort = normalizeSort(options.sort);\n                }\n\n                return options;\n            },\n\n            discover: function(options) {\n                const that = this;\n                const transport = that.transport;\n                const isOdata = that.options.type === \"odata\";\n\n                const converters = {\n                    \"schemaMeasures\": that.reader.measures,\n                    \"schemaKPIs\": that.reader.kpis,\n                    \"schemaDimensions\": that.reader.dimensions,\n                    \"schemaHierarchies\": that.reader.hierarchies,\n                    \"schemaLevels\": that.reader.levels,\n                    \"schemaCubes\": that.reader.cubes,\n                    \"schemaCatalogs\": that.reader.catalogs,\n                    \"schemaMembers\": that.reader.members\n                };\n\n                if (transport.discover && !isOdata) {\n                    return transport.discover(options);\n                }\n\n                return $.Deferred(function(deferred) {\n                    transport.discover(extend({\n                        success: function(response) {\n                           response = that.reader.parse(response);\n\n                            if (that._handleCustomErrors(response)) {\n                                return;\n                            }\n\n                            if (converters[options.command]) {\n                                response = converters[options.command](response);\n                            }\n                            deferred.resolve(response);\n                        },\n                        error: function(response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, options));\n                }).promise().done(function() {\n                    that.trigger(\"schemaChange\");\n                });\n            },\n\n            schemaMeasures: function() {\n                const that = this;\n                return that.discover(\n                    {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    });\n            },\n\n            schemaKPIs: function() {\n                const that = this;\n                return that.discover(\n                    {\n                        command: \"schemaKPIs\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    });\n                },\n\n            schemaDimensions: function() {\n                const that = this;\n                return that.discover(\n                    {\n                        command: \"schemaDimensions\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    });\n                },\n\n            schemaHierarchies: function(dimensionName) {\n                const that = this;\n                return that.discover({\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                 });\n             },\n\n            schemaLevels: function(hierarchyName) {\n                const that = this;\n                return that.discover({\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                });\n            },\n\n            schemaCubes: function() {\n                const that = this;\n                return that.discover({\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                });\n            },\n\n\n            schemaCatalogs: function() {\n                const that = this;\n                return that.discover({\n                    command: \"schemaCatalogs\"\n                });\n            },\n\n\n            schemaMembers: function(restrictions) {\n                const that = this;\n                return that.discover({\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                    }, restrictions)\n                });\n            },\n\n            _saveState: function(state) {\n                var that = this;\n\n                that._columnTuples = state.columns;\n                that._rowTuples = state.rows;\n                that._view = that._data = state.data;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._columns = normalizeMembers(val);\n                this.read();\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._rows = normalizeMembers(val);\n\n                this.read();\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._measures = normalizeMeasures(val);\n\n                this.read();\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                return options;\n            },\n\n            _query: function(options) {\n                var that = this;\n                var params = extend({}, {\n                    sort: that.sort(),\n                    measuresAxis: that.measuresAxis(),\n                    filter: that.filter()\n                }, options);\n                this._mergeState(params);\n\n                return this.read();\n            },\n        });\n\n        var PivotDataSource = DataSource.extend({\n            init: function(options) {\n                var cube = ((options || {}).schema || {}).cube;\n                var measuresAxis = \"columns\";\n                var measures;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    schema = $.extend(schema, this._cubeSchema(cube));\n                    this.cubeBuilder = new PivotCubeBuilder(cube);\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: schema\n                }, options));\n\n                this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                measures = this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n                this._measuresAxis = measuresAxis;\n\n                this._skipNormalize = 0;\n                this._axes = {};\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    hierarchies: function() {\n                        return [];\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push({\n                                name: key,\n                                caption: key,\n                                uniqueName: key,\n                                aggregator: key\n                            });\n                        }\n\n                        return result;\n                    },\n                    members: function(response, restrictions) {\n                        var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                        var schemaData = this.options.schema.data;\n                        var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                        var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                        var result = [];\n                        var getter;\n                        var value;\n                        var idx = 0;\n                        var distinct = {};\n\n                        if (name) {\n                            name = name.split(\".\")[0];\n                        }\n\n                        if (!restrictions.treeOp) {\n                            result.push({\n                                caption: cube.dimensions[name].caption || name,\n                                childrenCardinality: \"1\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: name,\n                                uniqueName: name\n                            });\n\n                            return result;\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value,\n                                    childrenCardinality: \"0\",\n                                    dimensionUniqueName: name,\n                                    hierarchyUniqueName: name,\n                                    levelUniqueName: name,\n                                    name: value,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this._axes = {};\n                this.data([]);\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._axes = {};\n                this._mergeState({});// clears current state\n                this.data([]);\n            },\n\n            axes: function() {\n                return this._axes;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._columns = normalizeMembers(val);\n                this.query({\n                    columns: val,\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._rows = normalizeMembers(val);\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: val,\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: normalizeMeasures(val),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            _expandPath: function(path, axis) {\n                var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n                var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n                var members = normalizeMembers(path);\n                var memberToExpand = getName(members[members.length - 1]);\n\n                this._lastExpanded = origin;\n\n                members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n                for (var idx = 0; idx < members.length; idx++) {\n                    var memberName = getName(members[idx]);\n\n                    if (memberName === memberToExpand) {\n                        if (members[idx].expand) {\n                            return;\n                        }\n                        members[idx].expand = true;\n                    } else {\n                        members[idx].expand = false;\n                    }\n                }\n\n                var descriptors = {};\n                descriptors[origin] = members;\n                descriptors[other] = this._descriptorsForAxis(other);\n\n                this._query(descriptors);\n            },\n\n            _descriptorsForAxis: function(axis) {\n                var axes = this.axes();\n                var descriptors = this[axis]() || [];\n\n                if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                    descriptors = descriptorsForAxes(axes[axis].tuples || []);\n                }\n                return descriptors;\n            },\n\n            columnsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"columns\");\n            },\n\n            rowsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"rows\");\n            },\n\n            _process: function(data, e) {\n                this._view = data;\n\n                e = e || {};\n                e.items = e.items || this._view;\n\n                this.trigger(CHANGE, e);\n            },\n\n            _query: function(options) {\n                var that = this;\n\n                if (!options) {\n                    this._skipNormalize += 1;\n                    this._clearAxesData = true;\n                }\n\n                return that.query(extend({}, {\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate(),\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures()\n                }, options));\n            },\n\n            query: function(options) {\n                var state = this._mergeState(options);\n\n                if (this._data.length && this.cubeBuilder) {\n                    this._params(state);\n                    this._updateLocalData(this._pristineData);\n\n                    return $.Deferred().resolve().promise();\n                }\n\n                return this.read(state);\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                if (options !== undefined$1) {\n                    this._measures = normalizeMeasures(options.measures);\n\n                    if (options.columns) {\n                        options.columns = normalizeMembers(options.columns);\n                    } else if (!options.columns) {\n                        this._columns = [];\n                    }\n\n                    if (options.rows) {\n                        options.rows = normalizeMembers(options.rows);\n                    } else if (!options.rows) {\n                        this._rows = [];\n                    }\n                }\n                return options;\n            },\n\n            filter: function(val) {\n                if (val === undefined$1) {\n                    return this._filter;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n                this._query({ filter: val, page: 1 });\n            },\n\n            expandColumn: function(path) {\n                this._expandPath(path, \"columns\");\n            },\n\n            expandRow: function(path) {\n                this._expandPath(path, \"rows\");\n            },\n\n            success: function(data) {\n                var originalData;\n                if (this.cubeBuilder) {\n                    originalData = (this.reader.data(data) || []).slice(0);\n                }\n                DataSource.fn.success.call(this, data);\n                if (originalData) {\n                    this._pristineData = originalData;\n                }\n            },\n\n            _processResult: function(data, axes) {\n                if (this.cubeBuilder) {\n                    var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                    data = processedData.data;\n                    axes = processedData.axes;\n                }\n\n                var columnIndexes, rowIndexes;\n                var tuples, resultAxis, measures, axisToSkip;\n                var columnDescriptors = this.columns();\n                var rowDescriptors = this.rows();\n                var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n                if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                this._axes = {\n                    columns: normalizeAxis(this._axes.columns),\n                    rows: normalizeAxis(this._axes.rows)\n                };\n\n                axes = {\n                    columns: normalizeAxis(axes.columns),\n                    rows: normalizeAxis(axes.rows)\n                };\n\n                columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n                rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n                if (this._skipNormalize > 0) {\n                    this._skipNormalize -= 1;\n                }\n\n                if (!this.cubeBuilder) {\n                    data = this._normalizeData({\n                        columnsLength: axes.columns.tuples.length,\n                        rowsLength: axes.rows.tuples.length,\n                        columnIndexes: columnIndexes,\n                        rowIndexes: rowIndexes,\n                        data: data\n                    });\n                }\n\n                if (this._lastExpanded == \"rows\") {\n                    tuples = axes.columns.tuples;\n                    measures = this._columnMeasures();\n                    resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"columns\";\n                        axes.columns = resultAxis;\n                        adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.columns.tuples, measures),\n                                rowsLength: axes.rows.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                } else if (this._lastExpanded == \"columns\") {\n                    tuples = axes.rows.tuples;\n                    measures = this._rowMeasures();\n                    resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"rows\";\n                        axes.rows = resultAxis;\n                        adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.rows.tuples, measures),\n                                rowsLength: axes.columns.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                }\n\n                this._lastExpanded = null;\n\n                var result = this._mergeAxes(axes, data, axisToSkip);\n                this._axes = result.axes;\n\n                return result.data;\n            },\n\n            _readData: function(data) {\n                var axes = this.reader.axes(data);\n                var newData = this.reader.data(data);\n\n                if (this.cubeBuilder) {\n                    this._rawData = newData;\n                }\n\n                return this._processResult(newData, axes);\n            },\n\n            _createTuple: function(tuple, measure, buildRoot) {\n                var members = tuple.members;\n                var length = members.length;\n                var root = { members: [] };\n                var levelName, levelNum;\n                var name, parentName;\n                var hasChildren;\n                var hierarchy;\n                var caption;\n                var member;\n                var idx = 0;\n\n                if (measure) {\n                    length -= 1;\n                }\n\n                for (; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum);\n\n                    name = member.name;\n                    parentName = member.parentName;\n                    caption = member.caption || name;\n                    hasChildren = member.hasChildren;\n                    hierarchy = member.hierarchy;\n                    levelName = member.levelName;\n\n                    if (buildRoot) {\n                        caption = \"All\";\n                        if (levelNum === 0) {\n                            parentName = member.name;\n                        } else {\n                            levelNum -= 1;\n                        }\n\n                        hasChildren = true;\n                        name = hierarchy = levelName = parentName;\n                    }\n\n                    root.members.push({\n                        name: name,\n                        children: [],\n                        caption: caption,\n                        levelName: levelName,\n                        levelNum: levelNum.toString(),\n                        hasChildren: hasChildren,\n                        hierarchy: hierarchy,\n                        parentName: !buildRoot ? parentName : \"\"\n                    });\n                }\n\n                if (measure) {\n                    root.members.push({\n                        name: measure.name,\n                        children: []\n                    });\n                }\n\n                return root;\n            },\n\n            _hasRoot: function(target, source, descriptors) {\n                if (source.length) {\n                    return findExistingTuple(source, target).tuple;\n                }\n\n                var members = target.members;\n                var member;\n                var descriptor;\n\n                var isRoot = true;\n                var levelNum;\n\n                for (var idx = 0, length = members.length; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum) || 0;\n                    descriptor = descriptors[idx];\n\n                    if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                        isRoot = false;\n                        break;\n                    }\n                }\n\n                return isRoot;\n            },\n\n            _mergeAxes: function(sourceAxes, data, axisToSkip) {\n                var columnMeasures = this._columnMeasures();\n                var rowMeasures = this._rowMeasures();\n                var axes = this.axes();\n                var startIndex, tuples;\n\n                var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n                var newRowsLength = sourceAxes.rows.tuples.length;\n\n                var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n                var newColumnsLength = sourceAxes.columns.tuples.length;\n\n                if (axisToSkip == \"columns\") {\n                    newColumnsLength = oldColumnsLength;\n                    tuples = sourceAxes.columns.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                    data = prepareDataOnColumns(tuples, data);\n                }\n\n                var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n                if (axisToSkip == \"rows\") {\n                    newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                    tuples = sourceAxes.rows.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                    data = prepareDataOnRows(tuples, data);\n                }\n                var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n                axes.columns.tuples = mergedColumns.tuples;\n                axes.rows.tuples = mergedRows.tuples;\n\n                if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                    //columns are expanded\n                    startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                    var offset = oldColumnsLength + newColumnsLength;\n                    data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n                } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                    //rows are expanded\n                    startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                    data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n                }\n\n                if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                    data = [];\n                }\n\n                return {\n                    axes: axes,\n                    data: data\n                };\n            },\n\n            _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n                var data = this.data().toJSON();\n                var rowIndex, index, drop = 0, toAdd;\n                var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n                rowsLength = Math.max(rowsLength, 1);\n\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    drop = columnMeasures;\n                    offset -= columnMeasures;\n                }\n\n                for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                    index = columnIndex + (rowIndex * offset);\n                    toAdd = newData.splice(0, columnsLength);\n                    toAdd.splice(0, drop);\n                    [].splice.apply(data, [index, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n                var data = this.data().toJSON();\n                var idx, dataIndex, toAdd;\n                var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n                columnsLength = Math.max(columnsLength, 1);\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    rowsLength -= rowMeasures;\n                    newData.splice(0, columnsLength * rowMeasures);\n                }\n\n                for (idx = 0; idx < rowsLength; idx++) {\n                    toAdd = newData.splice(0, columnsLength);\n                    dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                    [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _columnMeasures: function() {\n                var measures = this.measures();\n                var columnMeasures = [];\n\n                if (this.measuresAxis() === \"columns\") {\n                    if (this.columns().length === 0) {\n                        columnMeasures = measures;\n                    } else if (measures.length > 1) {\n                        columnMeasures = measures;\n                    }\n                }\n\n                return columnMeasures;\n            },\n\n            _rowMeasures: function() {\n                var measures = this.measures();\n                var rowMeasures = [];\n\n                if (this.measuresAxis() === \"rows\") {\n                    if (this.rows().length === 0) {\n                        rowMeasures = measures;\n                    } else if (measures.length > 1) {\n                        rowMeasures = measures;\n                    }\n                }\n\n                return rowMeasures;\n            },\n\n            _updateLocalData: function(data, state) {\n                if (this.cubeBuilder) {\n                    if (state) {\n                        this._requestData = state;\n                    }\n                    data = this._processResult(data);\n                }\n\n                this._data = this._observe(data);\n\n                this._ranges = [];\n                this._addRange(this._data);\n\n                this._total = this._data.length;\n                this._pristineTotal = this._total;\n                this._process(this._data);\n            },\n\n            data: function(value) {\n                var that = this;\n                if (value !== undefined$1) {\n                    this._pristineData = value.slice(0);\n                    this._updateLocalData(value, {\n                            columns: this.columns(),\n                            rows: this.rows(),\n                            measures: this.measures()\n                        });\n                } else {\n                    return that._data;\n                }\n            },\n\n            _normalizeTuples: function(tuples, source, descriptors, measures) {\n                var length = measures.length || 1;\n                var idx = 0;\n\n                var roots = [];\n                var indexes = {};\n                var measureIdx = 0;\n                var tuple, memberIdx, last;\n\n                if (!tuples.length) {\n                    return;\n                }\n\n                if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                    this._skipNormalize = 0;\n                    for (; idx < length; idx++) {\n                        roots.push(this._createTuple(tuples[0], measures[idx], true));\n                        indexes[idx] = idx;\n                    }\n\n                    tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                    idx = length;\n                }\n\n                if (measures.length) {\n                    last = tuple = tuples[idx];\n                    memberIdx = tuple.members.length - 1;\n\n                    while (tuple) {\n                        if (measureIdx >= length) {\n                            measureIdx = 0;\n                        }\n\n                        if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                            tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                            indexes[idx] = idx;\n                        }\n\n                        idx += 1;\n                        measureIdx += 1;\n                        tuple = tuples[idx];\n\n                        if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                            for (; measureIdx < length; measureIdx++) {\n                                tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                                indexes[idx] = idx;\n                                idx += 1;\n                            }\n                            tuple = tuples[idx];\n                        }\n                        last = tuple;\n                    }\n                }\n\n                return indexes;\n            },\n\n            _addMissingDataItems: function(result, metadata) {\n                while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                    for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                        result = addEmptyDataItem(result);\n                    }\n                }\n\n                while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                    result = addEmptyDataItem(result);\n                }\n\n                return result;\n            },\n\n            _normalizeOrdinals: function(result, dataItem, metadata) {\n                var lastOrdinal = metadata.lastOrdinal;\n\n                if (!dataItem) {\n                    return addEmptyDataItem(result);\n                }\n\n                if ((dataItem.ordinal - lastOrdinal) > 1) {\n                    lastOrdinal += 1;\n\n                    while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                        result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                        lastOrdinal += 1;\n                    }\n                }\n\n                dataItem.ordinal = result.length;\n                result[result.length] = dataItem;\n\n                return result;\n            },\n\n            _normalizeData: function(options) {\n                var data = options.data;\n                var dataIdx = 0;\n                var dataItem;\n                var result = [];\n                var lastOrdinal;\n                var length;\n\n                options.lastOrdinal = 0;\n                options.columnIndexes = options.columnIndexes || {};\n                options.rowIndexes = options.rowIndexes || {};\n                options.columnsLength = options.columnsLength || 1;\n                options.rowsLength = options.rowsLength || 1;\n                options.length = options.columnsLength * options.rowsLength;\n                length = options.length;\n\n                if (data.length === length) {\n                    return data;\n                }\n\n                while (result.length < length) {\n                    dataItem = data[dataIdx++];\n                    if (dataItem) {\n                        lastOrdinal = dataItem.ordinal;\n                    }\n\n                    result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                    options.lastOrdinal = lastOrdinal;\n                }\n\n                return result;\n            },\n\n            discover: function(options, converter) {\n                var that = this,\n                    transport = that.transport;\n\n                return $.Deferred(function(deferred) {\n                    transport.discover(extend({\n                        success: function(response) {\n                           response = that.reader.parse(response);\n\n                            if (that._handleCustomErrors(response)) {\n                                return;\n                            }\n\n                            if (converter) {\n                                response = converter(response);\n                            }\n                            deferred.resolve(response);\n                        },\n                        error: function(response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, options));\n                }).promise().done(function() {\n                    that.trigger(\"schemaChange\");\n                });\n            },\n\n            schemaMeasures: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.measures(response);\n                });\n            },\n\n            schemaKPIs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaKPIs\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.kpis(response);\n                });\n            },\n\n            schemaDimensions: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaDimensions\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.dimensions(response);\n                });\n            },\n\n            schemaHierarchies: function(dimensionName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaHierarchies\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            dimensionUniqueName: dimensionName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.hierarchies(response);\n                });\n            },\n\n            schemaLevels: function(hierarchyName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaLevels\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            hierarchyUniqueName: hierarchyName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.levels(response);\n                });\n            },\n\n            schemaCubes: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCubes\",\n                        restrictions: {\n                            catalogName: that.transport.catalog()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.cubes(response);\n                });\n            },\n\n            schemaCatalogs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCatalogs\"\n                    }\n                }, function(response) {\n                    return that.reader.catalogs(response);\n                });\n            },\n\n            schemaMembers: function(restrictions) {\n                var that = this;\n                var success = (function(restrictions) {\n                    return function(response) {\n                        return that.reader.members(response, restrictions);\n                    };\n                }(restrictions));\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMembers\",\n                        restrictions: extend({\n                           catalogName: that.transport.catalog(),\n                           cubeName: that.transport.cube()\n                       }, restrictions)\n                    }\n                }, success);\n            },\n\n            _params: function(data) {\n                if (this._clearAxesData) {\n                    this._axes = {};\n                    this._data = this._observe([]);\n                    this._clearAxesData = false;\n                    this.trigger(STATERESET);\n                }\n\n                var options = DataSource.fn._params.call(this, data);\n\n                options = extend({\n                    measures: this.measures(),\n                    measuresAxis: this.measuresAxis(),\n                    columns: this.columns(),\n                    rows: this.rows()\n                }, options);\n\n                if (this.cubeBuilder) {\n                    this._requestData = options;\n                }\n\n                return options;\n            }\n        });\n\n        function flatColumns(columns) {\n            var result = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                result.push(columns[idx]);\n                if (columns[idx].children) {\n                    result = result.concat(flatColumns(columns[idx].children));\n                }\n            }\n\n            return result;\n        }\n\n        function sortItemsTree(field, items, sortFunction) {\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].children && items[i].children.length) {\n                    sortItemsTree(field, items[i].children, sortFunction);\n                }\n            }\n            if (items[0].parentName != field) {\n                return;\n            }\n            items = items.sort(sortFunction);\n        }\n\n        function fillSortTree(items, map) {\n            for (var i = 0; i < items.length; i++) {\n                var currentItem = map[items[i].name];\n\n                if (!$.isEmptyObject(currentItem.childrenMap)) {\n                    items[i].children = [];\n                    for (var name in currentItem.childrenMap) {\n                        items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                    }\n\n                    fillSortTree(items[i].children, map);\n                }\n            }\n        }\n\n        function addEmptyDataItem(result) {\n            result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n            return result;\n        }\n\n        function validateAxis(newAxis, axis, measures) {\n            if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n                return axis;\n            }\n\n            return;\n        }\n\n        function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var columnsLength = sourceTuples.length;\n            var targetColumnsLength = membersCount(targetTuples, measures);\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                    dataIdx += columnIdx % measuresLength;\n\n                    data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n                }\n            }\n        }\n\n        function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var rowsLength = sourceTuples.length;\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n                dataIdx *= measuresLength;\n                dataIdx += rowIdx % measuresLength;\n\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n                }\n            }\n        }\n\n        function tupleIndex(tuple, collection) {\n            return findExistingTuple(collection, tuple).index;\n        }\n\n        function membersCount(tuples, measures) {\n            if (!tuples.length) {\n                return 0;\n            }\n\n            var queue = tuples.slice();\n            var current = queue.shift();\n            var result = 1;\n\n            while (current) {\n                if (current.members) {\n                    [].push.apply(queue, current.members);\n                } else if (current.children) {\n                    if (!current.measure) {\n                        result += current.children.length;\n                    }\n                    [].push.apply(queue, current.children);\n                }\n\n                current = queue.shift();\n            }\n\n            if (measures.length) {\n                result = result * measures.length;\n            }\n\n            return result;\n        }\n\n        function normalizeAxis(axis) {\n            if (!axis) {\n                axis = {\n                    tuples: []\n                };\n            }\n\n            if (!axis.tuples) {\n                axis.tuples = [];\n            }\n\n            return axis;\n        }\n\n        function findDataIndex(tuple, memberIndex, measures) {\n            if (!tuple) {\n                return 0;\n            }\n\n            var measuresLength = Math.max(measures.length, 1);\n            var tuples = tuple.members.slice(0, memberIndex);\n            var current = tuples.shift();\n\n            //the initial value is equal to the total number of measures\n            //as the measures member is not extracted from the members of the starting tuple\n            //but should be calculated in the final result\n            var counter = measuresLength;\n\n            while (current) {\n                if (current.name === MEASURES) {\n                    //subtract 1 as the measures member has been already counted as a single standard member\n                    //but we are interested in the total number of measures instead\n                    counter += (measuresLength - 1);\n                } else if (current.children) {\n                    //is member\n                    [].push.apply(tuples, current.children);\n                } else {\n                    //is tuple\n                    counter ++;\n                    [].push.apply(tuples, current.members);\n                }\n\n                current = tuples.shift();\n            }\n\n            return counter;\n        }\n\n        function mergeTuples(target, source, measures) {\n            if (!source[0]) {\n                return {\n                    parsedRoot: null,\n                    tuples: target,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var result = findExistingTuple(target, source[0]);\n\n            if (!result.tuple) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var targetMembers = result.tuple.members;\n            var sourceMembers = source[0].members;\n            var memberIndex = -1;\n\n            if (targetMembers.length !== sourceMembers.length) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n                if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                    if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                        memberIndex = idx;\n                    }\n\n                    targetMembers[idx].children = sourceMembers[idx].children;\n                }\n            }\n\n            measures = Math.max(measures.length, 1);\n\n            return {\n                parsedRoot: result.tuple,\n                index: result.index * measures,\n                memberIndex: memberIndex,\n                tuples: target\n            };\n        }\n\n        function equalTuples(first, second) {\n            var equal = true;\n            var idx, length;\n\n            first = first.members;\n            second = second.members;\n\n            for (idx = 0, length = first.length; idx < length; idx++) {\n                if (first[idx].measure || second[idx].measure) {\n                    continue;\n                }\n\n                equal = equal && (getName(first[idx]) === getName(second[idx]));\n            }\n\n            return equal;\n        }\n\n        function findExistingTuple(tuples, toFind) {\n            var idx, length, tuple, found, counter = 0;\n            var memberIndex, membersLength, member;\n\n            for (idx = 0, length = tuples.length; idx < length; idx++) {\n                tuple = tuples[idx];\n                if (equalTuples(tuple, toFind)) {\n                    return {\n                        tuple: tuple,\n                        index: counter\n                    };\n                }\n\n                counter ++;\n\n                for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                    member = tuple.members[memberIndex];\n                    if (member.measure) {\n                        //counter += member.children.length;\n                        continue;\n                    }\n                    found = findExistingTuple(member.children, toFind);\n                    counter += found.index;\n                    if (found.tuple) {\n                        return {\n                            tuple: found.tuple,\n                            index: counter\n                        };\n                    }\n                }\n            }\n\n            return {\n                index: counter\n            };\n        }\n\n        function addMembers(members, map) {\n            var member, i, len, path = \"\";\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                path += member.name;\n                if (!map[path]) {\n                    map[path] = member;\n                }\n            }\n        }\n\n\n        function findParentMember(tuple, map) {\n            var members = tuple.members;\n            var i, len, member, path = \"\";\n            var parentPath = \"\";\n            var parentMember;\n\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                if (parentMember) {\n                    if (map[path + member.name]) {\n                        path += member.name;\n                        parentMember = map[path];\n                        continue;\n                    } else if (map[path + member.parentName]) {\n                        return map[path + member.parentName];\n                    } else if (map[parentPath + member.parentName]) {\n                        return map[parentPath + member.parentName];\n                    } else {\n                        return map[parentPath];\n                    }\n                }\n\n                path += member.name;\n                parentMember = map[member.parentName];\n\n                if (!parentMember) {\n                    parentMember = map[path];\n                    if (!parentMember) {\n                        return null;\n                    }\n                }\n\n                if (parentMember) {\n                    parentPath += parentMember.name;\n                }\n            }\n\n            return parentMember;\n        }\n\n        function measurePosition(tuple, measures) {\n            if (measures.length === 0) {\n                return -1;\n            }\n\n            var measure = measures[0];\n            var members = tuple.members;\n            for (var idx = 0, len = members.length; idx < len; idx ++) {\n                if (members[idx].name == measure.name) {\n                    return idx;\n                }\n            }\n        }\n\n        function normalizeTupleMeasures(tuple, index) {\n            if (index < 0) {\n                return;\n            }\n            var member = {\n                name: MEASURES,\n                measure: true,\n                children: [\n                    $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n                ]\n            };\n            tuple.members.splice(index, 1, member);\n            tuple.dataIndex = undefined$1;\n        }\n\n        function parseSource(tuples, measures) {\n            if (tuples.length < 1) {\n                return [];\n            }\n            var result = [];\n            var map = { };\n            var measureIndex = measurePosition(tuples[0], measures);\n\n            for (var i = 0; i < tuples.length; i++) {\n                var tuple = tuples[i];\n\n                //keep the old data index of the tuple\n                tuple.dataIndex = i;\n\n                normalizeTupleMeasures(tuple, measureIndex);\n                var parentMember = findParentMember(tuple, map);\n\n                if (parentMember) {\n                    if (measureIndex < 0 || !parentMember.measure) {\n                        parentMember.children.push(tuple);\n                    } else {\n                        parentMember.children.push(tuple.members[measureIndex].children[0]);\n                    }\n                } else {\n                    result.push(tuple);\n                }\n\n                addMembers(tuple.members, map);\n            }\n\n            return result;\n        }\n\n        function prepareDataOnRows(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var rowsLength = indices.length;\n            var columnsLength = Math.max(data.length / rowsLength, 1);\n            var rowIndex, columnIndex, targetIndex, sourceIndex;\n            var calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                targetIndex = columnsLength * rowIndex;\n                sourceIndex = columnsLength * indices[rowIndex];\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                    result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function prepareDataOnColumns(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var columnsLength = indices.length;\n            var rowsLength = Math.max(data.length / columnsLength, 1);\n            var columnIndex, rowIndex, dataIndex, calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                dataIndex = columnsLength * rowIndex;\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = indices[columnIndex] + dataIndex;\n                    result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function buildDataIndices(tuples) {\n            tuples = tuples.slice();\n            var result = [];\n            var tuple = tuples.shift();\n            var idx, length, spliceIndex, children, member;\n\n            while (tuple) {\n                //required for multiple measures\n                if (tuple.dataIndex !== undefined$1) {\n                    result.push(tuple.dataIndex);\n                }\n\n                spliceIndex = 0;\n                for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                    member = tuple.members[idx];\n                    children = member.children;\n                    if (member.measure) {\n                        [].splice.apply(tuples, [0, 0].concat(children));\n                    } else {\n                        [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                    }\n                    spliceIndex += children.length;\n                }\n\n                tuple = tuples.shift();\n            }\n\n            return result;\n        }\n\n        PivotDataSourceV2.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n        };\n\n        PivotDataSource.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n        };\n\n        function baseHierarchyPath(memberName) {\n            var parts = memberName.split(\".\");\n            if (parts.length > 2) {\n                return parts[0] + \".\" + parts[1];\n            }\n            return memberName;\n        }\n\n        function expandMemberDescriptor(names, sort) {\n            var idx = names.length - 1;\n            var name = names[idx];\n            var sortDescriptor;\n\n            sortDescriptor = sortDescriptorForMember(sort, name);\n\n            if (sortDescriptor && sortDescriptor.dir) {\n                name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n            } else {\n                name += \".Children\";\n            }\n\n            names[idx] = name;\n\n            return names;\n        }\n\n        function sortDescriptorForMember(sort, member) {\n            for (var idx = 0, length = sort.length; idx < length; idx++) {\n                if (member.indexOf(sort[idx].field) === 0) {\n                    return sort[idx];\n                }\n            }\n            return null;\n        }\n\n        function crossJoin(names) {\n            var result = \"CROSSJOIN({\";\n            var r;\n\n            if (names.length > 2) {\n                r = names.pop();\n                result += crossJoin(names);\n            } else {\n                result += names.shift();\n                r = names.pop();\n            }\n\n            result += \"},{\";\n            result += r;\n            result += \"})\";\n            return result;\n        }\n\n        function crossJoinCommand(members, measures) {\n            var tmp = members.slice(0);\n\n            if (measures.length > 1) {\n                tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n            }\n\n            return crossJoin(tmp);\n        }\n\n        function measureNames(measures) {\n            var idx = 0;\n            var length = measures.length;\n            var result = [];\n            var measure;\n\n            for (; idx < length; idx++) {\n                measure = measures[idx];\n                result.push(measure.name !== undefined$1 ? measure.name : measure);\n            }\n\n            return result;\n        }\n\n        function indexOf(name, items) {\n            var idx, length, index = -1;\n\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                if (getName(items[idx]) === name) {\n                    index = idx;\n                    break;\n                }\n            }\n            return index;\n        }\n\n        function getName(name) {\n            name = name.name || name;\n\n            if (toString.call(name) === \"[object Array]\") {\n                name = name[name.length - 1];\n            }\n\n            return name;\n        }\n\n        function getRootNames(members) {\n            var length = members.length;\n            var names = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                names.push(members[idx].name[0]);\n            }\n\n            return names;\n        }\n\n        function mapNames(names, rootNames) {\n            var name;\n            var rootName;\n\n            var j;\n            var idx = 0;\n            var length = names.length;\n            var rootLength = rootNames.length;\n\n            rootNames = rootNames.slice(0);\n\n            for (; idx < length; idx++) {\n                name = names[idx];\n\n                for (j = 0; j < rootLength; j++) {\n                    rootName = baseHierarchyPath(rootNames[j]);\n\n                    if (name.indexOf(rootName) !== -1) {\n                        rootNames[j] = name;\n                        break;\n                    }\n                }\n            }\n\n            return {\n                names: rootNames,\n                expandedIdx: j,\n                uniquePath: rootNames.slice(0, j + 1).join(\"\")\n            };\n        }\n\n        function parseDescriptors(members) {\n            var expanded = [];\n            var child = [];\n            var root = [];\n            var member;\n\n            var j, l;\n            var idx = 0;\n            var length = members.length;\n\n            var name;\n            var hierarchyName;\n\n            var found;\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                name = member.name;\n                found = false;\n\n                if (toString.call(name) !== \"[object Array]\") {\n                    member.name = name = [name];\n                }\n\n                if (name.length > 1) {\n                    child.push(member);\n                } else {\n                    hierarchyName = baseHierarchyPath(name[0]);\n\n                    for (j = 0, l = root.length; j < l; j++) {\n                        if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        root.push(member);\n                    }\n\n                    if (member.expand) {\n                        expanded.push(member);\n                    }\n                }\n            }\n\n            expanded = expanded.concat(child);\n\n            return {\n                root: root,\n                expanded: expanded\n            };\n        }\n\n        function serializeMembers(members, measures, sort) {\n            var command = \"\";\n\n            members = members || [];\n\n            var expanded = parseDescriptors(members);\n            var root = expanded.root;\n\n            var rootNames = getRootNames(root);\n            var crossJoinCommands = [];\n\n            expanded = expanded.expanded;\n\n            var length = expanded.length;\n            var idx = 0;\n\n            var memberName;\n            var names = [];\n\n            if (rootNames.length > 1 || measures.length > 1) {\n                crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names = mapNames(memberName, rootNames).names;\n\n                    crossJoinCommands.push(crossJoinCommand(names, measures));\n                }\n\n                command += crossJoinCommands.join(\",\");\n            } else {\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names.push(memberName[0]); //check if this is ok\n                }\n\n                command += rootNames.concat(names).join(\",\");\n            }\n\n            return command;\n        }\n\n        var filterFunctionFormats = {\n            contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n            doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n            startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n            neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n        };\n\n        function serializeExpression(expression) {\n            var command = \"\";\n            var value = expression.value;\n            var field = expression.field;\n            var operator = expression.operator;\n\n            if (operator == \"in\") {\n                command += \"{\";\n                command += value;\n                command += \"}\";\n            } else {\n                command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n                command += \"Filter(\";\n                command += field + \".MEMBERS\";\n                command += kendo.format(filterFunctionFormats[operator], field, value);\n                command += \")\";\n            }\n\n            return command;\n        }\n\n        function serializeFilters(filter, cube) {\n            var command = \"\", current;\n            var filters = filter.filters;\n            var length = filters.length;\n            var idx;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n\n                current = \"SELECT (\";\n                current += serializeExpression(filters[idx]);\n                current += \") ON 0\";\n\n                if (idx == length - 1) {\n                    current += \" FROM [\" + cube + \"]\";\n                    command = current;\n                } else {\n                    command = current + \" FROM ( \" + command + \" )\";\n                }\n            }\n\n            return command;\n        }\n\n        function serializeOptions(parentTagName, options, capitalize) {\n            var result = \"\";\n\n            if (options) {\n                result += \"<\" + parentTagName + \">\";\n                var value;\n                for (var key in options) {\n                    value = options[key];\n                    if (capitalize) {\n                        key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                    }\n                    result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n                }\n                result += \"</\" + parentTagName + \">\";\n            } else {\n                result += \"<\" + parentTagName + \"/>\";\n            }\n            return result;\n        }\n\n        var xmlaDiscoverCommands = {\n            schemaCubes: \"MDSCHEMA_CUBES\",\n            schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n            schemaMeasures: \"MDSCHEMA_MEASURES\",\n            schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n            schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n            schemaLevels: \"MDSCHEMA_LEVELS\",\n            schemaMembers: \"MDSCHEMA_MEMBERS\",\n            schemaKPIs: \"MDSCHEMA_KPIS\"\n        };\n\n        var convertersMap = {\n            read: function(options) {\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n                command += \"SELECT NON EMPTY {\";\n\n                var columns = options.columns || [];\n                var rows = options.rows || [];\n\n                var measures = options.measures || [];\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n                var sort = options.sort || [];\n\n                if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columns = rows;\n                    rows = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columns.length && !rows.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (columns.length) {\n                    command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n                } else if (measures.length && !measuresRowAxis) {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n                if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                    command += \", NON EMPTY {\";\n\n                    if (rows.length) {\n                        command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                    } else {\n                        command += measureNames(measures).join(\",\");\n                    }\n\n                    command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n                }\n\n                if (options.filter) {\n                    command += \" FROM \";\n                    command += \"(\";\n                    command += serializeFilters(options.filter, options.connection.cube);\n                    command += \")\";\n                } else {\n                    command += \" FROM [\" + options.connection.cube + \"]\";\n                }\n\n                if (measures.length == 1 && columns.length) {\n                    command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n                }\n\n                command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n                return command.replace(/\\&/g, \"&amp;\");\n            },\n            discover: function(options) {\n                options = options || {};\n\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n                command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n                command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n                if (options.connection && options.connection.catalog) {\n                    options.properties = $.extend({}, {\n                        Catalog: options.connection.catalog\n                    }, options.properties);\n                }\n\n                command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n                command += '</Discover></Body></Envelope>';\n                return command;\n            }\n        };\n\n        var XmlaTransport = kendo.data.RemoteTransport.extend({\n            init: function(options) {\n                var originalOptions = options;\n\n                options = this.options = extend(true, {}, this.options, options);\n\n                kendo.data.RemoteTransport.call(this, options);\n\n                if (isFunction(originalOptions.discover)) {\n                    this.discover = originalOptions.discover;\n                } else if (typeof originalOptions.discover === \"string\") {\n                    this.options.discover = {\n                        url: originalOptions.discover\n                    };\n                } else if (!originalOptions.discover) {\n                    this.options.discover = this.options.read;\n                }\n            },\n            setup: function(options, type) {\n                options.data = options.data || {};\n                $.extend(true, options.data, { connection: this.options.connection });\n\n                return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n            },\n            options: {\n                read: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                discover: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                parameterMap: function(options, type) {\n                    return convertersMap[type](options,type);\n                }\n            },\n\n            discover: function(options) {\n                return $.ajax(this.setup(options, \"discover\"));\n            }\n        });\n\n        var XmlaTransportV2 = Class.extend({\n            init: function(options) {\n                options = this.options = extend(true, {}, this.options, options);\n            },\n            setup: function(options) {\n                return $.extend(true, options || {}, { connection: this.options.connection });\n            },\n            read: function(options) {\n                var that = this,\n                    success,\n                    error;\n\n                var fetchOptions = that.setup(options.data, READ);\n\n                success = options.success || $.noop;\n                error = options.error || $.noop;\n\n                if (options.parameterMap) {\n                    fetchOptions = that.parameterMap(fetchOptions, READ);\n                }\n                const requestOptions = typeof that.options.read === \"object\" && that.options.read.url ? that.options.read : { url: that.options.read };\n\n                fetchData(requestOptions, fetchOptions)\n                .then(createDataState)\n                .then(function(newDataState) {\n                    success(newDataState);\n                })\n                .catch(function(err) { error(err); });\n            },\n\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            },\n\n            discover: function(options) {\n                return fetchDiscover({ url: this.options.read }, options);\n            }\n        });\n\n        function asArray(object) {\n            if (object == null) {\n                return [];\n            }\n\n            var type = toString.call(object);\n            if (type !== \"[object Array]\") {\n                return [object];\n            }\n\n            return object;\n        }\n\n        function translateAxis(axis) {\n            var result = { tuples: [] };\n            var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n            var captionGetter = kendo.getter(\"Caption['#text']\");\n            var unameGetter = kendo.getter(\"UName['#text']\");\n            var levelNameGetter = kendo.getter(\"LName['#text']\");\n            var levelNumGetter = kendo.getter(\"LNum['#text']\");\n            var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n            var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n            var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n            for (var idx = 0; idx < tuples.length; idx++) {\n                var members = [];\n                var member = asArray(tuples[idx].Member);\n                for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                    members.push({\n                        children: [],\n                        caption: captionGetter(member[memberIdx]),\n                        name: unameGetter(member[memberIdx]),\n                        levelName: levelNameGetter(member[memberIdx]),\n                        levelNum: levelNumGetter(member[memberIdx]),\n                        hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                        parentName: parentNameGetter(member[memberIdx]),\n                        hierarchy: hierarchyGetter(member[memberIdx])\n                    });\n                }\n\n                result.tuples.push({ members: members });\n            }\n            return result;\n        }\n\n        var schemaDataReaderMap = {\n            cubes: {\n                name: kendo.getter(\"CUBE_NAME['#text']\", true),\n                caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n            },\n            catalogs: {\n                name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true)\n            },\n            measures: {\n                name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n                caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n                defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n            },\n            kpis: {\n                name: kendo.getter(\"KPI_NAME['#text']\", true),\n                caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n                value: kendo.getter(\"KPI_VALUE['#text']\", true),\n                goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n                status: kendo.getter(\"KPI_STATUS['#text']\", true),\n                trend: kendo.getter(\"KPI_TREND['#text']\", true),\n                statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n                trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n                description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n            },\n            dimensions: {\n                name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n                caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n                type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n    //unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n            },\n            hierarchies: {\n                name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n                caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n                origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n                defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n            },\n            levels: {\n                name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n                caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n                orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n                origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n            },\n            members: {\n                name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n                caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n            }\n        };\n\n        var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n        var XmlaDataReader = kendo.data.XmlDataReader.extend({\n            init: function(options) {\n                kendo.data.XmlDataReader.call(this, options);\n\n                this._extend(options);\n            },\n            _extend: function(options) {\n                var idx = 0;\n                var length = xmlaReaderMethods.length;\n                var methodName;\n                var option;\n\n                for (; idx < length; idx++) {\n                    methodName = xmlaReaderMethods[idx];\n                    option = options[methodName];\n\n                    if (option && option !== identity) {\n                        this[methodName] = option;\n                    }\n                }\n            },\n            parse: function(xml) {\n                var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n                return kendo.getter(\"['Envelope']['Body']\", true)(result);\n            },\n            errors: function(root) {\n                var fault = kendo.getter(\"['Fault']\", true)(root);\n                if (fault) {\n                    return [{\n                        faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                        faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                    }];\n                }\n                return null;\n            },\n            axes: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n                var axis;\n\n                var result = {\n                    columns: {},\n                    rows: {}\n                };\n\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n\n                    if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                        if (!result.columns.tuples) {\n                            result.columns = translateAxis(axis);\n                        } else {\n                            result.rows = translateAxis(axis);\n                        }\n                    }\n                }\n\n                return result;\n            },\n            data: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n                var result = [];\n                var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n                var valueGetter = kendo.getter(\"Value['#text']\");\n                var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n                for (var idx = 0; idx < cells.length; idx++) {\n                    result.push({\n                        value: valueGetter(cells[idx]),\n                        fmtValue: fmtValueGetter(cells[idx]),\n                        ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                    });\n                }\n\n                return result;\n            },\n            _mapSchema: function(root, getters) {\n                root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n                var rows = asArray(kendo.getter(\"row\", true)(root));\n\n                var result = [];\n\n                for (var idx = 0; idx < rows.length; idx++) {\n                    var obj = {};\n                    for (var key in getters) {\n                        obj[key] = getters[key](rows[idx]);\n                    }\n                    result.push(obj);\n                }\n\n                return result;\n            },\n            measures: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.measures);\n            },\n            kpis: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.kpis);\n            },\n            hierarchies: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n            },\n            levels: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.levels);\n            },\n            dimensions: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.dimensions);\n            },\n            cubes: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.cubes);\n            },\n            catalogs: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.catalogs);\n            },\n            members: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.members);\n            }\n        });\n\n        extend(true, kendo.data, {\n           PivotDataSource: PivotDataSource,\n           PivotDataSourceV2: PivotDataSourceV2,\n           XmlaTransport: XmlaTransport,\n           XmlaDataReader: XmlaDataReader,\n           PivotCubeBuilder: PivotCubeBuilder,\n           transports: {\n               xmla: XmlaTransport\n           },\n           readers: {\n               xmla: XmlaDataReader\n           }\n        });\n\n        var sortExpr = function(expressions, name) {\n            if (!expressions) {\n                return null;\n            }\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field === name) {\n                    return expressions[idx];\n                }\n            }\n\n            return null;\n        };\n\n        var removeExpr = function(expressions, name) {\n            var result = [];\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field !== name) {\n                    result.push(expressions[idx]);\n                }\n            }\n\n            return result;\n        };\n\n        kendo.ui.PivotSettingTarget = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.element.addClass(\"k-pivot-setting\");\n\n                that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                if (!options.template) {\n                    var actions = '';\n\n                    if (that.options.enabled) {\n                        actions = `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n                    }\n\n                    that.options.template = (data) => ''\n                        + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${data.name || data}\">`\n                            + '<span class=\"k-chip-content\">'\n                                + `<span class=\"k-chip-text\">${data.name || data}</span>`\n                            + '</span>'\n                            + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                        + '</span>';\n                }\n\n                that.template = kendo.template(that.options.template);\n                that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var action = target.closest('.k-chip-action');\n                    var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                     .attr(kendo.attr(\"name\"));\n\n                    if (!name) {\n                        return;\n                    }\n\n                    if (action.hasClass(\"k-setting-delete\")) {\n                        that.remove(name);\n                        return;\n                    }\n\n                    if (target.closest('.k-chip-actions').length > 0) {\n                        return;\n                    }\n\n                    if (that.options.sortable) {\n                        var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                        that.sort({\n                            field: name,\n                            dir: sortDirection\n                        });\n                    }\n                });\n\n                if (options.filterable || options.sortable) {\n                    that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                        messages: that.options.messages.fieldMenu,\n                        filter: \".k-setting-fieldmenu\",\n                        filterable: options.filterable,\n                        sortable: options.sortable,\n                        dataSource: that.dataSource\n                    });\n                }\n\n                that.refresh();\n            },\n\n            options: {\n                name: \"PivotSettingTarget\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                emptyTemplate: (data) => `<div class='k-empty'>${data}</div>`,\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                if (that.options.enabled) {\n                    this.sortable = this.element.kendoSortable({\n                        connectWith: this.options.connectWith,\n                        hint: that.options.hint,\n                        filter: \">*:not(.k-empty)\",\n                        cursor: \"move\",\n                        start: function(e) {\n                            e.item.trigger(\"focus\").trigger(\"blur\");\n                        },\n                        change: function(e) {\n                            var name = e.item.attr(kendo.attr(\"name\"));\n\n                            if (e.action == \"receive\") {\n                                that.add(name);\n                            } else if (e.action == \"remove\") {\n                                that.remove(name);\n                            } else if (e.action == \"sort\") {\n                                that.move(name, e.newIndex);\n                            }\n                        }\n                    }).data(\"kendoSortable\");\n                }\n            },\n\n            _isKPI: function(data) {\n                return data.type === \"kpi\" || data.measure;\n            },\n\n            validate: function(data) {\n                var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n                if (isMeasure) {\n                    return this.options.setting === \"measures\";\n                }\n\n                if (this.options.setting === \"measures\") {\n                    return isMeasure;\n                }\n\n                var items = this.dataSource[this.options.setting]();\n                var name = data.defaultHierarchy || data.uniqueName;\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                return true;\n            },\n\n            add: function(name) {\n                var items = this.dataSource[this.options.setting]();\n                var i, l;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                for (i = 0, l = name.length; i < l; i++) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            move: function(name, index) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            remove: function(name) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this.dataSource._filter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this.dataSource._filter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this.dataSource._sort = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            sort: function(expr) {\n                var sortable = this.options.sortable;\n                var allowUnsort = sortable === true || sortable.allowUnsort;\n                var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n                var expressions = (this.dataSource.sort() || []);\n                var result = removeExpr(expressions, expr.field);\n\n                if (skipExpr && expressions.length !== result.length) {\n                    expr = null;\n                }\n\n                if (expr) {\n                    result.push(expr);\n                }\n\n                this.dataSource.sort(result);\n            },\n\n            refresh: function() {\n                var html = \"\";\n                var items = this.dataSource[this.options.setting]();\n                var length = items.length;\n                var idx = 0;\n                var item;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                    }\n                } else {\n                    html = this.emptyTemplate(this.options.messages.empty);\n                }\n\n                this.element.html(html);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            },\n\n            _sortIcon: function(name) {\n                var expressions = this.dataSource.sort();\n                var expr = sortExpr(expressions, getName(name));\n                var icon = \"\";\n\n                if (expr) {\n                    icon = \"sort-\" + expr.dir;\n                }\n\n                return icon;\n            }\n        });\n\n        kendo.ui.PivotSettingTargetV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                that.template = kendo.template(that.options.template);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var parent = target.closest(\".k-chip\");\n                    var name = parent.find(\".k-chip-label\").text();\n\n                    if (!name) {\n                        return;\n                    }\n\n                    that.remove(name);\n                    parent.remove();\n                    that.trigger(\"remove\", { name: name });\n                });\n\n                if (that.options.navigatable) {\n                    that.element.on(\"keydown\" + NS, \".k-chip\", function(ev) {\n                        var chip = $(ev.target),\n                            key = ev.keyCode,\n                            name = chip.find(\".k-chip-label\").text();\n\n                        if (key === keys.DELETE || key === keys.BACKSPACE) {\n                            const targetIndex = that.options.configuratorNavigation ? that.options.configuratorNavigation.elements.indexOf(chip[0]) : -1;\n                            chip.find(\".k-i-x-circle,.k-svg-i-x-circle\").trigger(\"click\");\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.options.configuratorNavigation.elements[targetIndex - 1],\n                            );\n                        } else if (key === keys.DOWN && ev.altKey) {\n                            chip.find(\".k-i-more-vertical,.k-svg-i-more-vertical\").trigger(\"click\");\n                        } else if (ev.ctrlKey && ev.shiftKey) {\n                            if (key == keys.LEFT) {\n                                that.move(name, Math.max(0, chip.index() - 1));\n\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    that.element.find(\".k-chip .k-chip-label\")\n                                        .filter((ind, el) => $(el).text() == name)\n                                        .closest(\".k-chip\")[0]\n                                );\n                            } else if (key == keys.RIGHT) {\n                                that.move(name, Math.min(chip.index() + 1, chip.parent().find(\"> .k-chip\").length - 1));\n\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    that.element.find(\".k-chip .k-chip-label\")\n                                        .filter((ind, el) => $(el).text() == name)\n                                        .closest(\".k-chip\")[0]\n                                );\n                            } else if ((key == keys.UP && that.options.setting == \"rows\") ||\n                                (key == keys.DOWN && that.options.setting == \"columns\")) {\n\n                                let otherTarget = that.sortable.options.connectWith.data(\"kendoPivotSettingTargetV2\");\n                                if (!otherTarget) {\n                                    return;\n                                }\n\n                                that.remove(name);\n                                otherTarget.add(name);\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    otherTarget.element.find(\".k-chip\").last()[0]\n                                );\n                            }\n                        }\n                    });\n                }\n\n                that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filterable: options.filterable,\n                    filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                    sortable: options.sortable,\n                    dataSource: that.dataSource,\n                    setting: options.setting\n                });\n\n                that.refresh();\n            },\n\n            events: [\"remove\"],\n\n            options: {\n                name: \"PivotSettingTargetV2\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _applyState: function() {\n                if (this._sortState !== undefined$1) {\n                    this.dataSource._sort = this._sortState;\n                    this._sortState = undefined$1;\n                }\n\n                if (this._stateFilter !== undefined$1) {\n                    this.dataSource._filter = this._stateFilter;\n                    this._stateFilter = undefined$1;\n                }\n\n                this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n            },\n\n            _cancelChanges: function() {\n                this._sortState = undefined$1;\n                this._stateFilter = undefined$1;\n                this._savedState = kendo.deepExtend([], this._initialState);\n                this._redraw();\n            },\n\n            _state: function(newState, modifyInit) {\n                var that = this;\n\n                if (!newState) {\n                    return that._savedState || [];\n                } else {\n                    if (!that._savedState || modifyInit) {\n                        that._initialState = kendo.deepExtend([], newState);\n                    }\n                    that._savedState = kendo.deepExtend([], newState);\n                }\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.focus().blur();\n                    },\n                    change: function(e) {\n                        var name = e.item.find(\".k-chip-label\").text();\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            },\n\n            add: function(name) {\n                var items = this._state();\n                var i, l;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                for (i = 0, l = name.length; i < l; i++) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            move: function(name, index) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            remove: function(name) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this._savedFilter = this.dataSource._filter;\n                        this._savedFilter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this._savedFilter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this._sortState = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            _emptyState: function(enable) {\n                var that = this;\n                if (enable) {\n                    that.element.html(this.options.messages.empty)\n                        .addClass(\"k-settings-description\")\n                        .removeClass(\"k-chip-list\");\n                } else {\n                    that.element\n                        .removeClass(\"k-settings-description\")\n                        .addClass(\"k-chip-list\");\n                }\n            },\n\n            _redraw: function() {\n                var items = this._state() || [];\n                this._emptyState(!items.length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            _targetsHTML: function(items) {\n                var item;\n                var html = \"\";\n                var idx = 0;\n                var enabled = true;\n\n                if (items.length) {\n                    for (; idx < items.length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template({ name: item.name, menuenabled: enabled });\n                    }\n                }\n                return html;\n            },\n\n            refresh: function() {\n                if (this.dataSource._preventRefresh) {\n                    return;\n                }\n                var items = this.dataSource[this.options.setting]();\n                this._state(items, true);\n                this._emptyState(!this._state().length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n\n        var PivotConfiguratorButton = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n\n                that._element();\n                that._attachEvents();\n            },\n\n            options: {\n                name: \"PivotConfiguratorButton\",\n                text: \"Change settings\",\n                configurator: \"\"\n            },\n\n            destroy: function() {\n                this.element.off(NS);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            toggle: function() {\n                var attr = kendo.attr(\"role\");\n                var pivotEl = this.element\n                    .closest(\"[\" + attr + \"=pivotcontainer]\")\n                    .find(\"[\" + attr + \"=pivotgridv2]\");\n                var pivot;\n\n                $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n                if (pivotEl.length) {\n                    pivot = pivotEl.getKendoPivotGridV2();\n                    pivot._setContentWidth();\n                    pivot._updateDimensions();\n                }\n            },\n\n            _attachEvents: function() {\n                this.element.on(\"click\" + NS, this.toggle.bind(this));\n            },\n\n            _element: function() {\n                var options = this.options;\n                this.element.addClass(\"k-pivotgrid-configurator-button\");\n                this.element.html(kendo.format(\"<span>{0}{1}</span>\",options.text, kendo.ui.icon('gear')));\n            }\n        });\n\n        var PivotContainer = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n                that.options = options;\n\n\n                that._addClasses();\n            },\n\n            options: {\n                name: \"PivotContainer\",\n                configuratorPosition: \"left\"\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            _addClasses: function() {\n                var options = this.options;\n                var className;\n                this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n                switch (options.configuratorPosition) {\n                    case \"right\":\n                        className = \"k-flex-row\";\n                        break;\n                    case \"left\":\n                        className = \"k-flex-row-reverse\";\n                        break;\n                    case \"bottom\":\n                        className = \"k-flex-column\";\n                        break;\n                    case \"top\":\n                        className = \"k-flex-column-reverse\";\n                        break;\n                    default:\n                        className = \"k-flex-row\";\n                }\n\n                this.element\n                    .addClass(\"k-d-flex k-pos-relative\")\n                    .addClass(className);\n            }\n        });\n\n        var PivotGridV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._ariaId = that.element.attr(\"id\") || kendo.guid();\n                that._wrapper();\n\n                that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n                that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n                that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n                that.wrapper.append(that._columnHeadersWrapper);\n                that.wrapper.append(that._rowHeadersWrapper);\n                that.wrapper.append(that._contentWrapper);\n\n                that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\", ariaId: that._ariaId });\n                that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\", ariaId: that._ariaId });\n                that._contentBuilder = new ContentBuilderV2( {\n                    dataCellTemplate: this.options.dataCellTemplate || DATACELL_TEMPLATE,\n                    kpiStatusTemplate: this.options.kpiStatusTemplate || KPISTATUS_TEMPLATE,\n                    kpiTrendTemplate: this.options.kpiTrendTemplate || KPITREND_TEMPLATE,\n                    measures: this.dataSource._measures,\n                    ariaId: that._ariaId\n                });\n\n                that._scrollable();\n                that._rowHeadersWrapper\n                    .add(that._columnHeadersWrapper)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var path = button.parent().attr(kendo.attr(\"key\"));\n                        var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                        var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                        var paths = path.split(\",\");\n                        var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                        if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                            return;\n                        }\n\n                        var reducerPayLoad = {\n                            type: \"HEADERS_ACTION_TOGGLE\",\n                            payload: paths,\n                            tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                        };\n                        var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                        var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                        that.dataSource._preventRefresh = true;\n                        that._columnBuilder._exportData = {};\n                        that._rowBuilder._exportData = {};\n\n                        if (isRow) {\n                            that.dataSource.rows(newHeaders);\n                        } else {\n                            that.dataSource.columns(newHeaders);\n                        }\n                     });\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                that._aria();\n\n                if (that.options.navigatable) {\n                    that._initPivotGridNavigation();\n                }\n\n                that._initLoader();\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGridV2\",\n                autoBind: true,\n                height: null,\n                columnWidth: null,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null,\n                kpiStatusTemplate: null,\n                kpiTrendTemplate: null,\n                messages: {\n                    emptyCellLabel: \"PivotGrid Empty Cell\"\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                Widget.fn.destroy.call(that);\n\n                if (that.loader) {\n                    that.loader.destroy();\n                }\n\n                if (that._windowResizeHandler) {\n                    $(window).off(RESIZE + NS, that._windowResizeHandler);\n                    that._windowResizeHandler = null;\n                }\n            },\n\n            _aria: function() {\n                var that = this;\n                that.element.attr(\"role\", \"grid\");\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                this._bindConfigurator();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            _initLoader: function(options) {\n                var that = this,\n                    defaultOptions = {\n                        size: 'medium',\n                        messages: { exporting: 'Exporting...' }\n                };\n                defaultOptions = $.extend({}, defaultOptions, options);\n\n                const loader = $(\"<div></div>\").kendoLoader(defaultOptions).data(\"kendoLoader\");\n\n                that.loader = loader;\n                that._loaderContainer = useLoaderContainer.bind(that);\n            },\n\n\n            _initPivotGridNavigation: function() {\n                var that = this;\n\n                that.navigation = new PivotGridNavigation({ tabIndex: 0 });\n                that.navigation.keyboardEvents.keydown.o = function(_target, nav, _ev) {\n                    if (!nav.root) {\n                        return;\n                    }\n                    // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n                    // you either can open the configurator with O, or you can close the configurator with ESC\n                    let next = nav.root.nextElementSibling;\n                    if (!(next && next instanceof HTMLElement)) {\n                        return;\n                    }\n                    if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                        next = next.nextElementSibling;\n                    }\n                    if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                        if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                            next.click();\n                        }\n                        setTimeout(() => {\n                            if (nav.root.parentNode) {\n                                const confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                                if (confHeader instanceof HTMLElement) {\n                                    confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                                    confHeader.focus();\n                                }\n                            }\n                        }, 0);\n                    }\n                };\n                that.navigation.start(that.element[0]);\n\n                const firstCell = that.navigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            },\n\n            _matchAriaAttributes: function(wrapper) {\n                var that = this;\n                const rowHeaderRows = wrapper.querySelectorAll(\n                    \".k-pivotgrid-row-headers .k-pivotgrid-row\"\n                );\n                const rowHeaderCols = !rowHeaderRows[0] ? [] : Array.from(rowHeaderRows[0].children).reduce(\n                    (acc, curr) => (acc += curr.getAttribute(\"colspan\") !== null ? +curr.getAttribute(\"colspan\") : 1),\n                    0\n                );\n                const colHeaderRows = wrapper.querySelectorAll(\n                    \".k-pivotgrid-column-headers tr\"\n                );\n                const colHeaderCells = wrapper.querySelectorAll(\n                    \".k-pivotgrid-column-headers th\"\n                );\n                const valueTableCells = wrapper.querySelectorAll(\".k-pivotgrid-values td\");\n                const emptyCell = wrapper.querySelector(\".k-pivotgrid-empty-cell\");\n\n                emptyCell.setAttribute(\"aria-rowspan\", colHeaderRows.length.toString());\n                emptyCell.setAttribute(\"aria-colspan\", rowHeaderCols.toString());\n\n                const firstColHeadersRow = colHeaderRows[0];\n                const firstColHeaderRowCellsIds = !firstColHeadersRow ? [] : Array.from(firstColHeadersRow.children)\n                    .map(el => el.getAttribute(\"id\"))\n                    .join(\" \");\n                firstColHeadersRow.setAttribute(\n                    \"aria-owns\",\n                    `${emptyCell.getAttribute(\"id\")} ${firstColHeaderRowCellsIds}`\n                );\n\n                rowHeaderRows.forEach((row, index) => {\n                    const valueCellsIds = that.filterAndMap(\n                        Array.from(valueTableCells),\n                        c => {\n                            const idParts = c.getAttribute(\"id\").split(\"-\");\n                            return idParts[idParts.length - 2] === (index + 1).toString();\n                        },\n                        c => c.getAttribute(\"id\")\n                    );\n\n                    row.setAttribute(\"aria-owns\", valueCellsIds.join(\" \"));\n                });\n\n                valueTableCells.forEach(cell => {\n                    const idParts = cell.getAttribute(\"id\").split(\"-\");\n                    const cellColIndex = +idParts[idParts.length - 1];\n                    const colHeaderCellsIds = that.filterAndMap(\n                        Array.from(colHeaderCells),\n                        c => {\n                            const idParts = c.getAttribute(\"id\").split(\"-\");\n                            const headerCellColIndex = +idParts[idParts.length - 1];\n                            const headerCellColspan = +c.getAttribute(\"colspan\");\n                            const colIndexIsEqual = cellColIndex === headerCellColIndex;\n                            const cellColIndexIsWithinHeaderCellRange =\n                                headerCellColspan > 1 &&\n                                headerCellColIndex < cellColIndex &&\n                                headerCellColIndex + headerCellColspan - 1 >= cellColIndex;\n\n                            return colIndexIsEqual || cellColIndexIsWithinHeaderCellRange;\n                        },\n                        c => c.getAttribute(\"id\")\n                    );\n\n                    cell.setAttribute(\"aria-describedby\", colHeaderCellsIds.join(\" \"));\n                });\n            },\n\n            filterAndMap: function(arr, predicate, mapper) {\n                return arr.reduce(\n                    (acc, curr) => (predicate(curr) ? [...acc, mapper(curr)] : acc),\n                    []\n                );\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _resize: function() {\n                var that = this;\n                that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that._columnHeadersWrapper;\n                var rowsHeader = that._rowHeadersWrapper;\n\n                that._resize();\n                that._windowResizeHandler = that._resize.bind(that);\n\n                that._contentWrapper.scroll(function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n                $(window).on(RESIZE + NS, that._windowResizeHandler);\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this._contentWrapper.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                    this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                    this._contentWrapper.scrollTop(scrollTop + (-delta));\n                }\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivotgrid\");\n                var emptyCell = $(`<span class=\"k-pivotgrid-empty-cell\" id=\"${this._ariaId}-empty-cell\" role=\"columnheader\"><span class=\"k-sr-only\">${this.options.messages.emptyCellLabel}</span></span>`);\n                this.wrapper.append(emptyCell);\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _progress: function(toggle) {\n                if (this._isExport) {\n                    this._loaderContainer(toggle, { message: \"Exporting...\" });\n                } else {\n                    kendo.ui.progress(this.wrapper, toggle);\n                }\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _updateDimensions: function() {\n                var that = this;\n                that.wrapper.css({\n                    \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                    \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n                });\n            },\n\n            _setContentWidth: function() {\n                if (!this.options.columnWidth) {\n                    return;\n                }\n                var contentTable = this._contentWrapper.find(\"table\");\n                var columnTable = this._columnHeadersWrapper.children(\"table\");\n                var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n                contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var dataIndex;\n                var dataItem;\n\n                if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                    rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                    return null;\n                }\n\n                dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n                dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n                return {\n                    columnTuple: dataItem.columnTuple,\n                    rowTuple: dataItem.rowTuple,\n                    dataItem: dataItem.data\n                };\n            },\n\n            refresh: function() {\n                var that = this;\n\n                var dataSource = that.dataSource;\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                var lastFocusedCellID = kendo._activeElement() ? kendo._activeElement().id : null;\n                var lastCellIdWithTabIndex = that.wrapper.find(\"[tabindex=0]\").attr(\"id\");\n                that._columnBuilder.setTuples(dataSource._columnTuples);\n                that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n                that._rowBuilder.setTuples(dataSource._rowTuples);\n                that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n                that._contentBuilder.setRowColumnInfo({\n                    columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                    rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                    columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                    rowHeaderDepth: that._rowBuilder.getBreadth(),\n                    data: dataSource._view\n                });\n\n                that._contentWrapper.html(that._contentBuilder.build());\n\n\n                that._setContentWidth();\n                that._updateDimensions();\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n                that._matchAriaAttributes(that.wrapper[0]);\n\n                if (!that.navigation) {\n                    return;\n                }\n\n                if (lastCellIdWithTabIndex && that.element.find(`#${lastCellIdWithTabIndex}`).length > 0) {\n                    that.element.find(`#${lastCellIdWithTabIndex}`).attr('tabindex', '0');\n                } else {\n                    const firstCell = that.navigation.first;\n\n                    if (firstCell) {\n                        firstCell.setAttribute('tabindex', '0');\n                    }\n                }\n\n                if (lastFocusedCellID && lastFocusedCellID.indexOf(that._ariaId) == 0) {\n                    that.navigation.focusElement(that.element.find(`#${lastFocusedCellID}`)[0]);\n                }\n            }\n        });\n\n        ui.plugin(PivotConfiguratorButton);\n        ui.plugin(PivotContainer);\n        ui.plugin(PivotGridV2);\n\n        var PivotGrid = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var columnBuilder;\n                var rowBuilder;\n\n                Widget.fn.init.call(that, element, options);\n\n                STATE_COLLAPSED_ICONNAME = kendo.support.isRtl(that.element) ? \"caret-alt-left\" : \"caret-alt-right\";\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._wrapper();\n                that._createLayout();\n\n                that._columnBuilder = columnBuilder = new ColumnBuilder();\n                that._rowBuilder = rowBuilder = new RowBuilder();\n                that._contentBuilder = new ContentBuilder();\n\n                that._templates();\n\n                that.columnsHeader\n                    .add(that.rowsHeader)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var builder = columnBuilder;\n                        var action = \"expandColumn\";\n                        var eventName;\n                        var path = button.attr(kendo.attr(\"path\"));\n                        var eventArgs = {\n                            axis: \"columns\",\n                            path: JSON.parse(path)\n                        };\n\n                        if (button.parent().is(\"td\")) {\n                            builder = rowBuilder;\n                            action = \"expandRow\";\n                            eventArgs.axis = \"rows\";\n                        }\n\n                        var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                        var metadata = builder.metadata[path];\n                        var request = metadata.expanded === undefined$1;\n\n                        eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                        eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                        if (that.trigger(eventName, eventArgs)) {\n                            return;\n                        }\n\n                        builder.metadata[path].expanded = !expanded;\n                        kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                        if (!expanded && request) {\n                            that.dataSource[action](eventArgs.path);\n                        } else {\n                            that.refresh();\n                        }\n                    });\n\n                that._scrollable();\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGrid\",\n                autoBind: true,\n                reorderable: true,\n                filterable: false,\n                sortable: false,\n                navigatable: false,\n                height: null,\n                columnWidth: 100,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null,\n                kpiStatusTemplate: null,\n                kpiTrendTemplate: null,\n                messages: {\n                    measureFields: \"Drop Data Fields Here\",\n                    columnFields: \"Drop Column Fields Here\",\n                    rowFields: \"Drop Rows Fields Here\"\n                }\n            },\n\n            _templates: function() {\n                var columnTemplate = this.options.columnHeaderTemplate;\n                var rowTemplate = this.options.rowHeaderTemplate;\n                var dataTemplate = this.options.dataCellTemplate;\n                var kpiStatusTemplate = this.options.kpiStatusTemplate;\n                var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n                this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n                this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n                this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n                this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n                this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n                var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n                var dataIndex;\n\n                if (!columnInfo || !rowInfo) {\n                    return null;\n                }\n\n                dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n                return {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: columnInfo.measure || rowInfo.measure,\n                    dataItem: this.dataSource.view()[dataIndex]\n                };\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measuresTarget) {\n                    this.measuresTarget.setDataSource(dataSource);\n                }\n\n                if (this.rowsTarget) {\n                    this.rowsTarget.setDataSource(dataSource);\n                }\n\n                if (this.columnsTarget) {\n                    this.columnsTarget.setDataSource(dataSource);\n                }\n\n                this._bindConfigurator();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._templates();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                clearTimeout(this._headerReflowTimeout);\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(STATERESET, that._stateResetHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._stateResetHandler = that._stateReset.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(STATERESET, that._stateResetHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _stateReset: function() {\n                this._columnBuilder.reset();\n                this._rowBuilder.reset();\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivot\");\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _measureFields: function() {\n                this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n                this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                    setting: \"measures\",\n                    messages: {\n                        empty: this.options.messages.measureFields\n                    }\n                });\n            },\n\n            _createSettingTarget: function(element, options) {\n                var template,\n                    pivotOptions = this.options;\n\n                template = ({ sortIcon, name }) => ''\n                    + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-${kendo.ns}name=\"${name}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-text\">${name}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions k-field-actions\">'\n                            + getIcons(sortIcon, options, pivotOptions)\n                        + '</span>'\n                    + '</span>';\n\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`,\n                    enabled: this.options.reorderable\n                }, options));\n            },\n\n            _initSettingTargets: function() {\n                this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                    connectWith: this.rowFields,\n                    setting: \"columns\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.columnFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n\n                this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                    connectWith: this.columnFields,\n                    setting: \"rows\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.rowFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n            },\n\n            _createLayout: function() {\n                var that = this;\n                var layoutTable = $(LAYOUT_TABLE);\n                var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n                var rightContainer = layoutTable.find(\".k-pivot-table\");\n                var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n                that._measureFields();\n                that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n                that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n                that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                        .wrap('<div class=\"k-grid-header\" />');\n\n                that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n                that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n                that.content = $('<div class=\"k-grid-content\" />');\n\n                leftContainer.append(that.measureFields);\n                leftContainer.append(that.rowFields);\n                leftContainer.append(that.rowsHeader);\n\n                gridWrapper.append(that.columnsHeader.parent());\n                gridWrapper.append(that.content);\n\n                rightContainer.append(that.columnFields);\n                rightContainer.append(gridWrapper);\n\n                that.wrapper.append(layoutTable);\n\n                that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n                that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n                that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n                that._initSettingTargets();\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n\n            _resize: function() {\n                if (this.content[0].firstChild) {\n                    this._setSectionsWidth();\n                    this._setSectionsHeight();\n                    this._setContentWidth();\n                    this._setContentHeight();\n                    this._columnHeaderReflow();\n                }\n            },\n\n            _columnHeaderReflow: function() {\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                if (!kendo.support.browser.mozilla) {\n                    return;\n                }\n\n                clearTimeout(this._headerReflowTimeout);\n\n                columnTable.css(\"table-layout\", \"auto\");\n\n                this._headerReflowTimeout = setTimeout(function() {\n                    columnTable.css(\"table-layout\", \"\");\n                });\n            },\n\n            _setSectionsWidth: function() {\n                var rowsHeader = this.rowsHeader;\n                var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n                var width;\n\n                width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n                width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n                leftColumn.width(width);\n            },\n\n            _setSectionsHeight: function() {\n                var measureFieldsHeight = this.measureFields.height(AUTO).height();\n                var columnFieldsHeight = this.columnFields.height(AUTO).height();\n                var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n                var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n                var padding = rowFieldsHeight - this.rowFields.height();\n\n                var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n                var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n                this.measureFields.height(firstRowHeight);\n                this.columnFields.height(firstRowHeight);\n                this.rowFields.height(secondRowHeight - padding);\n                this.columnsHeader.height(secondRowHeight);\n            },\n\n            _setContentWidth: function() {\n                var contentTable = this.content.find(\"table\");\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                var rowLength = contentTable.children(\"colgroup\").children().length;\n\n                var calculatedWidth = rowLength * this.options.columnWidth;\n                var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n                if (minWidth < 100) {\n                    minWidth = 100;\n                }\n\n                contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n                this._resetColspan(columnTable);\n            },\n\n            _setContentHeight: function() {\n                var that = this;\n                var content = that.content;\n                var rowsHeader = that.rowsHeader;\n                var innerHeight = that.wrapper.innerHeight();\n                var scrollbar = kendo.support.scrollbar();\n                var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n                var height = that.options.height;\n\n                if (that.wrapper.is(\":visible\")) {\n                    if (!innerHeight || !height) {\n                        if (skipScrollbar) {\n                            scrollbar = 0;\n                        }\n\n                        content.height(\"auto\");\n                        rowsHeader.height(content.height() - scrollbar);\n                        return;\n                    }\n\n                    innerHeight -= outerHeight(that.columnFields);\n                    innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                    if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                        innerHeight = scrollbar * 2 + 1;\n                        if (!skipScrollbar) {\n                            innerHeight += scrollbar;\n                        }\n                    }\n\n                    content.height(innerHeight);\n\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    rowsHeader.height(innerHeight - scrollbar);\n                }\n            },\n\n            _resetColspan: function(columnTable) {\n                var that = this;\n                var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n                if (that._colspan === undefined$1) {\n                    that._colspan = cell.attr(\"colspan\");\n                }\n\n                cell.attr(\"colspan\", 1);\n\n                clearTimeout(that._layoutTimeout);\n\n                that._layoutTimeout = setTimeout(function() {\n                    cell.attr(\"colspan\", that._colspan);\n                    that._colspan = undefined$1;\n                });\n            },\n\n            _axisMeasures: function(axis) {\n                var result = [];\n                var dataSource = this.dataSource;\n                var measures = dataSource.measures();\n                var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n                if (dataSource.measuresAxis() === axis) {\n                    if (dataSource[axis]().length === 0 || hasMeasure) {\n                        result = measures;\n                    }\n                }\n\n                return result;\n            },\n\n            items: function() {\n                return [];\n            },\n\n            refresh: function() {\n                var that = this;\n                var dataSource = that.dataSource;\n\n                var axes = dataSource.axes();\n                var columns = (axes.columns || {}).tuples || [];\n                var rows = (axes.rows || {}).tuples || [];\n\n                var columnBuilder = that._columnBuilder;\n                var rowBuilder = that._rowBuilder;\n\n                var columnAxis = {};\n                var rowAxis = {};\n\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n                rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n                that.columnsHeaderTree.render(columnBuilder.build(columns));\n                that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n                columnAxis = {\n                    indexes: columnBuilder._indexes,\n                    measures: columnBuilder.measures,\n                    metadata: columnBuilder.metadata\n                };\n\n                rowAxis = {\n                    indexes: rowBuilder._indexes,\n                    measures: rowBuilder.measures,\n                    metadata: rowBuilder.metadata\n                };\n\n                that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n                that._resize();\n\n                if (that.touchScroller) {\n                    that.touchScroller.contentResized();\n                } else {\n                    var touchScroller = kendo.touchScroller(that.content);\n\n                    if (touchScroller && touchScroller.movable) {\n                        that.touchScroller = touchScroller;\n\n                        touchScroller.movable.bind(\"change\", function(e) {\n                            kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                            that.rowsHeader.scrollTop(-e.sender.y);\n                        });\n                    }\n                }\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that.columnsHeader;\n                var rowsHeader = that.rowsHeader;\n\n                that.content.on(\"scroll\", function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this.content.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    //In Firefox DOMMouseScroll event cannot be canceled\n                    $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                    this.rowsHeader.scrollTop(scrollTop + (-delta));\n                    this.content.scrollTop(scrollTop + (-delta));\n                }\n            }\n        });\n\n        var element = kendo.dom.element;\n        var htmlNode = kendo.dom.html;\n\n        var createMetadata = function(levelNum, memberIdx) {\n           return {\n                maxChildren: 0,\n                children: 0,\n                maxMembers: 0,\n                members: 0,\n                measures: 1,\n                levelNum: levelNum,\n                parentMember: memberIdx !== 0\n            };\n        };\n\n        var buildPath = function(tuple, index) {\n            var path = [];\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                path.push(tuple.members[idx].name);\n            }\n\n            return path;\n        };\n\n        var tupleName = function(tuple, index) {\n            var name = \"\";\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                name += tuple.members[idx].name;\n            }\n\n            return name;\n        };\n\n        var ContentBuilderV2 = Class.extend({\n            init: function(options) {\n                this.dataCellTemplate = kendo.template(options.dataCellTemplate);\n                this.kpiStatusTemplate = kendo.template(options.kpiStatusTemplate);\n                this.kpiTrendTemplate = kendo.template(options.kpiTrendTemplate);\n                this.measures = options.measures;\n                this.ariaId = options.ariaId;\n                this.hash = [];\n            },\n\n            setRowColumnInfo: function(options) {\n                this.data = options.data;\n                this.columnHeaderLeafs = options.columnHeaderLeafs;\n                this.rowHeaderLeafs = options.rowHeaderLeafs;\n                this.columnHeaderBreadth = options.columnHeaderBreadth;\n                this.rowHeaderDepth = options.rowHeaderDepth;\n                this.hash.length = 0;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(data) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < data.length; index++) {\n                    row = $(`<tr class=\"${tableStyles.tableRow} k-pivotgrid-row\" role='presentation'></tr>`);\n                    body.append(row);\n                    that.addColumCell(row, data[index], index);\n                }\n\n                this.rowsCount = data.length;\n            },\n\n            _getTemplate: function(cell, options) {\n                const that = this;\n                let measureType;\n\n                const cellMembers = cell.columnTuple.members;\n                const cellMeasure = cellMembers[cellMembers.length - 1];\n                const measure = that.measures && that.measures.find((measure) => measure.name === cellMeasure.name);\n                const cellValue = cell.data !== null ? cell.data.value : cell.data;\n\n                if (measure && measure.type) {\n                    measureType = measure.type;\n                }\n\n                let template = this.dataCellTemplate;\n                if (this.measures && measureType && cellValue !== \"\") {\n                    if (!options.dataItem) {\n                        options.dataItem = { value: isNaN(Number(cellValue)) ? cellValue : Number(cellValue) };\n                    }\n                    switch (measureType) {\n                        case \"status\":\n                          template = this.kpiStatusTemplate;\n                          break;\n                        case \"trend\":\n                          template = this.kpiTrendTemplate;\n                          break;\n                      }\n                }\n\n                return template(options);\n\n            },\n\n            addColumCell: function(rowEl, rowItem, rowIndex) {\n                var that = this;\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    var cell = rowItem.cells[index];\n                    if (cell) {\n                        var cellEl = $(`<td id=\"${that.ariaId}-cell-${rowIndex + 1}-${index + 1}\" class=\"${tableStyles.tableCell} k-pivotgrid-cell\" role=\"gridcell\"></td>`);\n                        if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                            cellEl.addClass(\"k-pivotgrid-header-total\");\n                        }\n\n                        cellEl.append(that._getTemplate(cell, {\n                            dataItem: cell.data,\n                            rowTuple: cell.rowTuple,\n                            columnTuple: cell.columnTuple\n                        }));\n                        this.hash.push(cell);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n                var that = this;\n\n                var table = $(`<table class='${tableStyles.contentTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='presentation'></tbody></table>`);\n\n                that.table = table;\n                that.addColElements(this.columnHeaderLeafs.length);\n                that.addRowElements(data);\n                this.rowsCount = data.length;\n                this.columnsCount = this.columnHeaderLeafs.length;\n\n                return that.table;\n            }\n        });\n\n        var ColumnRowBuilder = Class.extend({\n            init: function(options) {\n                this.tuples = options.tuples;\n                this.axes = options.axes;\n                this.ariaId = options.ariaId;\n                this.headerTemplate = kendo.template(HEADERTEMPLATE);\n                this._exportData = {};\n                if (options.template) {\n                    this.template = kendo.template(options.template);\n                }\n            },\n\n            setTuples: function(tuples) {\n                this.tuples = tuples;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(columnHeaderRows) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < columnHeaderRows.length; index++) {\n                    row = $('<tr class=\"k-table-row k-pivotgrid-row\" role=\"row\"></tr>');\n                    body.append(row);\n                    that.addColumCell(row, columnHeaderRows[index], index);\n                }\n            },\n\n            _getExportData: function(rowIndex, cell, rowElement) {\n                const pattern = /\\[\\(All\\)\\]/;\n\n                if (cell.levelName.match(pattern)) {\n                    cell.caption = cell.caption.toUpperCase();\n                }\n\n                if (!this._exportData[rowIndex]) {\n                    this._exportData[rowIndex] = { children: [cell], element: rowElement };\n                } else {\n                    this._exportData[rowIndex].children.push(cell);\n                }\n            },\n\n            addColumCell: function(rowEl, rowItem, rowIndex) {\n                var that = this;\n                var cellEl;\n                var cell;\n\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    cell = rowItem.cells[index];\n                    if (cell) {\n                        this._getExportData(rowIndex, cell, rowEl);\n\n                        cellEl = $(that.headerTemplate({\n                            id: `${that.ariaId}-${that.axes == \"columns\" ? \"ch\" : \"rh\"}-${rowIndex + 1}-${index + 1}`,\n                            rowspan: cell.rowSpan,\n                            colspan: cell.colSpan,\n                            key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                            iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                            expandable: cell.hasChildren && !cell.total,\n                            expanded: (cell.children && cell.children.length) ? \"true\" : \"false\",\n                            headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\", cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\"),\n                            role: that.axes == \"columns\" ? \"columnheader\" : \"rowheader\"\n                        }));\n                        cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var tree = toTree((this.tuples || []).slice());\n                var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n                var headerRows = treeData[0];\n                var headerLeafs = treeData[1];\n                var breadth = treeData[2];\n                var rowHeaderBreadth = treeData[3];\n                var that = this;\n                that._tree = tree;\n                that._breadth = breadth;\n                that._headerLeafs = headerLeafs;\n\n                var table = $(`<table class='${tableStyles.headerTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='rowgroup'></tbody></table>`);\n\n                that.table = table;\n                that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n                that.addRowElements(headerRows);\n\n                return that.table;\n            },\n\n            getTree: function() {\n                return this._tree;\n            },\n\n            getBreadth: function() {\n                return this._breadth;\n            },\n\n            getHeaderLeafs: function() {\n                return this._headerLeafs;\n            }\n        });\n\n        var ColumnBuilder = Class.extend({\n            init: function() {\n                this.measures = 1;\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.map = {};\n                this.rows = [];\n                this.rootTuple = root;\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n                var row;\n\n                var cellsLength;\n                var cellIdx;\n                var cells;\n                var cell;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    if (row.rowSpan === 1) {\n                        continue;\n                    }\n\n                    cells = row.children;\n\n                    cellIdx = 0;\n                    cellsLength = cells.length;\n\n                    for (; cellIdx < cellsLength; cellIdx++) {\n                        cell = cells[cellIdx];\n\n                        if (cell.tupleAll) {\n                            cell.attr.rowSpan = row.rowSpan;\n                        }\n                    }\n                }\n            },\n\n            _rowIndex: function(row) {\n                var rows = this.rows;\n                var length = rows.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    if (rows[idx] === row) {\n                        break;\n                    }\n                }\n\n                return idx;\n            },\n\n            _rowLength: function() {\n                var cells = this.rows[0] ? this.rows[0].children : [];\n                var length = cells.length;\n                var rowLength = 0;\n                var idx = 0;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        rowLength += cells[idx].attr.colSpan || 1;\n                    }\n                }\n\n                if (!rowLength) {\n                    rowLength = this.measures;\n                }\n\n                return rowLength;\n            },\n\n            _row: function(tuple, memberIdx, parentMember) {\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var levelNum = tuple.members[memberIdx].levelNum;\n                var rowKey = rootName + levelNum;\n                var map = this.map;\n                var parentRow;\n                var children;\n\n                var row = map[rowKey];\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                    row.rowSpan = 1;\n\n                    map[rowKey] = row;\n                    parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                    if (parentRow) {\n                        children = parentRow.children;\n\n                        if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                            row.notFirst = true;\n                        } else {\n                            row.notFirst = parentRow.notFirst;\n                        }\n                    }\n\n                    this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n                } else {\n                    row.notFirst = false;\n\n                    if (!row.parentMember || row.parentMember !== parentMember) {\n                        row.parentMember = parentMember;\n                        row.collapsed = 0;\n                        row.colSpan = 0;\n                    }\n                }\n\n                return row;\n            },\n\n            _measures: function(measures, tuple, className) {\n                var map = this.map;\n                var row = map.measureRow;\n                var measure;\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                    map.measureRow = row;\n                    this.rows.push(row);\n                }\n\n                for (var idx = 0, length = measures.length; idx < length; idx++) {\n                    measure = measures[idx];\n                    row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n                }\n\n                return length;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx, parentMember) {\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var row, childRow, children, childrenLength;\n                var cell, allCell, cellAttr;\n                var cellChildren = [];\n                var path;\n\n                var idx = 0;\n                var metadata;\n\n                var colSpan;\n                var collapsed = 0;\n                var memberCollapsed = 0;\n\n                if (member.measure) {\n                    this._measures(member.children, tuple);\n                    return;\n                }\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n                row = this._row(tuple, memberIdx, parentMember);\n\n                children = member.children;\n                childrenLength = children.length;\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                    metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        collapsed = metadata.maxChildren;\n                        row.collapsed += collapsed;\n\n                        metadata.children = 0;\n                        childrenLength = 0;\n                    }\n\n                    let cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n                cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n                row.children.push(cell);\n                row.colSpan += 1;\n\n                if (childrenLength) {\n                    allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                    row.children.push(allCell);\n\n                    for (; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx, member);\n                    }\n\n                    colSpan = childRow.colSpan;\n                    collapsed = childRow.collapsed;\n\n                    cell.attr.colSpan = colSpan;\n\n                    metadata.children = colSpan;\n                    metadata.members = 1;\n\n                    row.colSpan += colSpan;\n                    row.collapsed += collapsed;\n                    row.rowSpan = childRow.rowSpan + 1;\n\n                    if (nextMember) {\n                        if (nextMember.measure) {\n                            colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                        } else {\n                            childRow = this._buildRows(tuple, memberIdx + 1);\n                            colSpan = childRow.colSpan;\n\n                            row.collapsed += childRow.collapsed;\n                            memberCollapsed = childRow.collapsed;\n                        }\n\n                        allCell.attr.colSpan = colSpan;\n                        colSpan -= 1;\n\n                        metadata.members += colSpan;\n                        row.colSpan += colSpan;\n                    }\n                } else if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple);\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    metadata.members = colSpan;\n\n                    if (colSpan > 1) {\n                        cell.attr.colSpan = colSpan;\n                        row.colSpan += colSpan - 1;\n                    }\n                }\n\n                if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                    metadata.maxMembers = metadata.members + memberCollapsed;\n                }\n\n                children = metadata.children + collapsed;\n\n                if (metadata.maxChildren < children) {\n                    metadata.maxChildren = children;\n                }\n\n                (allCell || cell).tupleAll = true;\n\n                return row;\n            }\n        });\n\n        var RowBuilder = Class.extend({\n            init: function() {\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _rowLength: function() {\n                var children = this.rows[0].children;\n                var length = 0;\n                var idx = 0;\n\n                var cell = children[idx];\n\n                while (cell) {\n                    length += (cell.attr.colSpan || 1);\n                    cell = children[++idx];\n                }\n\n                return length;\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.rootTuple = root;\n                this.rows = [];\n                this.map = {};\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n\n                var members = this.rootTuple.members;\n                var firstMemberName = members[0].name;\n                var membersLength = members.length;\n                var memberIdx = 0;\n\n                var row;\n                var cell;\n                var maxcolSpan;\n                var map = this.map;\n                var allRow;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                        maxcolSpan = this[members[memberIdx].name];\n                        cell = row.colSpan[\"dim\" + memberIdx];\n\n                        if (cell && cell.colSpan < maxcolSpan) {\n                            cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                        }\n                    }\n                }\n\n                row = map[firstMemberName];\n                allRow = map[firstMemberName + \"all\"];\n\n                if (row) {\n                    row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n                }\n\n                if (allRow) {\n                    allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n                }\n            },\n\n            _row: function(children) {\n                var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n                row.rowSpan = 1;\n                row.colSpan = {};\n\n                this.rows.push(row);\n\n                return row;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx) {\n                var map = this.map;\n                var path;\n\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var children = member.children;\n                var childrenLength = children.length;\n\n                var levelNum = Number(member.levelNum);\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n                var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n                var row = map[parentName + \"all\"] || map[parentName];\n                var colSpan = levelNum + 1;\n\n                var cell, allCell;\n                var childRow, allRow;\n                var metadata;\n                var className;\n                var cellChildren = [];\n                var expandIconAttr;\n                var idx;\n\n                if (!row || row.hasChild) {\n                    row = this._row();\n                } else {\n                    row.hasChild = true;\n                }\n\n                if (member.measure) {\n                    className = row.allCell ? \"k-grid-footer\" : \"\";\n                    row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                    row.rowSpan = childrenLength;\n\n                    for (idx = 1; idx < childrenLength; idx++) {\n                        this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                    }\n\n                    return row;\n                }\n\n                map[tuplePath + member.name] = row;\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                    metadata.rootLevelNum = rootLevelNum;\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        childrenLength = 0;\n                        metadata.children = 0;\n                    }\n\n                    let cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n\n                className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n                cell = this._cell(className, cellChildren, member);\n                cell.colSpan = colSpan;\n\n                row.children.push(cell);\n                row.colSpan[\"dim\" + memberIdx] = cell;\n\n                if (!this[rootName] || this[rootName] < colSpan) {\n                    this[rootName] = colSpan;\n                }\n\n                if (childrenLength) {\n                    row.allCell = false;\n                    row.hasChild = false;\n\n                    for (idx = 0; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx);\n\n                        if (row !== childRow) {\n                            row.rowSpan += childRow.rowSpan;\n                        }\n                    }\n\n                    if (row.rowSpan > 1) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n\n                    metadata.children = row.rowSpan;\n\n                    allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                    allCell.colSpan = colSpan;\n\n                    allRow = this._row([ allCell ]);\n                    allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                    allRow.allCell = true;\n\n                    map[tuplePath + member.name + \"all\"] = allRow;\n\n                    if (nextMember) {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        allCell.attr.rowSpan = childRow.rowSpan;\n                    }\n\n                    row.rowSpan += allRow.rowSpan;\n\n                    metadata.members = allRow.rowSpan;\n\n                } else if (nextMember) {\n                    row.hasChild = false;\n                    this._buildRows(tuple, memberIdx + 1);\n\n                    (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                    metadata.members = row.rowSpan;\n                }\n\n                if (metadata.maxChildren < metadata.children) {\n                    metadata.maxChildren = metadata.children;\n                }\n\n                if (metadata.maxMembers < metadata.members) {\n                    metadata.maxMembers = metadata.members;\n                }\n\n                return row;\n            }\n        });\n\n        var ContentBuilder = Class.extend({\n            init: function() {\n                this.columnAxis = {};\n                this.rowAxis = {};\n            },\n\n            build: function(data, columnAxis, rowAxis) {\n                var index = columnAxis.indexes[0];\n                var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n                this.columnAxis = columnAxis;\n                this.rowAxis = rowAxis;\n\n                this.data = data;\n\n                this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n                if (!this.rowLength) {\n                    this.rowLength = 1;\n                }\n\n                var tbody = this._tbody();\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n                ];\n            },\n\n            _colGroup: function() {\n                var length = this.columnAxis.measures.length || 1;\n                var children = [];\n                var idx = 0;\n\n                if (this.rows[0]) {\n                    length = this.rows[0].children.length;\n                }\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function() {\n                this.rows = [];\n\n                if (this.data[0]) {\n                    this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                    this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                    this._buildRows();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _indexes: function(axisInfo, total) {\n                var result = [];\n                var axisInfoMember;\n                var indexes = axisInfo.indexes;\n                var metadata = axisInfo.metadata;\n                var measures = axisInfo.measures;\n                var measuresLength = measures.length || 1;\n\n                var current;\n                var dataIdx = 0;\n                var firstEmpty = 0;\n\n                var idx = 0;\n                var length = indexes.length;\n                var measureIdx;\n                var index;\n\n                var children;\n                var skipChildren;\n\n                if (!length) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        result[measureIdx] = {\n                            index: measureIdx,\n                            measure: measures[measureIdx],\n                            tuple: null\n                        };\n                    }\n\n                    return result;\n                }\n\n                for (; idx < length; idx++) {\n                    axisInfoMember = indexes[idx];\n                    current = metadata[axisInfoMember.path];\n                    children = current.children + current.members;\n                    skipChildren = 0;\n\n                    if (children) {\n                        children -= measuresLength;\n                    }\n\n                    if (current.expanded === false && current.children !== current.maxChildren) {\n                        skipChildren = current.maxChildren;\n                    }\n\n                    if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                        children = -1;\n                    }\n\n                    if (children > -1) {\n                        for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                            index = children + measureIdx;\n                            if (!current.children) {\n                                index += firstEmpty;\n                            }\n\n                            result[children + firstEmpty + measureIdx] = {\n                                children: children,\n                                index: dataIdx,\n                                measure: measures[measureIdx],\n                                tuple: axisInfoMember.tuple\n                            };\n                            dataIdx += 1;\n                        }\n\n                        while (result[firstEmpty] !== undefined$1) {\n                            firstEmpty += 1;\n                        }\n                    }\n\n                    if (firstEmpty === total) {\n                        break;\n                    }\n\n                    dataIdx += skipChildren;\n                }\n\n                return result;\n            },\n\n            _buildRows: function() {\n                var rowIndexes = this.rowIndexes;\n                var length = rowIndexes.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    var rowIndex = rowIndexes[idx];\n                    if (rowIndex) {\n                        this.rows.push(this._buildRow(rowIndex));\n                    }\n                }\n            },\n\n            _buildRow: function(rowInfo) {\n                var startIdx = rowInfo.index * this.rowLength;\n                var columnIndexes = this.columnIndexes;\n                var length = columnIndexes.length;\n                var columnInfo;\n                var cells = [];\n                var idx = 0;\n\n                var templateInfo;\n                var cell, cellContent;\n                var attr, dataItem, measure;\n\n                for (; idx < length; idx++) {\n                    columnInfo = columnIndexes[idx];\n\n                    if (columnInfo === undefined$1) {\n                        continue;\n                    }\n\n                    attr = { className: tableStyles.tableCell };\n                    if (columnInfo.children) {\n                        attr.className += \" k-alt\";\n                    }\n\n                    cellContent = \"\";\n                    dataItem = this.data[startIdx + columnInfo.index];\n                    measure = columnInfo.measure || rowInfo.measure;\n\n                    templateInfo = {\n                        columnTuple: columnInfo.tuple,\n                        rowTuple: rowInfo.tuple,\n                        measure: measure,\n                        dataItem: dataItem\n                    };\n\n                    if (dataItem.value !== \"\" && measure && measure.type) {\n                        if (measure.type === \"status\") {\n                            cellContent = this.kpiStatusTemplate(templateInfo);\n                        } else if (measure.type === \"trend\") {\n                            cellContent = this.kpiTrendTemplate(templateInfo);\n                        }\n                    }\n\n                    if (!cellContent) {\n                        cellContent = this.dataTemplate(templateInfo);\n                    }\n\n                    cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                    cell.value = dataItem.value;\n                    cells.push(cell);\n                }\n\n                attr = { className: tableStyles.tableRow };\n                if (rowInfo.children) {\n                    attr.className += \" k-grid-footer\";\n                }\n\n                return element(\"tr\", attr, cells);\n            }\n        });\n\n        ui.plugin(PivotGrid);\n\n        kendo.PivotExcelExporter = kendo.Class.extend({\n            init: function(options) {\n                this.options = options;\n\n                this.widget = options.widget;\n                this.dataSource = this.widget.dataSource;\n            },\n\n            _columns: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var width = this.widget.options.columnWidth;\n                var result = [];\n                var idx;\n\n                if (rowHeaderLength && this.dataSource.data()[0]) {\n                    for (idx = 0; idx < rowHeaderLength; idx++) {\n                        result.push({\n                            autoWidth: true\n                        });\n                    }\n                }\n\n                for (idx = 0; idx < columnHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: false,\n                        width: width\n                    });\n                }\n\n                return result;\n            },\n\n            _cells: function(rows, type, callback) {\n                var result = [];\n\n                var i = 0;\n                var length = rows.length;\n\n                var cellsLength;\n                var row, cells;\n                var j, cell;\n\n                for (; i < length; i++) {\n                    row = [];\n                    cells = rows[i].children;\n                    cellsLength = cells.length;\n\n                    for (j = 0; j < cellsLength; j++) {\n                        cell = cells[j];\n\n                        row.push({\n                            background: \"#7a7a7a\",\n                            color: \"#fff\",\n                            value: cell.value,\n                            colSpan: cell.attr.colSpan || 1,\n                            rowSpan: cell.attr.rowSpan || 1\n                        });\n                    }\n\n                    if (callback) {\n                        callback(row, i);\n                    }\n\n                    result.push({\n                        cells: row,\n                        type: type\n                    });\n                }\n\n                return result;\n            },\n\n            _rows: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n                var rowHeaderRows = rowHeaderTable.children[1].children;\n                var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n                var columnRows = this._cells(columnHeaderRows, \"header\");\n\n                if (rowHeaderLength) {\n                    columnRows[0].cells.splice(0, 0, {\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: \"\",\n                        colSpan: rowHeaderLength,\n                        rowSpan: columnHeaderRows.length\n                    });\n                }\n\n                var dataCallback = function(row, index) {\n                    var j = 0;\n                    var cell, value;\n                    var cells = contentRows[index].children;\n\n                    for (; j < columnHeaderLength; j++) {\n                        cell = cells[j];\n                        value = Number(cell.value);\n\n                        if (isNaN(value)) {\n                            value = cell.value;\n                        }\n\n                        row.push({\n                            background: \"#dfdfdf\",\n                            color: \"#333\",\n                            value: value,\n                            colSpan: 1,\n                            rowSpan: 1\n                        });\n                    }\n                };\n\n                var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n                return columnRows.concat(rowRows);\n            },\n\n            _freezePane: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n\n                return {\n                    colSplit: rowHeaderLength,\n                    rowSplit: columnHeaderRows.length\n                };\n            },\n\n            _columnsV2: function() {\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const columnHeaderLength = columnHeaderTable.children[0].children.length;\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                const width = this.widget.options.columnWidth;\n                const result = [];\n\n                if (rowHeaderLength && this.dataSource.data()[0]) {\n                    for (let idx = 0; idx < rowHeaderLength; idx++) {\n                        result.push({\n                            autoWidth: true\n                        });\n                    }\n                }\n\n                for (let idx = 0; idx < columnHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: false,\n                        width: width\n                    });\n                }\n\n                return result;\n            },\n\n            _cellsV2: function(rows, type, callback) {\n                const result = [];\n\n                const length = Object.keys(rows).length;\n\n                for (let i = 0; i < length; i++) {\n                    const row = [];\n                    const cells = rows[i].children;\n                    const cellsLength = cells.length;\n\n                    for (let j = 0; j < cellsLength; j++) {\n                        const cell = cells[j];\n\n                        row.push({\n                            background: \"#7a7a7a\",\n                            color: \"#fff\",\n                            value: cell.caption,\n                            colSpan: cell.colSpan || 1,\n                            rowSpan: cell.rowSpan || 1\n                        });\n                    }\n\n                    if (callback) {\n                        callback(row, i);\n                    }\n\n                    result.push({\n                        cells: row,\n                        type: type\n                    });\n                }\n\n                return result;\n            },\n\n            _rowsV2: function() {\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const columnHeaderLength = columnHeaderTable.children[0].children.length;\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                const columnHeaderRows = this.widget._columnBuilder._exportData;\n                const rowHeaderRows = this.widget._rowBuilder._exportData;\n                const contentCells = this.widget._contentBuilder.hash;\n\n                const columnRows = this._cellsV2(columnHeaderRows, \"header\");\n\n                if (rowHeaderLength) {\n                    columnRows[0].cells.splice(0, 0, {\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: \"\",\n                        colSpan: rowHeaderLength,\n                        rowSpan: Object.keys(columnHeaderRows).length\n                    });\n                }\n\n                const dataCallback = function(row, index) {\n                    const startingIndex = index * columnHeaderLength;\n                    const endIndex = (index + 1) * columnHeaderLength;\n\n                    for (let j = startingIndex; j < endIndex; j++) {\n                        const cell = contentCells[j];\n\n                        const cellValue = cell.data !== null ? cell.data.value : cell.data;\n                        let value = Number(cellValue);\n\n                        if (isNaN(value)) {\n                            value = cellValue;\n                        }\n\n                        row.push({\n                            background: \"#dfdfdf\",\n                            color: \"#333\",\n                            value: value,\n                            colSpan: 1,\n                            rowSpan: 1\n                        });\n                    }\n                };\n\n                const rowRows = this._cellsV2(rowHeaderRows, \"data\", dataCallback);\n\n                return columnRows.concat(rowRows);\n            },\n\n\n            _freezePaneV2: function() {\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n                const columnHeaderRows = columnHeaderTable.children[1].children.length;\n\n                return {\n                    colSplit: rowHeaderLength,\n                    rowSplit: columnHeaderRows\n                };\n            },\n\n            _filterV2: function() {\n                const that = this;\n\n                if (!that.options.excel.filterable) {\n                    return null;\n                }\n\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n                const columnHeaderLength = columnHeaderTable.children[0].children.length;\n\n                const additionalRows = rowHeaderLength - 1;\n\n                return {\n                    from: rowHeaderLength,\n                    to: columnHeaderLength + additionalRows\n                };\n            },\n\n\n            workbook: function() {\n                var promise,\n                    resolveFn = function() {\n                        if (this.widget.options.name === \"PivotGridV2\") {\n                            return {\n                                sheets: [ {\n                                    columns: this._columnsV2(),\n                                    rows: this._rowsV2(),\n                                    freezePane: this._freezePaneV2(),\n                                    filter: this._filterV2(),\n                                } ]\n                            };\n                        }\n                        return {\n                            sheets: [ {\n                                columns: this._columns(),\n                                rows: this._rows(),\n                                freezePane: this._freezePane(),\n                                filter: null\n                            } ]\n                        };\n                    };\n\n                if (this.dataSource.view()[0]) {\n                    promise = $.Deferred();\n                    promise.resolve();\n                } else {\n                    promise = this.dataSource.fetch();\n                }\n\n                return promise.then(resolveFn.bind(this));\n            }\n        });\n\n        var PivotExcelMixin = {\n            extend: function(proto) {\n               proto.events.push(\"excelExport\");\n               proto.options.excel = $.extend(proto.options.excel, this.options);\n               proto.saveAsExcel = this.saveAsExcel;\n            },\n            options: {\n                proxyURL: \"\",\n                filterable: false,\n                fileName: \"Export.xlsx\"\n            },\n            saveAsExcel: function() {\n                var excel = this.options.excel || {};\n\n                var exporter = new kendo.PivotExcelExporter({\n                    widget: this,\n                    excel\n                });\n\n                if (this._progress) {\n                    this._isExport = true;\n                    this._progress(true);\n                }\n\n                var resolveFn = function(book) {\n                    if (!this.trigger(\"excelExport\", { workbook: book })) {\n                        var workbook = new kendo.ooxml.Workbook(book);\n\n                        workbook.toDataURLAsync().then(function(dataURI) {\n                            kendo.saveAs({\n                                dataURI: dataURI,\n                                fileName: book.fileName || excel.fileName,\n                                proxyURL: excel.proxyURL,\n                                forceProxy: excel.forceProxy\n                            });\n                        }).always(() => {\n                            if (this._progress) {\n                                this._progress(false);\n                                this._isExport = false;\n                            }\n                        });\n                    }\n                };\n\n                exporter.workbook().then(resolveFn.bind(this));\n            }\n        };\n\n        kendo.PivotExcelMixin = PivotExcelMixin;\n\n        if (kendo.ooxml && kendo.ooxml.Workbook) {\n            PivotExcelMixin.extend(PivotGrid.prototype);\n        }\n\n        if (kendo.ooxml && kendo.ooxml.Workbook) {\n            PivotExcelMixin.extend(PivotGridV2.prototype);\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGrid.prototype);\n\n            PivotGrid.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n            PivotGridV2.prototype._saveAsPDF = kendo.PDFMixin.saveAsPDF;\n\n            PivotGridV2.fn.saveAsPDF = function() {\n                if (this._progress) {\n                    this._isExport = true;\n                    this._progress(true);\n                }\n                this._saveAsPDF().always(() => {\n                    if (this._progress) {\n                        this._progress(false);\n                        this._isExport = false;\n                    }\n                });\n            };\n\n            PivotGridV2.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}