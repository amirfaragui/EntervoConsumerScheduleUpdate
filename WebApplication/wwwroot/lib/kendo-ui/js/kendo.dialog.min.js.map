{"version":3,"file":"kendo.dialog.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodialog","js","this","$","undefined$1","templates","kendo","window","Widget","ui","TabKeyTrap","Popup","template","keys","isFunction","encode","htmlEncode","NS","KDIALOGWRAP","KWINDOW","KCLOSE","KCONTENTSELECTOR","KSCROLL","KDIALOGTITLE","KDIALOGTITLEBAR","KBUTTONGROUP","KBUTTON","VISIBLE","ZINDEX","BODY","INITOPEN","TOUCHSTART","TOUCHMOVE","OPEN","CLOSE","SHOW","HIDE","SIZE","small","medium","large","HIDDEN","OVERFLOW","DATADOCOVERFLOWRULE","DATAHTMLTAPYRULE","ceil","Math","defined","x","constrain","value","low","high","max","min","parseInt","Infinity","buttonKeyTrigger","e","keyCode","ENTER","SPACEBAR","DialogBase","extend","init","element","options","that","fn","call","_init","notify","_showWatermarkOverlay","wrapper","_centerCallback","_center","bind","appendTo","visible","is","wrapperTemplate","_createDialog","closest","dialogWrapper","_defaultFocus","_tabindex","_dimensions","modal","_isDialog","width","height","style","indexOf","_tabKeyTrap","_triggerOpen","hide","setOptions","sizeClass","size","removeClass","getValidCssClass","themeColor","title","content","destroy","children","html","actions","remove","_createActionbar","show","_closable","addClass","_enableDocumentScrolling","name","dimensions","i","length","css","_setElementMaxHeight","toString","outerWidth","minWidth","maxWidth","outerHeight","minHeight","maxHeight","_setElementHeight","elementMaxHeight","parseFloat","_uiHeight","elementHeight","_applyScrollClassName","get","scrollHeight","actionbar","actionbarHeight","offsetHeight","titlebar","_closeClick","preventDefault","close","_closeKeyHandler","ESC","_keydown","_closing","closable","isRtl","support","titleId","id","guid","append","find","toggleClass","attr","titlebarActions","prepend","autoApplyNS","on","buttonLayout","_addButtons","action","text","actionClick","_actionClick","actionKeyHandler","_actionKeyHandler","_mergeTextWithOptions","cssClass","data","target","closeBtn","actionButtons","tabIndex","_runActionBtn","currentTarget","sender","toFront","_triggerInitOpen","trigger","preventScroll","_stopDocumentScrolling","_focusDialog","open","overlay","showOptions","_animationOptions","kendoStop","duration","effects","Fade","overlayFx","fx","fadeIn","endValue","play","kendoAnimate","complete","_openAnimationEnd","animation","_initOpenTriggered","zIndex","originalZIndex","center","each","zIndexNew","isNaN","systemTriggered","arguments","_close","_stopCenterOnResize","hideOptions","userTriggered","_handleDocumentScrolling","reverse","_closeAnimationEnd","_centerOnResize","documentWindow","newLeft","newTop","left","top","_trackResize","onResize","unbindResize","modals","_modals","$body","_storeOverflowRule","$html","mobileOS","ios","addEventListener","_touchStart","passive","_touchMove","changedTouches","pageY","$target","upScroll","preventYScroll","scrollTop","clientHeight","document","body","_restoreOverflowRule","removeData","removeEventListener","$element","_isOverflowStored","overflowRule","overflow","previousFocus","_previousFocus","lastModal","_object","last","setTimeout","focus","zStack","filter","containment","sort","a","b","widget","widgetInstance","_destroy","ns","off","encodedHtml","prependTo","firstModal","first","activeElement","_focus","trap","node","events","Dialog","messages","plugin","PopupBox","alertWrapper","_ensureContentId","_ariaDescribedBy","_initFocus","o","_chooseEntryFocus","location","host","okText","cancel","promptInput","Alert","Confirm","result","Deferred","primary","resolve","reject","Prompt","_createPrompt","promptContainer","promptInputContainer","insertAfter","input","TextBox","icon","iconClass","alert","confirm","prompt","kendoAlert","kendoConfirm","kendoPrompt","jQuery"],"sources":["kendo.dialog.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.popup.js'), require('kendo.textbox.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.popup', 'kendo.textbox', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendodialog = global.kendodialog || {}, global.kendodialog.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n            id: \"dialog\",\n            name: \"Dialog\",\n            category: \"web\", // suite\n            description: \"The dialog widget is a modal popup that brings information to the user.\",\n            depends: [\"core\", \"popup\", \"textbox\", \"icons\"] // dependencies\n        };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                Widget = kendo.ui.Widget,\n                TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n                template = kendo.template,\n                keys = kendo.keys,\n                isFunction = kendo.isFunction,\n                encode = kendo.htmlEncode,\n                NS = \"kendoWindow\",\n                KDIALOG = \".k-dialog\",\n                KDIALOGWRAP = \".k-dialog-wrapper\",\n                KWINDOW = \".k-window\",\n                KCLOSE = \"[data-role='close']\",\n                KCONTENTCLASS = \"k-window-content k-dialog-content\",\n                KCONTENTSELECTOR = \".k-window-content\",\n                KSCROLL = \"k-scroll\",\n                KDIALOGTITLE = \".k-dialog-title\",\n                KDIALOGTITLEBAR = \".k-dialog-titlebar\",\n                KBUTTONGROUP = \".k-dialog-actions\",\n                // KACTIONS = \".k-actions\",\n                KBUTTON = \".k-button\",\n                KTEXTBOX = \".k-input-inner\",\n                KOVERLAY = \".k-overlay\",\n                VISIBLE = \":visible\",\n                ZINDEX = \"zIndex\",\n                BODY = \"body\",\n                INITOPEN = \"initOpen\",\n                TOUCHSTART = \"touchstart\",\n                TOUCHMOVE = \"touchmove\",\n                OPEN = \"open\",\n                CLOSE = \"close\",\n                SHOW = \"show\",\n                HIDE = \"hide\",\n                SIZE = {\n                    small: \"k-window-sm\",\n                    medium: \"k-window-md\",\n                    large: \"k-window-lg\"\n                },\n                HIDDEN = \"hidden\",\n                OVERFLOW = \"overflow\",\n                DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n                DATAHTMLTAPYRULE = \"tap-y\",\n                messages = {\n                    okText: \"OK\",\n                    cancel: \"Cancel\",\n                    promptInput: \"Input\"\n                },\n                ceil = Math.ceil,\n                templates;\n\n            function defined(x) {\n                return (typeof x != \"undefined\");\n            }\n\n            function constrain(value, low, high) {\n                return Math.max(Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)), parseInt(low, 10));\n            }\n\n            function buttonKeyTrigger(e) {\n                return e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR;\n            }\n\n            var DialogBase = Widget.extend({\n                init: function(element, options) {\n                    var that = this;\n                    Widget.fn.init.call(that, element, options);\n                    that._init(that.element, that.options);\n                    kendo.notify(that);\n                    if (that._showWatermarkOverlay) {\n                        that._showWatermarkOverlay(that.wrapper[0]);\n                    }\n                },\n\n                _init: function(element, options) {\n                    var that = this,\n                        wrapper;\n\n                    that._centerCallback = that._center.bind(that);\n\n                    that.appendTo = $(BODY);\n                    if (!defined(options.visible) || options.visible === null) {\n                        options.visible = element.is(VISIBLE);\n                    }\n\n                    if (that.wrapperTemplate === undefined$1) {\n                        that.wrapperTemplate = templates.wrapper;\n                    }\n\n                    that._createDialog();\n                    wrapper = that.wrapper = element.closest(KDIALOG);\n                    that.dialogWrapper = wrapper.closest(KDIALOGWRAP);\n\n                    if (options._defaultFocus === undefined$1) {\n                        that._defaultFocus = element[0];\n                    }\n\n                    that._tabindex(element);\n                    that._dimensions();\n\n                    if (!options.modal && that._isDialog()) {\n                        that.dialogWrapper.width(that.wrapper.width());\n                        that.dialogWrapper.height(that.wrapper.height());\n                        if (that.wrapper[0].style.width.indexOf(\"%\") > -1) {\n                            that.wrapper[0].style.width = \"100%\";\n                        }\n                        if (that.wrapper[0].style.height.indexOf(\"%\") > -1) {\n                            that.wrapper[0].style.height = \"100%\";\n                        }\n                    }\n\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n\n                    if (!that.options.visible) {\n                        that.dialogWrapper.hide();\n                    } else {\n                        that._triggerOpen();\n                    }\n                },\n\n                setOptions: function(options) {\n                    var that = this;\n                    var sizeClass = that.options.size;\n                    that.wrapper.removeClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", that.options.themeColor));\n\n                    options = $.extend(that.options, options);\n\n                    Widget.fn.setOptions.call(that, options);\n\n                    if (options.title !== undefined$1) {\n                        that.title(options.title);\n                    }\n\n                    if (options.content) {\n                        kendo.destroy(that.element.children());\n                        that.element.html(options.content);\n                    }\n\n                    if (options.actions) {\n                        that.wrapper.children(KBUTTONGROUP).remove();\n                        that._createActionbar(that.wrapper);\n                    }\n\n                    that.dialogWrapper.show();\n                    that._closable(that.wrapper);\n\n                    that.wrapper.removeClass(SIZE[sizeClass]);\n                    that._dimensions();\n\n                    if (!options.visible) {\n                        that.dialogWrapper.hide();\n                    } else {\n                        that._triggerOpen();\n                    }\n\n                    if (options.themeColor && options.themeColor !== \"none\") {\n                        that.wrapper.addClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", that.options.themeColor));\n                    }\n\n                    if (typeof options.modal !== \"undefined\") {\n                        that._enableDocumentScrolling();\n                    }\n                },\n\n                _isDialog: function() {\n                    return this.options.name === \"Dialog\";\n                },\n\n                _dimensions: function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        width = options.width,\n                        height = options.height,\n                        sizeClass = options.size,\n                        dimensions = [\"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\n\n                    for (var i = 0; i < dimensions.length; i++) {\n                        var value = options[dimensions[i]];\n                        if (value && value != Infinity) {\n                            wrapper.css(dimensions[i], value);\n                        }\n                    }\n\n                    this._setElementMaxHeight();\n\n                    if (width) {\n                        if (width.toString().indexOf(\"%\") > 0) {\n                            wrapper.width(width);\n                        } else {\n                            wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                        }\n                    }\n\n                    if (height) {\n                        if (height.toString().indexOf(\"%\") > 0) {\n                            wrapper.height(height);\n                        } else {\n                            wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                        }\n\n                        this._setElementHeight();\n                    }\n\n                    if (sizeClass && SIZE[sizeClass]) {\n                        wrapper.addClass(SIZE[sizeClass]);\n                    }\n                },\n\n                _setElementMaxHeight: function() {\n                    var that = this,\n                        element = that.element,\n                        maxHeight = that.options.maxHeight,\n                        elementMaxHeight;\n\n                    if (maxHeight != Infinity) {\n                        elementMaxHeight = parseFloat(maxHeight, 10) - that._uiHeight();\n                        if (elementMaxHeight > 0) {\n                            element.css({\n                                maxHeight: ceil(elementMaxHeight) + \"px\"\n                            });\n                        }\n                    }\n\n                },\n\n                _setElementHeight: function() {\n                    var that = this,\n                        element = that.element,\n                        height = that.wrapper.outerHeight(true),\n                        elementHeight = parseFloat(height, 10) - that._uiHeight();\n\n                    if (elementHeight < 0) {\n                        elementHeight = 0;\n                    }\n\n                    element.css({\n                        height: ceil(elementHeight) + \"px\"\n                    });\n\n                    this._applyScrollClassName(element);\n\n                },\n\n                _applyScrollClassName: function(element) {\n                        var hasScroll = element.get(0).scrollHeight > element.outerHeight();\n\n                        if (hasScroll) {\n                            element.addClass(KSCROLL);\n                        } else {\n                            element.removeClass(KSCROLL);\n                        }\n                },\n\n                _uiHeight: function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        actionbar = wrapper.children(KBUTTONGROUP),\n                        actionbarHeight = actionbar[0] && actionbar[0].offsetHeight || 0,\n                        titlebar = wrapper.children(KDIALOGTITLEBAR),\n                        titlebarHeight = titlebar[0] && titlebar[0].offsetHeight || 0;\n\n                    return actionbarHeight + titlebarHeight;\n                },\n\n                _closeClick: function(e) {\n                    e.preventDefault();\n                    this.close(false);\n                },\n\n                _closeKeyHandler: function(e) {\n                    if (buttonKeyTrigger(e) || e.keyCode == keys.ESC) {\n                        this.close(false);\n                    }\n                },\n\n                _keydown: function(e) {\n                    var that = this,\n                        options = that.options,\n                        keyCode = e.keyCode;\n\n                    if (keyCode == keys.ESC && !that._closing && options.closable) {\n                        that.close(false);\n                    }\n                },\n\n                _createDialog: function() {\n                    var that = this,\n                        content = that.element,\n                        options = that.options,\n                        isRtl = kendo.support.isRtl(content),\n                        titlebar = $(templates.titlebar(options)),\n                        titleId = (content.id || kendo.guid()) + \"_title\",\n                        wrapper = $(that.wrapperTemplate(options));\n\n                    content.addClass(KCONTENTCLASS);\n                    that.appendTo.append(wrapper);\n                    wrapper = wrapper.find(\".k-dialog\");\n                    wrapper.toggleClass(\"k-rtl\", isRtl);\n\n                    if (options.title !== false) {\n                        wrapper.append(titlebar);\n                        titlebar.attr(\"id\", titleId);\n                        wrapper.attr(\"aria-labelledby\", titleId);\n                    }\n\n                    that._closable(wrapper);\n\n                    wrapper.append(content);\n                    if (options.themeColor && options.themeColor !== \"none\") {\n                        wrapper.addClass(wrapper.addClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", options.themeColor)));\n                    }\n\n                    if (options.content) {\n                        kendo.destroy(content.children());\n                        content.html(options.content);\n                    }\n\n                    if (options.actions.length) {\n                        that._createActionbar(wrapper);\n                    }\n                },\n\n                _closable: function(wrapper) {\n                    var that = this;\n                    var options = that.options;\n                    var titlebar = wrapper.children(KDIALOGTITLEBAR);\n                    var titlebarActions = titlebar.find(\".k-window-titlebar-actions\");\n                    var closeAction = titlebarActions.length ? titlebarActions.find(KCLOSE) : wrapper.find(KCLOSE);\n\n                    closeAction.remove();\n\n                    if (options.closable !== false) {\n                        if (options.title !== false && titlebarActions.length) {\n                            titlebarActions.append(templates.close(options));\n                        }\n                        else {\n                            wrapper.prepend(templates.close(options));\n                        }\n\n                        wrapper.autoApplyNS(NS);\n                        that.element.autoApplyNS(NS);\n\n                        wrapper.find(KCLOSE)\n                            .on(\"click\", that._closeClick.bind(that))\n                            .on(\"keydown\", that._closeKeyHandler.bind(that));\n\n                        that.element.on(\"keydown\", that._keydown.bind(that));\n                    }\n                },\n\n                _createActionbar: function(wrapper) {\n                    var isStretchedLayout = (this.options.buttonLayout === \"stretched\");\n                    var buttonLayout = isStretchedLayout ? \"stretched\" : \"end\";\n                    var actionbar = $(templates.actionbar({ buttonLayout: buttonLayout }));\n\n                    this._addButtons(actionbar);\n                    wrapper.append(actionbar);\n                },\n\n                _addButtons: function(actionbar) {\n                    var that = this,\n                        actionClick = that._actionClick.bind(that),\n                        actionKeyHandler = that._actionKeyHandler.bind(that),\n                        actions = that.options.actions,\n                        length = actions.length,\n                        action,\n                        text;\n\n                    for (var i = 0; i < length; i++) {\n                        action = actions[i];\n                        text = that._mergeTextWithOptions(action);\n\n                        $(templates.action(action, text))\n                            .autoApplyNS(NS)\n                            .appendTo(actionbar)\n                            .addClass(action.cssClass)\n                            .data(\"action\", action.action)\n                            .on(\"click\", actionClick)\n                            .on(\"keydown\", actionKeyHandler);\n                    }\n                },\n\n                _mergeTextWithOptions: function(action) {\n                    var text = action.text;\n\n                    if (isFunction(text)) {\n                        return text(this.options);\n                    }\n\n                    return text ? text : \"\";\n                },\n\n                _tabindex: function(target) {\n                    var that = this;\n                    var wrapper = that.wrapper;\n                    var closeBtn = wrapper.find(KCLOSE);\n                    var actionButtons = wrapper.find(KBUTTONGROUP + \" \" + KBUTTON);\n\n                    Widget.fn._tabindex.call(this, target);\n\n                    var tabIndex = target.attr(\"tabindex\");\n\n                    closeBtn.attr(\"tabIndex\", tabIndex);\n                    actionButtons.attr(\"tabIndex\", tabIndex);\n                },\n\n                _actionClick: function(e) {\n                    if (this.dialogWrapper.is(VISIBLE)) {\n                        this._runActionBtn(e.currentTarget);\n                    }\n                },\n\n                _actionKeyHandler: function(e) {\n                    if (buttonKeyTrigger(e)) {\n                        e.preventDefault();\n                        this._runActionBtn(e.currentTarget);\n                    } else if (e.keyCode == keys.ESC) {\n                        this.close(false);\n                    }\n                },\n\n                _runActionBtn: function(target) {\n                    var that = this;\n                    if (that._closing) {\n                        return;\n                    }\n\n                    var action = $(target).data(\"action\"),\n                        preventClose = (isFunction(action) && action({ sender: that }) === false);\n\n                    if (!preventClose) {\n                        that.close(false);\n                    }\n                },\n\n                _triggerOpen: function() {\n                    var that = this;\n                    var options = that.options;\n\n                    that.toFront();\n                    that._triggerInitOpen();\n                    that.trigger(OPEN);\n                    if (options.modal) {\n                        if (options.modal.preventScroll) {\n                            that._stopDocumentScrolling();\n                        }\n                        that._focusDialog();\n                    }\n                },\n\n                open: function() {\n                    var that = this,\n                        wrapper = that.dialogWrapper,\n                        showOptions = this._animationOptions(OPEN),\n                        options = that.options,\n                        overlay;\n\n                    this._triggerInitOpen();\n\n                    if (!that.trigger(OPEN)) {\n                        if (that._closing) {\n                            wrapper.kendoStop(true, true);\n                        }\n\n                        that._closing = false;\n\n                        that.toFront();\n                        options.visible = true;\n                        if (options.modal) {\n                            overlay = that.dialogWrapper.find(KOVERLAY);\n                            if (options.modal.preventScroll) {\n                                that._stopDocumentScrolling();\n                            }\n\n                            overlay.kendoStop(true, true);\n\n                            if (showOptions.duration && kendo.effects.Fade) {\n                                var overlayFx = kendo.fx(overlay).fadeIn();\n                                overlayFx.duration(showOptions.duration || 0);\n                                overlayFx.endValue(0.5);\n                                overlayFx.play();\n                            }\n                            that.dialogWrapper.show();\n\n                        }\n\n                        (options.modal ? that.wrapper : that.dialogWrapper).show().kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: that._openAnimationEnd.bind(that)\n                        });\n                        wrapper.show();\n\n                    }\n\n                    return that;\n                },\n\n                _animationOptions: function(id) {\n                    var animation = this.options.animation;\n                    var basicAnimation = {\n                        open: { effects: {} },\n                        close: { hide: true, effects: {} }\n                    };\n\n                    return animation && animation[id] || basicAnimation[id];\n                },\n\n                _openAnimationEnd: function() {\n                    if (this.options.modal) {\n                        this._focusDialog();\n                    }\n                    this.trigger(SHOW);\n                },\n\n                _triggerInitOpen: function() {\n                    if (!defined(this._initOpenTriggered)) {\n                        this._initOpenTriggered = true;\n                        this.trigger(INITOPEN);\n                    }\n                },\n\n                toFront: function() {\n                    var that = this,\n                        wrapper = that.dialogWrapper,\n                        zIndex = +wrapper.css(ZINDEX),\n                        originalZIndex = zIndex;\n\n                    that.center();\n\n                    $(KWINDOW + \",\" + KDIALOGWRAP).each(function(i, element) {\n                        var windowObject = $(element),\n                            zIndexNew = windowObject.css(ZINDEX);\n\n                        if (!isNaN(zIndexNew)) {\n                            zIndex = Math.max(+zIndexNew, zIndex);\n                        }\n                    });\n\n                    if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                        wrapper.css(ZINDEX, zIndex + 2);\n                    }\n\n                    wrapper = null;\n\n                    return that;\n                },\n\n                close: function(systemTriggered) {\n                    if (!arguments.length) {\n                        systemTriggered = true;\n                    }\n\n                    this._close(systemTriggered);\n                    this._stopCenterOnResize();\n                    return this;\n                },\n\n                _close: function(systemTriggered) {\n                    var that = this,\n                        wrapper = that.dialogWrapper,\n                        options = that.options,\n                        showOptions = this._animationOptions(\"open\"),\n                        hideOptions = this._animationOptions(\"close\");\n\n                    if (wrapper.is(VISIBLE) && !that.trigger(CLOSE, { userTriggered: !systemTriggered })) {\n                        if (that._closing) {\n                            return;\n                        }\n                        that._closing = true;\n\n                        options.visible = false;\n                        this._handleDocumentScrolling();\n\n                        (options.modal ? that.wrapper : that.dialogWrapper).kendoStop().kendoAnimate({\n                            effects: hideOptions.effects || showOptions.effects,\n                            reverse: hideOptions.reverse === true,\n                            duration: hideOptions.duration,\n                            complete: this._closeAnimationEnd.bind(this)\n                        });\n                    }\n\n                    return that;\n                },\n\n                center: function() {\n                    this._center();\n                    this._centerOnResize();\n                },\n\n                _center: function() {\n                    var that = this,\n                        wrapper = that.dialogWrapper,\n                        documentWindow = $(window),\n                        scrollTop = 0,\n                        scrollLeft = 0,\n                        newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.width()) / 2),\n                        newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.height() - parseInt(wrapper.css(\"paddingTop\"), 10)) / 2);\n\n                    wrapper.css({\n                        left: newLeft,\n                        top: newTop\n                    });\n\n                    return that;\n                },\n\n                _centerOnResize: function() {\n                    if (this._trackResize) {\n                        return;\n                    }\n\n                    kendo.onResize(this._centerCallback);\n                    this._trackResize = true;\n                },\n\n                _stopCenterOnResize: function() {\n                    kendo.unbindResize(this._centerCallback);\n                    this._trackResize = false;\n                },\n\n                _handleDocumentScrolling: function() {\n                    var modals = this._modals();\n                    var options = this.options;\n                    var hideOverlay = options.modal && !modals.length;\n\n                    if (hideOverlay && options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    } else if (modals.length && options.modal.preventScroll) {\n                         this._stopDocumentScrolling();\n                    }\n                },\n\n                _stopDocumentScrolling: function() {\n                    var that = this;\n\n                    var $body = $(\"body\");\n                    that._storeOverflowRule($body);\n                    $body.css(OVERFLOW, HIDDEN);\n\n                    var $html = $(\"html\");\n                    var html = $html[0];\n                    that._storeOverflowRule($html);\n                    $html.css(OVERFLOW, HIDDEN);\n\n                    // prevent touch due to bug in ios\n                    if (kendo.support.mobileOS.ios) {\n                        html.addEventListener(TOUCHSTART, that._touchStart, { passive: false });\n                        html.addEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n                    }\n                },\n\n                _touchStart: function(e) {\n                    $(this).data(DATAHTMLTAPYRULE, e.changedTouches[0].pageY);\n                },\n\n                _touchMove: function(e) {\n                    var target = e.target;\n                    var $target = $(e.target);\n                    var upScroll = e.changedTouches[0].pageY - $(this).data(DATAHTMLTAPYRULE) > 0;\n                    var preventYScroll = $target.is(KCONTENTSELECTOR) &&\n                        (upScroll && $target.scrollTop() === 0) ||\n                        (!upScroll && $target.scrollTop() === target.scrollHeight - target.clientHeight);\n                    if (!$target.is(KCONTENTSELECTOR) || preventYScroll) {\n                        e.preventDefault();\n                    }\n                },\n\n                _enableDocumentScrolling: function() {\n                    var that = this;\n                    var $body = $(document.body);\n                    var $html = $(\"html\");\n                    var html = $html[0];\n\n                    that._restoreOverflowRule($body);\n                    that._restoreOverflowRule($html);\n\n                    if (kendo.support.mobileOS.ios) {\n                        $html.removeData(DATAHTMLTAPYRULE);\n                        html.removeEventListener(TOUCHSTART, that._touchStart, { passive: false });\n                        html.removeEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n                    }\n                },\n\n                _storeOverflowRule: function($element) {\n                    if (this._isOverflowStored($element)) {\n                        return;\n                    }\n\n                    var overflowRule = $element.get(0).style.overflow;\n\n                    if (typeof overflowRule === \"string\") {\n                        $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                    }\n                },\n\n                _isOverflowStored: function($element) {\n                    return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n                },\n\n                _restoreOverflowRule: function($element) {\n                    var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                    if (overflowRule !== null && overflowRule !== undefined$1) {\n                        $element.css(OVERFLOW, overflowRule);\n                        $element.removeData(DATADOCOVERFLOWRULE);\n                    } else {\n                        $element.css(OVERFLOW, \"\");\n                    }\n                },\n\n                _closeAnimationEnd: function() {\n                    var that = this,\n                        previousFocus = that._previousFocus;\n\n                    that._closing = false;\n                    that.dialogWrapper.hide().css(\"opacity\", \"\");\n                    that.trigger(HIDE);\n\n                    if (that.options.modal) {\n                        var lastModal = that._object(that._modals().last());\n                        if (lastModal) {\n                            lastModal.toFront();\n                        } else if (previousFocus) {\n                            that._previousFocus = null;\n\n                            setTimeout(function() {\n                                previousFocus.focus();\n                            });\n                        }\n                    }\n                },\n\n                _modals: function() {\n                    var that = this;\n\n                    var zStack = $(KWINDOW + \",\" + KDIALOGWRAP).filter(function() {\n                        var modal = that._object($(this));\n\n                        return modal &&\n                            modal.options &&\n                            modal.options.modal &&\n                            modal.options.visible &&\n                            modal.options.appendTo === that.options.appendTo &&\n                            !modal.containment &&\n                            $(modal.element).is(VISIBLE);\n                    });\n\n                    zStack = [].sort.call(zStack, function(a, b) {\n                        return +$(a).css(\"zIndex\") - +$(b).css(\"zIndex\");\n                    });\n\n                    that = null;\n\n                    return zStack;\n                },\n\n                _object: function(element) {\n                    var content = element.find(KCONTENTSELECTOR);\n                    var widget = kendo.widgetInstance(content);\n\n                    if (widget) {\n                        return widget;\n                    }\n\n                    return undefined$1;\n                },\n\n                destroy: function() {\n                    var that = this;\n                    that._destroy();\n\n                    Widget.fn.destroy.call(that);\n\n                    kendo.destroy(that.wrapper);\n\n                    that.dialogWrapper.remove();\n                    that.dialogWrapper = that.wrapper = that.element = $();\n                },\n\n                _destroy: function() {\n                    var that = this;\n                    var ns = \".\" + NS;\n\n                    that.wrapper.off(ns);\n                    that.element.off(ns);\n                    that.wrapper.find(KCLOSE + \",\" + KBUTTONGROUP + \" > \" + KBUTTON).off(ns);\n                    that._stopCenterOnResize();\n                },\n\n                title: function(html) {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        titlebar = wrapper.children(KDIALOGTITLEBAR),\n                        title = titlebar.children(KDIALOGTITLE),\n                        encodedHtml = encode(html);\n\n                    if (!arguments.length) {\n                        return title.html();\n                    }\n\n                    if (html === false) {\n                        titlebar.remove();\n                    } else {\n                        if (!titlebar.length) {\n                            titlebar = $(templates.titlebar(options)).prependTo(wrapper);\n                            title = titlebar.children(KDIALOGTITLE);\n                        }\n                        title.html(encodedHtml);\n                    }\n\n                    that.options.title = encodedHtml;\n\n                    return that;\n                },\n\n                content: function(html) {\n                    var that = this,\n                        content = that.wrapper.children(KCONTENTSELECTOR);\n\n                    if (!defined(html)) {\n                        return content.html();\n                    }\n\n                    kendo.destroy(content.children());\n                    content.html(html);\n\n                    that.options.content = html;\n\n                    return that;\n                },\n\n                _focusDialog: function() {\n                    var firstModal = this._object(this._modals().first());\n\n                    this._previousFocus = firstModal && firstModal._previousFocus ? firstModal._previousFocus : document.activeElement;\n\n                    if (this._defaultFocus) {\n                        this._focus(this._defaultFocus);\n                    }\n                    this._tabKeyTrap.trap();\n                },\n\n                _focus: function(node) {\n                    if (node) {\n                        node.focus();\n                    }\n                },\n\n                events: [\n                    INITOPEN,\n                    OPEN,\n                    CLOSE,\n                    SHOW,\n                    HIDE\n                ],\n\n                options: {\n                    title: \"\",\n                    buttonLayout: \"stretched\",\n                    themeColor: \"\",\n                    actions: [],\n                    modal: true,\n                    size: \"auto\",\n                    width: null,\n                    height: null,\n                    minWidth: 0,\n                    minHeight: 0,\n                    maxWidth: Infinity,\n                    maxHeight: Infinity,\n                    content: null,\n                    visible: null,\n                    appendTo: BODY,\n                    closable: true\n                }\n            });\n\n            var Dialog = DialogBase.extend({\n                options: {\n                    name: \"Dialog\",\n                    messages: {\n                        close: \"Close\"\n                    }\n                }\n            });\n\n            kendo.ui.plugin(Dialog);\n\n            var PopupBox = DialogBase.extend({\n                _init: function(element, options) {\n                    var that = this;\n\n                    that.wrapperTemplate = templates.alertWrapper;\n                    options._defaultFocus = null;\n                    that._ensureContentId(element);\n\n                    DialogBase.fn._init.call(that, element, options);\n\n                    that.bind(HIDE, that.destroy.bind(that));\n\n                    that._ariaDescribedBy();\n                    that._initFocus();\n                },\n\n                _ensureContentId: function(element) {\n                    var node = $(element);\n                    if (!node.attr(\"id\")) {\n                        node.attr(\"id\", kendo.guid() + \"_k-popup\");\n                    }\n                },\n\n                _ariaDescribedBy: function() {\n                    this.wrapper.attr(\"aria-describedby\", this.element.attr(\"id\"));\n                },\n\n                _initFocus: function() {\n                    var o = this.options;\n\n                    this._defaultFocus = this._chooseEntryFocus();\n                    if (this._defaultFocus && o.visible && o.modal) {\n                        this._focusDialog();\n                    }\n                },\n\n                _chooseEntryFocus: function() {\n                    return this.wrapper.find(KBUTTONGROUP + \" > \" + KBUTTON)[0];\n                },\n\n                options: {\n                    title: window.location.host,\n                    closable: false,\n                    messages: messages\n                }\n            });\n\n            var Alert = PopupBox.extend({\n                _init: function(element, options) {\n                    var that = this;\n                    PopupBox.fn._init.call(that, element, options);\n                },\n\n                options: {\n                    name: \"Alert\",\n                    modal: true,\n                    actions: [{\n                        text: ({ messages }) => `${encode(messages.okText)}`\n                    }]\n                }\n            });\n\n            kendo.ui.plugin(Alert);\n\n            var kendoAlert = function(text) {\n                return $(templates.alert).kendoAlert({ content: text }).data(\"kendoAlert\").open();\n            };\n\n            var Confirm = PopupBox.extend({\n                _init: function(element, options) {\n                    var that = this;\n                    PopupBox.fn._init.call(that, element, options);\n                    that.result = $.Deferred();\n                },\n\n                options: {\n                    name: \"Confirm\",\n                    modal: true,\n                    actions: [{\n                        text: ({ messages }) => `${encode(messages.okText)}`,\n                        primary: true,\n                        action: function(e) {\n                            e.sender.result.resolve();\n                        }\n                    }, {\n                        text: ({ messages }) => `${encode(messages.cancel)}`,\n                        action: function(e) {\n                            e.sender.result.reject();\n                        }\n                    }]\n                }\n            });\n\n            kendo.ui.plugin(Confirm);\n\n            var kendoConfirm = function(text) {\n                var confirmDialog = $(templates.confirm).kendoConfirm({ content: text }).data(\"kendoConfirm\").open();\n                return confirmDialog.result;\n            };\n\n            var Prompt = PopupBox.extend({\n                _init: function(element, options) {\n                    var that = this;\n                    PopupBox.fn._init.call(that, element, options);\n                    that._createPrompt();\n                    that.result = $.Deferred();\n                },\n\n                _createPrompt: function() {\n                    var value = this.options.value,\n                        promptContainer = $(templates.promptInputContainer(this.options)).insertAfter(this.element);\n\n                    this.input = new kendo.ui.TextBox(promptContainer.find(\"input\"));\n\n                    if (value) {\n                        this.input.value(value);\n                    }\n\n                    this._defaultFocus = this._chooseEntryFocus();\n                    this._focusDialog();\n                },\n\n                _chooseEntryFocus: function() {\n                    return this.wrapper.find(KTEXTBOX)[0];\n                },\n\n                options: {\n                    name: \"Prompt\",\n                    modal: true,\n                    value: \"\",\n                    actions: [{\n                        text: ({ messages }) => `${encode(messages.okText)}`,\n                        primary: true,\n                        action: function(e) {\n                            var sender = e.sender,\n                                value = sender.input.value();\n\n                            sender.result.resolve(value);\n                        }\n                    }, {\n                        text: ({ messages }) => `${encode(messages.cancel)}`,\n                        action: function(e) {\n                            var sender = e.sender,\n                                value = sender.input.value();\n\n                            e.sender.result.reject(value);\n                        }\n                    }]\n                }\n            });\n\n            kendo.ui.plugin(Prompt);\n\n            var kendoPrompt = function(text, value) {\n                var promptDialog = $(templates.prompt).kendoPrompt({\n                    content: text,\n                    value: value\n                }).data(\"kendoPrompt\").open();\n\n                return promptDialog.result;\n            };\n\n            templates = {\n                wrapper: template((options) => `<div class='k-dialog-wrapper'>${options.modal ? '<div class=\"k-overlay\"></div>' : ''}<div class='k-window k-dialog' role='dialog'></div></div>`),\n                action: template((data, text) => `<button type='button' class='k-button k-button-md k-rounded-md k-button-solid ${data.primary ? 'k-button-solid-primary' : 'k-button-solid-base'}'><span class=\"k-button-text\">${encode(text)}</span></button>`),\n                titlebar: template(({ title }) =>\n                    \"<div class='k-window-titlebar k-dialog-titlebar'>\" +\n                        `<span class='k-window-title k-dialog-title'>${encode(title)}</span>` +\n                        \"<div class='k-window-titlebar-actions k-dialog-titlebar-actions'></div>\" +\n                    \"</div>\"\n                ),\n                close: template(({ messages }) => `<button class=\"k-window-titlebar-action k-dialog-titlebar-action k-button k-button-md k-button-flat k-button-flat-base k-rounded-md k-icon-button\" data-role=\"close\" title='${encode(messages.close)}' aria-label='${encode(messages.close)}' tabindex='-1'>\n                                                    ${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}\n                                                </button>`),\n                actionbar: template(({ buttonLayout }) => `<div class='k-dialog-actions k-actions k-actions-horizontal k-window-actions k-actions-${encode(buttonLayout)}'></div>`),\n                alertWrapper: template(() => \"<div class='k-dialog-wrapper'><div class='k-overlay'></div><div class='k-window k-dialog' role='alertdialog'></div></div>\"),\n                alert: \"<div></div>\",\n                confirm: \"<div></div>\",\n                prompt: \"<div></div>\",\n                promptInputContainer: template(({ messages }) => `<div class='k-prompt-container'><input type='text' title='${encode(messages.promptInput)}' aria-label='${encode(messages.promptInput)}' /></div>`)\n            };\n\n            kendo.alert = kendoAlert;\n            kendo.confirm = kendoConfirm;\n            kendo.prompt = kendoPrompt;\n\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}